{"version":3,"sources":["webpack:///src/app/pages/candidate/components/card-condidate/card-condidate.component.html","webpack:///src/app/pages/candidate/components/update/cv-condidate/cv-condidate.component.html","webpack:///src/app/pages/candidate/components/update/experience-condidate/experience-condidate.component.html","webpack:///src/app/pages/candidate/components/update/formation-condidate/formation-condidate.component.html","webpack:///src/app/pages/candidate/components/update/langue-condidate/langue-condidate.component.html","webpack:///src/app/pages/candidate/components/update/links-condidate/links-condidate.component.html","webpack:///src/app/pages/candidate/components/update/objectif-condidate/objectif-condidate.component.html","webpack:///src/app/pages/candidate/components/update/profil-condidate/profil-condidate.component.html","webpack:///src/app/pages/candidate/components/update/skils-condidate/skils-condidate.component.html","webpack:///src/app/pages/candidate/components/update/video-condidate/video-condidate.component.html","webpack:///src/app/pages/candidate/candidate-routing.module.ts","webpack:///src/app/pages/candidate/candidate.module.ts","webpack:///src/app/pages/candidate/components/card-condidate/card-condidate.component.scss","webpack:///src/app/pages/candidate/components/card-condidate/card-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/cv-condidate/cv-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/cv-condidate/cv-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/experience-condidate/experience-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/experience-condidate/experience-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/formation-condidate/formation-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/formation-condidate/formation-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/langue-condidate/langue-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/langue-condidate/langue-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/links-condidate/links-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/links-condidate/links-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/objectif-condidate/objectif-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/objectif-condidate/objectif-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/profil-condidate/profil-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/profil-condidate/profil-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/skils-condidate/skils-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/skils-condidate/skils-condidate.component.ts","webpack:///src/app/pages/candidate/components/update/video-condidate/video-condidate.component.scss","webpack:///src/app/pages/candidate/components/update/video-condidate/video-condidate.component.ts"],"names":["routes","path","component","CandidateRoutingModule","imports","forChild","exports","CandidateModule","declarations","CardCondidateComponent","modalController","authService","globalService","actionSheetController","loadingController","pictureUtilsService","zone","toastService","fileService","candidateService","trans","languages","hasChanged","disabled","values","softSkills","oldPercentage","getLanguageCandidate","console","log","user","setPercentage","candidate","percentage","value","picture","calculePercentage","map","lang","languageIndex","findIndex","x","_id","language","languageLevelIndex","languagesLevels","languageLevel","index","locations","objectifLocationIndex","location","name","objectifLocation","changes","subscribe","res","create","header","buttons","text","icon","handler","syncing","setTimeout","loading","dismiss","error","present","uploadFromCamera","then","imageData","run","file","per","Number","Object","assign","Math","round","toFixed","updatePicture","response","setChanges","success","_error","uploadFromGallery","alert","actionSheet","modal","role","candidateDashboard","dashboard","softSkillsSize","filter","checked","length","valuesSize","selector","template","CvCondidateComponent","type","updateCV","ExperienceCondidateComponent","fb","transService","functions","activitySectors","inWork","initForm","form","setValues","group","experiences","array","getExperienceFields","job","required","startedDate","endDate","company","activitySector","validator","checkDates","min","Date","controls","setHours","max","dateError","control","fields","splice","forEach","val","push","ctrl","get","removeAt","calc","updateExperience","FormationCondidateComponent","levelOfStudies","trainings","getTrainings","studyLevel","typeOfTraining","yearOfGraduation","school","training","getFullYear","updateTraining","LangueCondidateComponent","languagesList","item","programingLanguages","logiciel","reset","i","updateLanguage","LinksCondidateComponent","webSite","blog","linkedin","instagram","twitter","facebook","updateSocialNetworks","ObjectifCondidateComponent","jobType","searchedPost","jobMode","supposedSalaryMin","supposedSalaryMax","usageTitles","contracts","checkSupposedSalary","salaryErreur","updateGoals","ProfilCondidateComponent","firstName","lastName","birthday","gender","phoneNumber","availability","currentJob","currentSalary","managerialLevel","effective","goal","experienceYears","updateInfos","SkilsCondidateComponent","skills","updateSoftSkills","VideoCondidateComponent","video","setValue","updateVideo"],"mappings":"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","file":"pages-candidate-candidate-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"goBack()\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button routerLink=\\\"/dashboard/settings\\\">\\n                <ion-icon slot=\\\"icon-only\\\" ios=\\\"settings-outline\\\" md=\\\"settings-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Profil candidat</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\" appScrollToTop>\\n    <section class=\\\"condidate-card\\\" >\\n        <div class=\\\"page-content\\\">\\n\\n            <ion-row class=\\\"mt-1 py-1\\\">\\n                <ion-col size=\\\"12\\\">\\n                    <!-- <ion-icon class=\\\"d-inline icon-blue-title mr-1\\\" src=\\\"./assets/icon/apprentice.svg\\\"></ion-icon> -->\\n                    <span class=\\\"blue-title\\\">Profil complété à :  </span>\\n                </ion-col>\\n                <ion-col size=\\\"12\\\">\\n                    <div class=\\\"progressbar w-100\\\">\\n                        <div class=\\\"porcent\\\" [ngStyle]=\\\"{'width': (candidateService.percentage | async | number: '1.0-0') + '%'}\\\">\\n                            <div class=\\\"counter text-center\\\">\\n                                {{ candidateService.percentage | async | number: '1.0-0' }} %\\n                             </div>\\n                        </div>\\n                    </div>\\n\\n                    <!-- <div class=\\\"progressbar w-100\\\">\\n                        <div class=\\\"porcent\\\"\\n                            [ngStyle]=\\\"{'width': (authService.user.candidate.percentage | number: '1.0-0') + '%'}\\\">\\n                            {{ authService.user.candidate.percentage | number: '1.0-0' }} %\\n                        </div>\\n                    </div> -->\\n                </ion-col>\\n            </ion-row>\\n\\n            <div class=\\\"condidate-profil\\\">\\n                <div class=\\\"d-block position-relative mr-auto pt-1\\\" style=\\\"width: 120px\\\">\\n                    <img class=\\\"circle-image\\\"\\n                        [src]=\\\"authService.user.picture ? (('backend_url' | env) + authService.user.picture.name) : \\n                    (authService.user['gender'] === 'masculin' ? '/assets/img/male.svg' : '/assets/img/female.svg' )\\\"\\n                        alt=\\\"profil\\\">\\n                    <div class=\\\"change-photo\\\" (click)=\\\"addImageAction()\\\">\\n                        <mat-icon color=\\\"primary\\\">edit</mat-icon>\\n                    </div>\\n                </div>\\n                <ion-row class=\\\"mt-1 py-1 pb-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"name ml-1\\\">{{ authService.user.firstName }} {{ authService.user.lastName }}</div>\\n                    </ion-col>\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"post ml-1\\\">{{ authService.user['currentJob'] }}</div>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n\\n            <div class=\\\"bg-light border-bottom px-1 py-2\\\">\\n                <p class=\\\"desciption text-center mb-1\\\">\\n                    {{ authService.user['goal'] }}\\n                </p>\\n                <div class=\\\"links cursor-pointer\\\" (click)=\\\"editProfil()\\\">\\n                    Modifier profil\\n                </div>\\n            </div>\\n\\n            <div class=\\\"objectif bg-light\\\">\\n                <h3 class=\\\"title\\\">OBJECTIF ACTUEL</h3>\\n                <ion-row class=\\\"ion-justify-content-center mt-1 py-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"info\\\">{{ authService.user['searchedPost'] }} </div>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"info\\\"> {{ objectifLocation }} </div>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1 pb-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"info\\\">{{ authService.user['supposedSalaryMax'] }} DH</div>\\n                    </ion-col>\\n                </ion-row>\\n                <div class=\\\"links cursor-pointer\\\" (click)=\\\"editObjectif()\\\">\\n                    Modifier mon objectif\\n                </div>\\n            </div>\\n\\n            <div class=\\\"video bg-light border-bottom\\\">\\n                <h3 class=\\\"title\\\">VIDÉO</h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"11\\\" class=\\\"text-center\\\">\\n                        <div *ngIf=\\\"authService.user['video'] else uploadVideo\\\">\\n                            <video width=\\\"100%\\\" height=\\\"200px\\\" controls>\\n                                <source [src]=\\\"('backend_url' | env) + authService.user['video'].name\\\">\\n                            </video>\\n                        </div>\\n                        <ng-template #uploadVideo>\\n                            <img class=\\\"w-100\\\" src=\\\"./assets/img/default-video.svg\\\" alt=\\\"Add Video\\\">\\n                        </ng-template>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editVideo()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"experience bg-light border-bottom\\\">\\n                <h3 class=\\\"title\\\">EXPÉRIENCES</h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\">mediation</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>Expérience : <br></span>\\n                        <div class=\\\"exeprience-details\\\" *ngFor=\\\"let experience of authService.user['experiences']\\\">\\n                            {{ experience.startedDate | date:'MM-yyyy' }} - \\n                            <span *ngIf=\\\"experience.endDate\\\"> {{ experience.endDate | date:'MM-yyyy' }} :</span>\\n                            <span *ngIf=\\\"!experience.endDate\\\"> en cours :</span>\\n                            {{ experience.job }}\\n                        </div>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editExperience()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"formation bg-light border-bottom\\\">\\n                <h3 class=\\\"title\\\">FORMATIONS</h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\">school</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>Formations : </span>\\n                        <div class=\\\"formation-details\\\" *ngFor=\\\"let item of authService.user['trainings']\\\">\\n                            {{ item.yearOfGraduation }} :\\n                            {{ item.name }}\\n                        </div>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editFormation()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"cv bg-light border-bottom\\\">\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\" class=\\\"mr-1\\\">article</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>CV</span>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editCV()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"langue bg-light\\\">\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\" class=\\\"mr-1\\\">g_translate</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>LANGUE</span>\\n                        <div *ngFor=\\\"let item of languages\\\">\\n                            {{ item.language.name }} :\\n                            {{ item.languageLevel.name }}\\n                        </div>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editLangue()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"skils bg-light border-bottom pb-3\\\">\\n                <h3 class=\\\"title\\\">SOFT SKILLS / VALEURS\\n                    <mat-icon class=\\\"align-middle ml-1\\\" color=\\\"primary\\\" (click)=\\\"editSkils()\\\">add</mat-icon>\\n                </h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-linkedin.svg\\\" alt=\\\"linkedin\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['linkedin'] else addLinkedIn\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['linkedin']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addLinkedIn>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un compte linkedin</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-blogger.svg\\\" alt=\\\"blogger\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['blog'] else addBlog\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['blog']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addBlog>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un lien blog</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-website.svg\\\" alt=\\\"website\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['webSite'] else addWebSite\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['webSite']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addWebSite>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajouter le lien de site web</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-instagram.svg\\\" alt=\\\"instagram\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['instagram'] else addInstagram\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['instagram']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addInstagram>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un compte instagram</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-twitter.svg\\\" alt=\\\"twitter\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['twitter'] else addTwitter\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['twitter']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addTwitter>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un compte twitter</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-facebook.svg\\\" alt=\\\"facebook\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['facebook'] else addFacebook\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{ authService.user['facebook'] }}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addFacebook>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajouter le compte facebook</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n\\n                <div class=\\\"links cursor-pointer\\\" (click)=\\\"editLinks()\\\">\\n                    Modifier vos réseau sociaux\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n\\n</ion-content>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <!-- <ion-buttons slot=\\\"end\\\">\\n            <ion-button [disabled]=\\\"!file\\\" (click)=\\\"onSave()\\\">\\n                Enregistrer\\n            </ion-button>\\n        </ion-buttons> -->\\n        <ion-title>Mon CV</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content\\\">\\n            <div class=\\\"d-block\\\">\\n                <app-file-uploader [data]=\\\"value\\\" (fileChanges)=\\\"fileChanges($event)\\\"></app-file-uploader>\\n            </div>\\n        </div>\\n        <div class=\\\"text-right mt-2\\\">\\n            <ion-button type=\\\"submit\\\" [disabled]=\\\"!file\\\" (click)=\\\"onSave()\\\">\\n                Enregistrer\\n            </ion-button>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Mes expériences</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\" formArrayName=\\\"experiences\\\">\\n\\n                <ng-container\\n                    *ngFor=\\\"let experience of form.get('experiences')['controls']; let i=index; let last=last;\\\"\\n                    [formGroupName]=\\\"i\\\">\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Emploi occupé <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"job\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('job').invalid &&\\n                    form.get('experiences')['controls'][i].get('job').errors.required && (form.get('experiences')['controls'][i].get('job').dirty || form.get('experiences')['controls'][i].get('job').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-select\\\">\\n                            <ion-label position=\\\"floating\\\">Fonction <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"function\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.functions\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('function').invalid && (form.get('experiences')['controls'][i].get('function').dirty || form.get('experiences')['controls'][i].get('function').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-datetime w-100\\\">\\n                                <ion-label position=\\\"floating\\\">Date debut <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-datetime placeholder=\\\"De\\\" formControlName=\\\"startedDate\\\">\\n                                </ion-datetime>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('experiences')['controls'][i].get('startedDate').invalid && (form.get('experiences')['controls'][i].get('startedDate').dirty || form.get('experiences')['controls'][i].get('startedDate').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-datetime w-100\\\">\\n                                <ion-label position=\\\"floating\\\">Date fin</ion-label>\\n                                <ion-datetime placeholder=\\\"À\\\" formControlName=\\\"endDate\\\" [disabled]=\\\"inWork\\\">\\n                                </ion-datetime>\\n                            </ion-item>\\n                        </div>\\n                    </div>\\n\\n                    <small class=\\\"text-error\\\" *ngIf=\\\"\\n            form.get('experiences')['controls'][i].get('startedDate').touched && \\n            form.get('experiences')['controls'][i].get('endDate').touched &&\\n            form.get('experiences')['controls'][i].hasError('dateError')\\\">\\n                        Date fin doit être supérieur de la date debut\\n                    </small>\\n\\n                    <!-- <div class=\\\"w-40\\\">\\n                        <ion-item class=\\\"custom-checkbox\\\" lines=\\\"none\\\">\\n                            <ion-label class=\\\"ml-1\\\">En poste</ion-label>\\n                            <ion-checkbox class=\\\"ion-no-margin\\\" color=\\\"primary\\\" slot=\\\"start\\\"\\n                                (ionChange)=\\\"inWordChange()\\\">\\n                            </ion-checkbox>\\n                        </ion-item>\\n                    </div> -->\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Entreprise <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"company\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('company').invalid && (form.get('experiences')['controls'][i].get('company').dirty || form.get('experiences')['controls'][i].get('company').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-select\\\">\\n                            <ion-label position=\\\"floating\\\">Secteur d’activité <span class=\\\"required\\\">*</span>\\n                            </ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"activitySector\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.activitySectors\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('activitySector').invalid && (form.get('experiences')['controls'][i].get('activitySector').dirty || form.get('experiences')['controls'][i].get('activitySector').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Lieu <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('location').invalid && (form.get('experiences')['controls'][i].get('location').dirty || form.get('experiences')['controls'][i].get('location').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"text-right mt-1\\\">\\n                        <ion-button fill=\\\"outline\\\" class=\\\"btn-outline-danger ml-30\\\" color=\\\"danger\\\"\\n                            *ngIf=\\\"form.controls['experiences']['controls'].length > 1\\\"\\n                            (click)=\\\"removeField(i, 'experiences')\\\">\\n                            Supprimer\\n                        </ion-button>\\n                    </div>\\n                </ng-container>\\n                <div class=\\\"text-left mt-1\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline\\\" color=\\\"primary\\\"\\n                        [disabled]=\\\"!form.controls.experiences.valid\\\" (click)=\\\"addField('experiences')\\\">\\n                        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                        Ajouter une Expérience\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Mes formations</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n\\n            <ion-item class=\\\"custom-select w-100\\\">\\n                <ion-label position=\\\"floating\\\">Niveau d'études le plus élevé</ion-label>\\n                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                    formControlName=\\\"levelOfStudies\\\">\\n                    <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                        {{item.name}}</ion-select-option>\\n                </ion-select>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('levelOfStudies').invalid && (form.get('levelOfStudies').dirty || form.get('levelOfStudies').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n            </ion-item>\\n\\n            <div class=\\\"mt-2\\\" formArrayName=\\\"trainings\\\">\\n\\n                <ng-container *ngFor=\\\"let training of form.get('trainings')['controls']; let i=index; let last=last;\\\"\\n                    [formGroupName]=\\\"i\\\">\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Intitulé de la formation <span class=\\\"required\\\">*</span>\\n                            </ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('name').invalid && (form.get('trainings')['controls'][i].get('name').dirty || form.get('trainings')['controls'][i].get('name').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <ion-item class=\\\"custom-select w-100\\\">\\n                        <ion-label position=\\\"floating\\\">Niveau d'études</ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"studyLevel\\\">\\n                            <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                                {{item.name}}</ion-select-option>\\n                        </ion-select>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('studyLevel').invalid && (form.get('trainings')['controls'][i].get('studyLevel').dirty || form.get('trainings')['controls'][i].get('studyLevel').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </ion-item>\\n\\n\\n                    <ion-item class=\\\"custom-select w-100\\\">\\n                        <ion-label position=\\\"floating\\\">Type de formation</ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"typeOfTraining\\\">\\n                            <ion-select-option *ngFor=\\\"let item of globalService.typeOfTrainings\\\" [value]=\\\"item._id\\\">\\n                                {{item.name}}</ion-select-option>\\n                        </ion-select>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('typeOfTraining').invalid && (form.get('trainings')['controls'][i].get('typeOfTraining').dirty || form.get('trainings')['controls'][i].get('typeOfTraining').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </ion-item>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">École <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"school\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('school').invalid && (form.get('trainings')['controls'][i].get('school').dirty || form.get('trainings')['controls'][i].get('school').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-datetime w-100\\\">\\n                                <ion-label position=\\\"floating\\\">Année d’obtention</ion-label>\\n                                <ion-datetime placeholder=\\\"De\\\" displayFormat=\\\"YYYY\\\" pickerFormat=\\\"YYYY\\\"\\n                                    formControlName=\\\"yearOfGraduation\\\">\\n                                </ion-datetime>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('trainings')['controls'][i].get('yearOfGraduation').invalid && (form.get('trainings')['controls'][i].get('yearOfGraduation').dirty || form.get('trainings')['controls'][i].get('yearOfGraduation').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Lieu <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('trainings')['controls'][i].get('location').invalid && (form.get('trainings')['controls'][i].get('location').dirty || form.get('trainings')['controls'][i].get('location').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"text-right mt-1\\\">\\n                        <ion-button fill=\\\"outline\\\" class=\\\"btn-outline-danger ml-30\\\" color=\\\"danger\\\"\\n                            *ngIf=\\\"form.controls['trainings']['controls'].length > 1\\\"\\n                            (click)=\\\"removeField(i, 'trainings')\\\">\\n                            Supprimer\\n                        </ion-button>\\n                    </div>\\n                </ng-container>\\n                <div class=\\\"text-left mt-1\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline\\\" color=\\\"primary\\\"\\n                        [disabled]=\\\"!form.controls.trainings || !form.controls.trainings.valid\\\"\\n                        (click)=\\\"addField('trainings')\\\">\\n                        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                        Ajouter une Formation\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button (click)=\\\"onSave()\\\" [disabled]=\\\"languagesList.length <= 0\\n                || form.get('programingLanguages.logiciel').value?.length <= 0\\n                || form.get('programingLanguages.language').value?.length <= 0\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Langue</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div formGroupName=\\\"languages\\\">\\n                    <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n\\n                        <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-label position=\\\"floating\\\">Langue</ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"language\\\">\\n                                <ion-select-option\\n                                    *ngFor=\\\"let item of globalService.languages | languages:languagesList\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n\\n                        <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-label position=\\\"floating\\\">Niveau de langue</ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"languageLevel\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.languagesLevels\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"mb-1 mt-1\\\">\\n                    <ul class=\\\"customList\\\">\\n                        <li *ngFor=\\\"let item of languagesList;let i =index;\\\">\\n                            <span class=\\\"text-primary text-left\\\">\\n                                {{ item.language.name }} : {{ item.languageLevel.name}}\\n                            </span>\\n                            <mat-icon class=\\\"cursor-pointer btn-round vertical-align ml-1\\\" (click)=\\\"deleteLanguage(i)\\\">\\n                                close\\n                            </mat-icon><br>\\n                        </li>\\n                    </ul>\\n                </div>\\n\\n                <div class=\\\"mt-1 mb-1 text-left\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline w-40\\\" color=\\\"primary\\\" (click)=\\\"addLanguage()\\\">\\n                        Ajouter\\n                        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n                    </ion-button>\\n                </div>\\n\\n                <div class=\\\"mb-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\"\\n                    formGroupName=\\\"programingLanguages\\\">\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <app-multi-select label=\\\"Langages informatiques\\\" collection=\\\"programmingLanguages\\\"\\n                            formControlName=\\\"language\\\"></app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.language').value?.length <= 0\\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <app-multi-select label=\\\"Logiciels informatiques\\\" collection=\\\"logiciels\\\"\\n                            formControlName=\\\"logiciel\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.logiciel').value?.length <= 0\\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" (click)=\\\"onSave()\\\" [disabled]=\\\"languagesList.length <= 0\\n                || form.get('programingLanguages.logiciel').value?.length <= 0\\n                || form.get('programingLanguages.language').value?.length <= 0\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Mes liens</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/website-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Site internet</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"webSite\\\">\\n                        <span matPrefix>www.</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/blogger-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Blog</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"blog\\\">\\n                        <span matPrefix>www.</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/linkedin-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Linkedin</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"linkedin\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/instagram-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Instagram</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"instagram\\\">\\n                        <span matPrefix>@</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/twitter-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Twitter</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"twitter\\\">\\n                        <span matPrefix>@</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/facebook-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Facebook</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"facebook\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Mon objectif</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n                <div class=\\\"d-block\\\">\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Poste souhaité <span class=\\\"required\\\">*</span>\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\" formControlName=\\\"searchedPost\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('searchedPost').invalid && (form.get('searchedPost').dirty || form.get('searchedPost').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <app-multi-select label=\\\"Intitulés d'usage\\\" collection=\\\"usageTitles\\\"\\n                                formControlName=\\\"usageTitles\\\">\\n                            </app-multi-select>\\n                            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('usageTitles').value?.length\\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <app-multi-select label=\\\"Type de contrat\\\" collection=\\\"contracts\\\"\\n                                formControlName=\\\"contracts\\\">\\n                            </app-multi-select>\\n                            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('contracts').value?.length\\\">\\n                                Veuillez choisir au moins un type de contrat.\\n                            </small>\\n                        </div>\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-select\\\">\\n                                <ion-label position=\\\"floating\\\">Type de Poste <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                    formControlName=\\\"jobType\\\">\\n                                    <ion-select-option *ngFor=\\\"let item of globalService.jobTypes\\\" [value]=\\\"item._id\\\">\\n                                        {{item.name}}</ion-select-option>\\n                                </ion-select>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('jobType').invalid && (form.get('jobType').dirty || form.get('jobType').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <app-multi-select label=\\\"Fonction\\\" collection=\\\"functions\\\" formControlName=\\\"functions\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('functions').value?.length\\\">\\n                            Veuillez choisir au moins une fonction.\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n\\n                        <app-multi-select label=\\\"Secteur d’activité \\\" collection=\\\"activitySectors\\\"\\n                            formControlName=\\\"activitySector\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('activitySector').value?.length\\\">\\n                            Veuillez choisir au moins un secteur d’activité.\\n                        </small>\\n\\n                    </div>\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-select w-100 \\\">\\n                            <ion-label position=\\\"floating\\\">Mode de travail <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"jobMode\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.jobModes\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('jobMode').invalid && (form.get('jobMode').dirty || form.get('jobMode').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <app-multi-select label=\\\"Lieu\\\" collection=\\\"locations\\\" formControlName=\\\"locations\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('locations').value?.length\\\">\\n                            Veuillez choisir au moins une ville.\\n                        </small>\\n                    </div>\\n\\n                    <h4 class=\\\"pt-2\\\">Prétentions salariales (Dhs)</h4>\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">À partir de <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMin\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('supposedSalaryMin').invalid && (form.get('supposedSalaryMin').dirty || form.get('supposedSalaryMin').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Jusqu'à <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMax\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('supposedSalaryMax').invalid && (form.get('supposedSalaryMax').dirty || form.get('supposedSalaryMax').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                    </div>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('supposedSalaryMax').touched && !form.get('supposedSalaryMax').hasError('required') && form.hasError('salaryErreur')\\\">\\n                        Le salaire maximum doit être supérieur au salaire minimum\\n                    </small>\\n                </div>\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.get('usageTitles').value?.length\\n                || !form.get('functions').value?.length \\n                || !form.get('activitySector').value?.length\\n                || !form.get('locations').value?.length\\n                || !form.get('contracts').value?.length\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Mon profil</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content mt-2\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Nom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('lastName').invalid && (form.get('lastName').dirty || form.get('lastName').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Prénom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('firstName').invalid && (form.get('firstName').dirty || form.get('firstName').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-datetime\\\">\\n                            <ion-label position=\\\"floating\\\">Date Naissance <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-datetime placeholder=\\\"Choissez votre date\\\" formControlName=\\\"birthday\\\">\\n                            </ion-datetime>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('birthday').invalid && (form.get('birthday').dirty || form.get('birthday').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select\\\">\\n                            <ion-label position=\\\"floating\\\">Sexe <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"gender\\\">\\n                                <ion-select-option value=\\\"masculin\\\">Homme</ion-select-option>\\n                                <ion-select-option value=\\\"feminin\\\">Femme</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('gender').invalid && (form.get('gender').dirty || form.get('gender').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <div class=\\\"w-100 custom-input\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Téléphone (+212)<span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"tel\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\n                            </ion-item>\\n                        </div>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('phoneNumber').invalid && (form.get('phoneNumber').dirty || form.get('phoneNumber').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Disponiblité <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"availability\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.availabilities\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('availability').invalid && (form.get('availability').dirty || form.get('availability').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"100%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Nombre d’années d’experience <span class=\\\"required\\\">*</span>\\n                            </ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"experienceYears\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.experiences\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experienceYears').invalid && (form.get('experienceYears').dirty || form.get('experienceYears').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <ion-item class=\\\"custom-input w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Poste actuel <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"currentJob\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('currentJob').invalid && (form.get('currentJob').dirty || form.get('currentJob').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n\\n                <ion-item class=\\\"custom-input w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Préciser salaire actuel (Dhs) <span class=\\\"required\\\">*</span>\\n                    </ion-label>\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"currentSalary\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('currentSalary').invalid && (form.get('currentSalary').dirty || form.get('currentSalary').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Niv. managérial <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"managerialLevel\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.managerialLevels\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('managerialLevel').invalid && (form.get('managerialLevel').dirty || form.get('managerialLevel').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Effectif Géré <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"effective\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.effectives\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('effective').invalid && (form.get('effective').dirty || form.get('effective').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <ion-item class=\\\"custom-input w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Objectif <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"goal\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('goal').invalid && (form.get('goal').dirty || form.get('goal').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Soft skills</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n                <div class=\\\"text-center mt-2\\\">\\n                    <p> Vos softskills sont très importants pour les recruteurs.\\n                        Choisissez dans la liste les 5 softskills qui vous représentent le plus.\\n                    </p>\\n                </div>\\n                <app-multi-select label=\\\"Mes soft skills\\\" [limit] = \\\"5\\\" collection=\\\"softSkills\\\" formControlName=\\\"skills\\\">\\n                </app-multi-select>\\n                <div class=\\\"text-center mt-2\\\">\\n                    <p>En recrutement une valeur est parfois plus\\n                        décisive qu’une compétence.\\n                        Renforcer la qualité de votre profil en\\n                        séléctionnant dans la liste les 6 valeurs qui vous\\n                        correspondent</p>\\n                </div>\\n                <app-multi-select label=\\\"Mes valeurs\\\" [limit] = \\\"6\\\" collection=\\\"values\\\" formControlName=\\\"values\\\">\\n                </app-multi-select>\\n            \\n            </form>\\n        </div>\\n        <div class=\\\"text-right mt-2\\\">\\n            <ion-button type=\\\"submit\\\" (click)=\\\"onSave()\\\" [disabled]=\\\"form.get('values').value?.length < 6\\n            ||  form.get('skills').value?.length < 5 ? true : false\\\">\\n                Enregistrer\\n            </ion-button>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Vidéo</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content mt-4\\\">\\n            <app-file-uploader [data]=\\\"value\\\" (fileChanges)=\\\"fileChanges($event)\\\"></app-file-uploader>\\n        </div>\\n        <div class=\\\"text-right mt-2\\\">\\n            <ion-button type=\\\"submit\\\" [disabled]=\\\"!file\\\" (click)=\\\"onSave()\\\">\\n                Enregistrer\\n            </ion-button>\\n        </div>\\n    </section>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardCondidateComponent } from './components/card-condidate/card-condidate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CardCondidateComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CandidateRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { CandidateRoutingModule } from './candidate-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CardCondidateComponent } from './components/card-condidate/card-condidate.component';\nimport { CvCondidateComponent } from './components/update/cv-condidate/cv-condidate.component';\nimport { ExperienceCondidateComponent } from './components/update/experience-condidate/experience-condidate.component';\nimport { FormationCondidateComponent } from './components/update/formation-condidate/formation-condidate.component';\nimport { LangueCondidateComponent } from './components/update/langue-condidate/langue-condidate.component';\nimport { LinksCondidateComponent } from './components/update/links-condidate/links-condidate.component';\nimport { ObjectifCondidateComponent } from './components/update/objectif-condidate/objectif-condidate.component';\nimport { ProfilCondidateComponent } from './components/update/profil-condidate/profil-condidate.component';\nimport { SkilsCondidateComponent } from './components/update/skils-condidate/skils-condidate.component';\nimport { VideoCondidateComponent } from './components/update/video-condidate/video-condidate.component';\n\n\n@NgModule({\n  declarations: [CardCondidateComponent,\n    ProfilCondidateComponent,\n    ObjectifCondidateComponent,\n    VideoCondidateComponent,\n    CvCondidateComponent,\n    ExperienceCondidateComponent,\n    FormationCondidateComponent,\n    LangueCondidateComponent,\n    LinksCondidateComponent,\n    SkilsCondidateComponent],\n  imports: [\n    SharedModule,\n    CandidateRoutingModule\n  ]\n})\nexport class CandidateModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL2NhcmQtY29uZGlkYXRlL2NhcmQtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { ModalController, ActionSheetController, LoadingController } from '@ionic/angular';\nimport { CvCondidateComponent } from '../update/cv-condidate/cv-condidate.component';\nimport { ExperienceCondidateComponent } from '../update/experience-condidate/experience-condidate.component';\nimport { FormationCondidateComponent } from '../update/formation-condidate/formation-condidate.component';\nimport { LangueCondidateComponent } from '../update/langue-condidate/langue-condidate.component';\nimport { LinksCondidateComponent } from '../update/links-condidate/links-condidate.component';\nimport { ObjectifCondidateComponent } from '../update/objectif-condidate/objectif-condidate.component';\nimport { ProfilCondidateComponent } from '../update/profil-condidate/profil-condidate.component';\nimport { SkilsCondidateComponent } from '../update/skils-condidate/skils-condidate.component';\nimport { VideoCondidateComponent } from '../update/video-condidate/video-condidate.component';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { PictureUtilsService } from 'src/app/core/services/global/picture-utils.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { FileService } from 'src/app/core/services/crud/file.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Helper, Redirection } from 'src/app/core/utils';\n\n\n@Component({\n  selector: 'app-card-condidate',\n  templateUrl: './card-condidate.component.html',\n  styleUrls: ['./card-condidate.component.scss']\n})\nexport class CardCondidateComponent implements OnInit {\n\n  location: string;\n  languages = [];\n  objectifLocation: string;\n  hasChanged = false;\n  disabled = true;\n  values = [];\n  softSkills = [];\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public authService: AuthService,\n    private globalService: GlobalService, private actionSheetController: ActionSheetController,\n    private loadingController: LoadingController, private pictureUtilsService: PictureUtilsService,\n    private zone: NgZone, private toastService: ToastService, private fileService: FileService,\n    public candidateService: CandidateService, private trans: TransService) { }\n\n  ngOnInit(): void {\n    this.getLanguageCandidate();\n    console.log(this.authService.user);\n    this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n    const value = { picture: this.authService.user.picture };\n    this.oldPercentage = Helper.calculePercentage(value, 0, 1.96);\n  }\n\n  getLanguageCandidate() {\n    this.languages = this.authService.user['languages'].map(lang => {\n      const languageIndex = this.globalService.languages.findIndex(x => x._id === lang.language);\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === lang.languageLevel);\n      return {\n        language: this.globalService.languages[languageIndex],\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n      };\n    });\n  }\n\n  ionViewDidEnter(): void {\n    const index = this.globalService.locations.findIndex(x => x._id === this.authService.user['location']);\n    const objectifLocationIndex = this.globalService.locations.findIndex(x => x._id === this.authService.user['locations'][0]);\n    if (index !== -1) {\n      this.location = this.globalService.locations[index].name;\n    }\n    if (objectifLocationIndex !== -1) {\n      this.objectifLocation = this.globalService.locations[objectifLocationIndex].name;\n    }\n    this.candidateService.changes.subscribe(res => {\n      this.getLanguageCandidate();\n      const index = this.globalService.locations.findIndex(x => x._id === this.authService.user['location']);\n      const objectifLocationIndex = this.globalService.locations.findIndex(x => x._id === this.authService.user['locations'][0]);\n      if (index !== -1) {\n        this.location = this.globalService.locations[index].name;\n      }\n      if (objectifLocationIndex !== -1) {\n        this.objectifLocation = this.globalService.locations[objectifLocationIndex].name;\n      }\n    });\n    console.log(this.authService.user['values']);\n  }\n\n  /**\n   * add image\n   */\n  async addImageAction() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Image',\n      buttons: [\n        {\n          text: 'Camera',\n          icon: 'camera',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromCamera().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    if (!this.authService.user['picture']) {\n                      let value = { picture: res.file };\n                      let per = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n                      value = Object.assign(value, {\n                        percentage: (Math.round(per * 100) / 100).toFixed(2)\n                      });\n                      this.candidateService.updatePicture(value).subscribe(response => {\n                        console.log(response);\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.candidate.percentage = Math.round(per);\n                        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n\n                      });\n                      console.log('makaynach');\n                    } else {\n                      console.log('kayna');\n                      this.candidateService.updatePicture({ picture: res.file }).subscribe(response => {\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n                      });\n                    }\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              _error => {\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        },\n        {\n          text: 'Gallery',\n          icon: 'image',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromGallery().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    if (!this.authService.user['picture']) {\n                      let value = { picture: res.file };\n                      let per = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n                      value = Object.assign(value, {\n                        percentage: (Math.round(per * 100) / 100).toFixed(2)\n                      });\n                      console.log(value);\n                      this.candidateService.updatePicture(value).subscribe(response => {\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.candidate.percentage = Math.round(per);\n                        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n                      });\n                      console.log('makaynach');\n                    } else {\n                      console.log('kayna');\n                      this.candidateService.updatePicture({ picture: res.file}).subscribe(response => {\n                        console.log(response['picture']);\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n                      });\n                    }\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              _error => {\n                alert(_error);\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  async editProfil() {\n    const modal = await this.modalController.create({\n      component: ProfilCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editObjectif() {\n    const modal = await this.modalController.create({\n      component: ObjectifCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editCV() {\n    const modal = await this.modalController.create({\n      component: CvCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editExperience() {\n    const modal = await this.modalController.create({\n      component: ExperienceCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editFormation() {\n    const modal = await this.modalController.create({\n      component: FormationCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editLangue() {\n    const modal = await this.modalController.create({\n      component: LangueCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editLinks() {\n    const modal = await this.modalController.create({\n      component: LinksCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editSkils() {\n    const modal = await this.modalController.create({\n      component: SkilsCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editVideo() {\n    const modal = await this.modalController.create({\n      component: VideoCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  /**\n   * go back\n   */\n  goBack() {\n    if (this.authService.user.role.name === 'candidate') {\n      Redirection.candidateDashboard();\n    } else {\n      Redirection.dashboard();\n    }\n  }\n\n  enableButton() {\n    const softSkillsSize = this.softSkills.filter(x => (x.checked)).length;\n    const valuesSize = this.values.filter(x => (x.checked)).length;\n    this.disabled = softSkillsSize === 0 || valuesSize === 0;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9jdi1jb25kaWRhdGUvY3YtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\n\n@Component({\n  selector: 'app-cv-condidate',\n  templateUrl: './cv-condidate.component.html',\n  styleUrls: ['./cv-condidate.component.scss']\n})\nexport class CvCondidateComponent {\n\n  form: FormGroup;\n  file;\n  value;\n  constructor( public modalController: ModalController, private authService: AuthService,\n    private candidateService: CandidateService, private toastService: ToastService, private trans: TransService ) {\n  }\n\n  ionViewDidEnter(): void {\n    this.value = { file: this.authService.user['cv'] ? this.authService.user['cv'] : null, type: 'cv' };\n  }\n\n  /**\n  * \n  * @param value \n  */\n  fileChanges(value) {\n    this.file = value;\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    this.candidateService.updateCV(this.file._id).subscribe((response: Response) => {\n      this.authService.user['cv'] = this.file;\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9leHBlcmllbmNlLWNvbmRpZGF0ZS9leHBlcmllbmNlLWNvbmRpZGF0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormBuilder, FormControl, FormArray, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-experience-condidate',\n  templateUrl: './experience-condidate.component.html',\n  styleUrls: ['./experience-condidate.component.scss']\n})\nexport class ExperienceCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n  functions = [];\n  activitySectors = [];\n  inWork = false;\n\n  constructor(public modalController: ModalController, private fb: FormBuilder, public globalService: GlobalService,\n    private authService: AuthService, private transService: TransService, private toastService: ToastService,\n    private candidateService: CandidateService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n    this.setValues('experiences');\n  }\n\n  /**\n   * init experience form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      experiences: this.fb.array([this.getExperienceFields()]),\n    });\n  }\n\n  inWordChange() {\n    this.inWork = !this.inWork;\n  }\n\n  /**\n   * get experiences fields\n   */\n  private getExperienceFields(): FormGroup {\n    return this.fb.group({\n      job: new FormControl(null, Validators.required),\n      function: new FormControl(null, Validators.required),\n      startedDate: new FormControl(null, Validators.required),\n      endDate: new FormControl(null, Validators.required),\n      company: new FormControl(null, Validators.required),\n      activitySector: new FormControl(null, Validators.required),\n      location: new FormControl(null, Validators.required)\n    }, { validator: this.checkDates });\n  }\n\n  checkDates(group: FormGroup) {\n    const min = new Date(group.controls.startedDate.value).setHours(0, 0, 0, 0);\n    const max = new Date(group.controls.endDate.value).setHours(0, 0, 0, 0);\n    if (min === max || min > max) {\n      return { dateError: true };\n    }\n    console.log(min, max);\n    // return min === max ? null : { dateError: true };\n  }\n\n  /**\n   * set values\n   * @param control\n   */\n  private setValues(control: string) {\n    if (this.candidateService.candidate[control] && this.candidateService.candidate[control].length > 0) {\n      let fields = <FormArray>this.form.controls[control];\n      fields.controls.splice(0);\n      fields.controls = [];\n      this.candidateService.candidate[control].forEach((val) => {\n        fields.push(this.fb.group(val));\n      });\n    }\n  }\n\n  /**\n   * add field to form array\n   * @param ctrl\n   */\n  addField(ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.push(this.getExperienceFields());\n  }\n\n  /**\n   * remove field from form array\n   * @param index\n   * @param ctrl\n   */\n  removeField(index: number, ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.removeAt(index);\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n    if (this.candidateService.candidate['experiences'].length <= 0) {\n      this.candidateService.updateExperience(Object.assign(value, {\n        percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n      })).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        // this.candidateService.candidate = this.authService.user;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    } else {\n      this.candidateService.updateExperience(value).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        // this.candidateService.candidate = this.authService.user.candidate;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9mb3JtYXRpb24tY29uZGlkYXRlL2Zvcm1hdGlvbi1jb25kaWRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-formation-condidate',\n  templateUrl: './formation-condidate.component.html',\n  styleUrls: ['./formation-condidate.component.scss']\n})\nexport class FormationCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, private fb: FormBuilder,\n    public globalService: GlobalService, private toastService: ToastService,\n    private transService: TransService, private candidateService: CandidateService,\n    private authService: AuthService) {\n\n    this.initForm();\n\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n    this.setValues('trainings');\n  }\n\n  private initForm(): void {\n    this.form = this.fb.group({\n      levelOfStudies: new FormControl(this.candidateService.candidate['levelOfStudies']),\n      trainings: this.fb.array([this.getTrainings()]),\n    });\n  }\n\n  /**\n   * get study fields\n   */\n  private getTrainings(): FormGroup {\n    return this.fb.group({\n      name: new FormControl(null, Validators.required),\n      studyLevel: new FormControl(null, Validators.required),\n      typeOfTraining: new FormControl(null, Validators.required),\n      yearOfGraduation: new FormControl(null, Validators.required),\n      school: new FormControl(null, Validators.required),\n      location: new FormControl(null, Validators.required)\n    });\n  }\n\n\n  /**\n * set values\n * @param control\n */\n  private setValues(control: string) {\n    if (this.candidateService.candidate[control] && this.candidateService.candidate[control].length > 0) {\n      let fields = <FormArray>this.form.controls[control];\n      fields.controls.splice(0);\n      fields.controls = [];\n      this.candidateService.candidate[control].forEach((val) => {\n        fields.push(this.fb.group(val));\n      });\n    }\n  }\n\n  /**\n   * add field to form array\n   * @param ctrl\n   */\n  addField(ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.push(this.getTrainings());\n  }\n\n  /**\n   * remove field from form array\n   * @param index\n   * @param ctrl\n   */\n  removeField(index: number, ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.removeAt(index);\n  }\n\n\n  /**\n   * update trainings\n   */\n  onSave() {\n    const value = this.form.value;\n    for (let training of value['trainings']) {\n      training.yearOfGraduation = typeof training.yearOfGraduation === 'number' ? training.yearOfGraduation :\n        new Date(training.yearOfGraduation).getFullYear();\n    }\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n    if (this.candidateService.candidate['experiences'].length <= 0) {\n      this.candidateService.updateTraining(Object.assign(value, {\n        percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n      })).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        this.candidateService.candidate = this.authService.user as Candidate;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    } else {\n      this.candidateService.updateTraining(value).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        this.candidateService.candidate = this.authService.user as Candidate;;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    }\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9sYW5ndWUtY29uZGlkYXRlL2xhbmd1ZS1jb25kaWRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormBuilder, FormControl, FormArray, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-langue-condidate',\n  templateUrl: './langue-condidate.component.html',\n  styleUrls: ['./langue-condidate.component.scss']\n})\nexport class LangueCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  languagesList = [];\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public globalService: GlobalService, private fb: FormBuilder,\n    private candidateService: CandidateService, private toastService: ToastService, private transService: TransService,\n    private authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    if (this.candidateService.candidate['languages'] && this.candidateService.candidate['languages'].length > 0) {\n      this.candidateService.candidate['languages'].forEach(item => {\n        const languageIndex = this.globalService.languages.findIndex(x => x._id === item.language);\n        const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === item.languageLevel);\n        this.languagesList.push({\n          language: this.globalService.languages[languageIndex],\n          languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n        });\n      });\n    }\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  private initForm(): void {\n    this.form = this.fb.group({\n      languages: new FormGroup({\n        language: new FormControl(null),\n        languageLevel: new FormControl(null)\n      }),\n      programingLanguages: new FormGroup({\n        language: new FormControl(this.candidateService.candidate['programingLanguages'] ? this.candidateService.candidate['programingLanguages']['language'] : []),\n        logiciel: new FormControl(this.candidateService.candidate['programingLanguages'] ? this.candidateService.candidate['programingLanguages']['logiciel'] : [])\n      }),\n    });\n  }\n\n  addLanguage() {\n    const value = this.form.get('languages').value;\n    if (value) {\n      const languageIndex = this.globalService.languages.findIndex(x => x._id === value.language);\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === value.languageLevel);\n      this.languagesList.push({\n        language: this.globalService.languages[languageIndex],\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n      });\n      this.form.get('languages').reset();\n    }\n  }\n\n  deleteLanguage(i: number) {\n    this.languagesList.splice(i, 1);\n  }\n\n  /**\n   * update soft skills\n   */\n  onSave() {\n    const value = this.form.value;\n    delete value['languages'];\n    value.languages = this.languagesList.map(x => ({\n      language: x.language._id,\n      languageLevel: x.languageLevel._id\n    }));\n\n    this.candidateService.updateLanguage(value).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.toastService.success('Enregistré avec succès');\n      this.candidateService.setChanges(true);\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9saW5rcy1jb25kaWRhdGUvbGlua3MtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-links-condidate',\n  templateUrl: './links-condidate.component.html',\n  styleUrls: ['./links-condidate.component.scss']\n})\nexport class LinksCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public authService: AuthService,\n    private candidateService: CandidateService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  /**\n   * init links\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      webSite: new FormControl(this.authService.user['webSite']),\n      blog: new FormControl(this.authService.user['blog']),\n      linkedin: new FormControl(this.authService.user['linkedin']),\n      instagram: new FormControl(this.authService.user['instagram']),\n      twitter: new FormControl(this.authService.user['twitter']),\n      facebook: new FormControl(this.authService.user['facebook'])\n    });\n  }\n\n  /**\n   * update social network\n   */\n  onSave() {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n    this.candidateService.updateSocialNetworks(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.candidateService.candidate = this.authService.user as Candidate;\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9vYmplY3RpZi1jb25kaWRhdGUvb2JqZWN0aWYtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-objectif-condidate',\n  templateUrl: './objectif-condidate.component.html',\n  styleUrls: ['./objectif-condidate.component.scss']\n})\nexport class ObjectifCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(private fb: FormBuilder, private candidateService: CandidateService, public globalService: GlobalService, private transService: TransService,\n    public authService: AuthService, private toastService: ToastService, public modalController: ModalController) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  /**\n   * init job infos form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      jobType: new FormControl(this.candidateService.candidate['jobType'], Validators.required),\n      searchedPost: new FormControl(this.candidateService.candidate['searchedPost'], Validators.required),\n      jobMode: new FormControl(this.candidateService.candidate['jobMode'], Validators.required),\n      supposedSalaryMin: new FormControl(this.candidateService.candidate['supposedSalaryMin'], Validators.required),\n      supposedSalaryMax: new FormControl(this.candidateService.candidate['supposedSalaryMax'], Validators.required),\n      usageTitles: new FormControl(this.candidateService.candidate['usageTitles'] ? this.candidateService.candidate['usageTitles'] : []),\n      functions: new FormControl(this.candidateService.candidate['functions'] ? this.candidateService.candidate['functions'] : []),\n      activitySector: new FormControl(this.candidateService.candidate['activitySector'] ? this.candidateService.candidate['activitySector'] : [], Validators.required),\n      locations: new FormControl(this.candidateService.candidate['locations'] ? this.candidateService.candidate['locations'] : [], Validators.required),\n      contracts: new FormControl(this.candidateService.candidate['contracts'] ? this.candidateService.candidate['contracts'] : [], Validators.required),\n    }, { validator: this.checkSupposedSalary });\n  }\n\n  checkSupposedSalary(group: FormGroup) {\n    const min = group.controls.supposedSalaryMin.value;\n    const max = group.controls.supposedSalaryMax.value;\n    return min < max ? null : { salaryErreur: true };\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n\n    this.candidateService.updateGoals(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.candidateService.candidate = this.authService.user as Candidate;\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.candidateService.setChanges(true);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9wcm9maWwtY29uZGlkYXRlL3Byb2ZpbC1jb25kaWRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-profil-condidate',\n  templateUrl: './profil-condidate.component.html',\n  styleUrls: ['./profil-condidate.component.scss']\n})\nexport class ProfilCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public globalService: GlobalService,\n    private candidateService: CandidateService, private authService: AuthService,\n    private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n    console.log(this.candidateService.candidate);\n    // this.formPercentage = Object.keys(this.form.controls).length * 1.96;\n    // Number(this.candidateService.percentage.forEach(element => {\n    //   this.currentPercentage = element;\n    // }));\n    // this.newPercentage = (Math.trunc(this.currentPercentage) - Math.trunc(this.formPercentage));\n  }\n\n  private initForm() {\n    this.form = new FormGroup({\n      firstName: new FormControl(this.authService.user.firstName, Validators.required),\n      lastName: new FormControl(this.authService.user.lastName, Validators.required),\n      birthday: new FormControl( (this.candidateService.candidate ? this.candidateService.candidate['birthday'] : null ), Validators.required),\n      gender: new FormControl(this.candidateService.candidate['gender'], Validators.required),\n      phoneNumber: new FormControl(this.authService.user['phoneNumber'], Validators.required),\n      availability: new FormControl(this.candidateService.candidate['availability'], Validators.required),\n      currentJob: new FormControl(this.candidateService.candidate['currentJob'], Validators.required),\n      currentSalary: new FormControl(this.candidateService.candidate['currentSalary'], Validators.required),\n      managerialLevel: new FormControl(this.candidateService.candidate['managerialLevel'], Validators.required),\n      effective: new FormControl(this.candidateService.candidate['effective'], Validators.required),\n      goal: new FormControl(this.candidateService.candidate['goal'], Validators.required),\n      experienceYears: new FormControl(this.candidateService.candidate['experienceYears'], Validators.required),\n    });\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n\n    this.candidateService.updateInfos(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.authService.user = Object.assign(this.authService.user, {\n        firstName: value.firstName,\n        lastName: value.lastName\n      });\n      this.candidateService.candidate = this.authService.user as Candidate;\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9za2lscy1jb25kaWRhdGUvc2tpbHMtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces/response';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-skils-condidate',\n  templateUrl: './skils-condidate.component.html',\n  styleUrls: ['./skils-condidate.component.scss']\n})\nexport class SkilsCondidateComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(public modalController: ModalController, public globalService: GlobalService, private transService: TransService,\n              private authService: AuthService, private candidateService: CandidateService, private toastService: ToastService) {\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      values: new FormControl(this.candidateService.candidate['values'] ? this.candidateService.candidate['values'] : []),\n      skills: new FormControl(this.candidateService.candidate['skills'] ? this.candidateService.candidate['skills'] : [])\n    });\n  }\n\n  /**\n   * update soft skills\n   */\n  onSave() {\n    this.candidateService.updateSoftSkills(this.form.value).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, this.form.value);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS92aWRlby1jb25kaWRhdGUvdmlkZW8tY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ModalController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Helper } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-video-condidate',\n  templateUrl: './video-condidate.component.html',\n  styleUrls: ['./video-condidate.component.scss']\n})\nexport class VideoCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  file;\n  value;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, private candidateService: CandidateService,\n    private authService: AuthService, private toastService: ToastService, private trans: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    this.value = { file: this.authService.user['video'] ? this.authService.user['video'] : null, type: 'video' };\n    if (this.value.file) {\n      this.oldPercentage = 1.96;\n    }\n  }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      video: new FormControl(null, Validators.required)\n    });\n  }\n\n  /**\n   * \n   * @param value\n   */\n  fileChanges(value) {\n    this.form.setValue({ video: value });\n    this.file = value;\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    let value = this.form.value;\n    let percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    value = Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    });\n    this.authService.user['video'] = null;\n    this.candidateService.updateVideo(value).subscribe((response: Response) => {\n      this.authService.user['video'] = value.video;\n      this.candidateService.candidate['video'] = value.video;\n      this.candidateService.candidate.percentage = Math.round(value.percentage);\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n"]}