{"version":3,"sources":["./src/app/pages/candidate/components/card-condidate/card-condidate.component.html","./src/app/pages/candidate/components/update/cv-condidate/cv-condidate.component.html","./src/app/pages/candidate/components/update/experience-condidate/experience-condidate.component.html","./src/app/pages/candidate/components/update/formation-condidate/formation-condidate.component.html","./src/app/pages/candidate/components/update/langue-condidate/langue-condidate.component.html","./src/app/pages/candidate/components/update/links-condidate/links-condidate.component.html","./src/app/pages/candidate/components/update/objectif-condidate/objectif-condidate.component.html","./src/app/pages/candidate/components/update/profil-condidate/profil-condidate.component.html","./src/app/pages/candidate/components/update/skils-condidate/skils-condidate.component.html","./src/app/pages/candidate/components/update/video-condidate/video-condidate.component.html","./src/app/pages/candidate/candidate-routing.module.ts","./src/app/pages/candidate/candidate.module.ts","./src/app/pages/candidate/components/card-condidate/card-condidate.component.scss","./src/app/pages/candidate/components/card-condidate/card-condidate.component.ts","./src/app/pages/candidate/components/update/cv-condidate/cv-condidate.component.scss","./src/app/pages/candidate/components/update/cv-condidate/cv-condidate.component.ts","./src/app/pages/candidate/components/update/experience-condidate/experience-condidate.component.scss","./src/app/pages/candidate/components/update/experience-condidate/experience-condidate.component.ts","./src/app/pages/candidate/components/update/formation-condidate/formation-condidate.component.scss","./src/app/pages/candidate/components/update/formation-condidate/formation-condidate.component.ts","./src/app/pages/candidate/components/update/langue-condidate/langue-condidate.component.scss","./src/app/pages/candidate/components/update/langue-condidate/langue-condidate.component.ts","./src/app/pages/candidate/components/update/links-condidate/links-condidate.component.scss","./src/app/pages/candidate/components/update/links-condidate/links-condidate.component.ts","./src/app/pages/candidate/components/update/objectif-condidate/objectif-condidate.component.scss","./src/app/pages/candidate/components/update/objectif-condidate/objectif-condidate.component.ts","./src/app/pages/candidate/components/update/profil-condidate/profil-condidate.component.scss","./src/app/pages/candidate/components/update/profil-condidate/profil-condidate.component.ts","./src/app/pages/candidate/components/update/skils-condidate/skils-condidate.component.scss","./src/app/pages/candidate/components/update/skils-condidate/skils-condidate.component.ts","./src/app/pages/candidate/components/update/video-condidate/video-condidate.component.scss","./src/app/pages/candidate/components/update/video-condidate/video-condidate.component.ts"],"names":[],"mappings":"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","file":"pages-candidate-candidate-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"goBack()\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button routerLink=\\\"/dashboard/settings\\\">\\n                <ion-icon slot=\\\"icon-only\\\" ios=\\\"settings-outline\\\" md=\\\"settings-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Profil candidat</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\" appScrollToTop>\\n    <section class=\\\"condidate-card\\\" >\\n        <div class=\\\"page-content\\\">\\n\\n            <ion-row class=\\\"mt-1 py-1\\\">\\n                <ion-col size=\\\"12\\\">\\n                    <!-- <ion-icon class=\\\"d-inline icon-blue-title mr-1\\\" src=\\\"./assets/icon/apprentice.svg\\\"></ion-icon> -->\\n                    <span class=\\\"blue-title\\\">Profil complété à :  </span>\\n                </ion-col>\\n                <ion-col size=\\\"12\\\">\\n                    <div class=\\\"progressbar w-100\\\">\\n                        <div class=\\\"porcent\\\" [ngStyle]=\\\"{'width': (candidateService.percentage | async | number: '1.0-0') + '%'}\\\">\\n                            <div class=\\\"counter text-center\\\">\\n                                {{ candidateService.percentage | async | number: '1.0-0' }} %\\n                             </div>\\n                        </div>\\n                    </div>\\n\\n                    <!-- <div class=\\\"progressbar w-100\\\">\\n                        <div class=\\\"porcent\\\"\\n                            [ngStyle]=\\\"{'width': (authService.user.candidate.percentage | number: '1.0-0') + '%'}\\\">\\n                            {{ authService.user.candidate.percentage | number: '1.0-0' }} %\\n                        </div>\\n                    </div> -->\\n                </ion-col>\\n            </ion-row>\\n\\n            <div class=\\\"condidate-profil\\\">\\n                <div class=\\\"d-block position-relative mr-auto pt-1\\\" style=\\\"width: 120px\\\">\\n                    <img class=\\\"circle-image\\\"\\n                        [src]=\\\"authService.user.picture ? (('backend_url' | env) + authService.user.picture.name) : \\n                    (authService.user['gender'] === 'masculin' ? '/assets/img/male.svg' : '/assets/img/female.svg' )\\\"\\n                        alt=\\\"profil\\\">\\n                    <div class=\\\"change-photo\\\" (click)=\\\"addImageAction()\\\">\\n                        <mat-icon color=\\\"primary\\\">edit</mat-icon>\\n                    </div>\\n                </div>\\n                <ion-row class=\\\"mt-1 py-1 pb-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"name ml-1\\\">{{ authService.user.firstName }} {{ authService.user.lastName }}</div>\\n                    </ion-col>\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"post ml-1\\\">{{ authService.user['currentJob'] }}</div>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n\\n            <div class=\\\"bg-light border-bottom px-1 py-2\\\">\\n                <p class=\\\"desciption text-center mb-1\\\">\\n                    {{ authService.user['goal'] }}\\n                </p>\\n                <div class=\\\"links cursor-pointer\\\" (click)=\\\"editProfil()\\\">\\n                    Modifier profil\\n                </div>\\n            </div>\\n\\n            <div class=\\\"objectif bg-light\\\">\\n                <h3 class=\\\"title\\\">OBJECTIF ACTUEL</h3>\\n                <ion-row class=\\\"ion-justify-content-center mt-1 py-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"info\\\">{{ authService.user['searchedPost'] }} </div>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"info\\\"> {{ objectifLocation }} </div>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1 pb-1\\\">\\n                    <ion-col size=\\\"12\\\" class=\\\"text-center\\\">\\n                        <div class=\\\"info\\\">{{ authService.user['supposedSalaryMax'] }} DH</div>\\n                    </ion-col>\\n                </ion-row>\\n                <div class=\\\"links cursor-pointer\\\" (click)=\\\"editObjectif()\\\">\\n                    Modifier mon objectif\\n                </div>\\n            </div>\\n\\n            <div class=\\\"video bg-light border-bottom\\\">\\n                <h3 class=\\\"title\\\">VIDÉO</h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"11\\\" class=\\\"text-center\\\">\\n                        <div *ngIf=\\\"authService.user['video'] else uploadVideo\\\">\\n                            <video width=\\\"100%\\\" height=\\\"200px\\\" controls>\\n                                <source [src]=\\\"('backend_url' | env) + authService.user['video'].name\\\">\\n                            </video>\\n                        </div>\\n                        <ng-template #uploadVideo>\\n                            <img class=\\\"w-100\\\" src=\\\"./assets/img/default-video.svg\\\" alt=\\\"Add Video\\\">\\n                        </ng-template>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editVideo()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"experience bg-light border-bottom\\\">\\n                <h3 class=\\\"title\\\">EXPÉRIENCES</h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\">mediation</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>Expérience : <br></span>\\n                        <div class=\\\"exeprience-details\\\" *ngFor=\\\"let experience of authService.user['experiences']\\\">\\n                            {{ experience.startedDate | date:'MM-yyyy' }} - \\n                            <span *ngIf=\\\"experience.endDate\\\"> {{ experience.endDate | date:'MM-yyyy' }} :</span>\\n                            <span *ngIf=\\\"!experience.endDate\\\"> en cours :</span>\\n                            {{ experience.job }}\\n                        </div>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editExperience()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"formation bg-light border-bottom\\\">\\n                <h3 class=\\\"title\\\">FORMATIONS</h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\">school</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>Formations : </span>\\n                        <div class=\\\"formation-details\\\" *ngFor=\\\"let item of authService.user['trainings']\\\">\\n                            {{ item.yearOfGraduation }} :\\n                            {{ item.name }}\\n                        </div>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editFormation()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"cv bg-light border-bottom\\\">\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\" class=\\\"mr-1\\\">article</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>CV</span>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editCV()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"langue bg-light\\\">\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"text-center\\\">\\n                        <mat-icon color=\\\"primary\\\" class=\\\"mr-1\\\">g_translate</mat-icon>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                        <span>LANGUE</span>\\n                        <div *ngFor=\\\"let item of languages\\\">\\n                            {{ item.language.name }} :\\n                            {{ item.languageLevel.name }}\\n                        </div>\\n                    </ion-col>\\n                    <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                        <mat-icon color=\\\"primary\\\" (click)=\\\"editLangue()\\\">edit</mat-icon>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div class=\\\"skils bg-light border-bottom pb-3\\\">\\n                <h3 class=\\\"title\\\">SOFT SKILLS / VALEURS\\n                    <mat-icon class=\\\"align-middle ml-1\\\" color=\\\"primary\\\" (click)=\\\"editSkils()\\\">add</mat-icon>\\n                </h3>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-linkedin.svg\\\" alt=\\\"linkedin\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['linkedin'] else addLinkedIn\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['linkedin']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addLinkedIn>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un compte linkedin</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-blogger.svg\\\" alt=\\\"blogger\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['blog'] else addBlog\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['blog']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addBlog>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un lien blog</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-website.svg\\\" alt=\\\"website\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['webSite'] else addWebSite\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['webSite']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addWebSite>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajouter le lien de site web</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-instagram.svg\\\" alt=\\\"instagram\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['instagram'] else addInstagram\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['instagram']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addInstagram>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un compte instagram</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-twitter.svg\\\" alt=\\\"twitter\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['twitter'] else addTwitter\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{authService.user['twitter']}}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addTwitter>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajoutez un compte twitter</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n                <ion-row class=\\\"ion-justify-content-center py-1\\\">\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n                        <img src=\\\"./assets/icon/circle-facebook.svg\\\" alt=\\\"facebook\\\">\\n                    </ion-col>\\n                    <ng-container *ngIf=\\\"authService.user['facebook'] else addFacebook\\\">\\n                        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>{{ authService.user['facebook'] }}</span>\\n                        </ion-col>\\n                    </ng-container>\\n                    <ng-template #addFacebook>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center\\\">\\n                            <span>Ajouter le compte facebook</span>\\n                        </ion-col>\\n                        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n                            <mat-icon color=\\\"primary\\\" (click)=\\\"editLinks()\\\">add</mat-icon>\\n                        </ion-col>\\n                    </ng-template>\\n                </ion-row>\\n\\n                <div class=\\\"links cursor-pointer\\\" (click)=\\\"editLinks()\\\">\\n                    Modifier vos réseau sociaux\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n\\n</ion-content>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <!-- <ion-buttons slot=\\\"end\\\">\\n            <ion-button [disabled]=\\\"!file\\\" (click)=\\\"onSave()\\\">\\n                Enregistrer\\n            </ion-button>\\n        </ion-buttons> -->\\n        <ion-title>Mon CV</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content\\\">\\n            <div class=\\\"d-block\\\">\\n                <app-file-uploader [data]=\\\"value\\\" (fileChanges)=\\\"fileChanges($event)\\\"></app-file-uploader>\\n            </div>\\n        </div>\\n        <div class=\\\"text-right mt-2\\\">\\n            <ion-button type=\\\"submit\\\" [disabled]=\\\"!file\\\" (click)=\\\"onSave()\\\">\\n                Enregistrer\\n            </ion-button>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Mes expériences</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\" formArrayName=\\\"experiences\\\">\\n\\n                <ng-container\\n                    *ngFor=\\\"let experience of form.get('experiences')['controls']; let i=index; let last=last;\\\"\\n                    [formGroupName]=\\\"i\\\">\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Emploi occupé <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"job\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('job').invalid &&\\n                    form.get('experiences')['controls'][i].get('job').errors.required && (form.get('experiences')['controls'][i].get('job').dirty || form.get('experiences')['controls'][i].get('job').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-select\\\">\\n                            <ion-label position=\\\"floating\\\">Fonction <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"function\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.functions\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('function').invalid && (form.get('experiences')['controls'][i].get('function').dirty || form.get('experiences')['controls'][i].get('function').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-datetime w-100\\\">\\n                                <ion-label position=\\\"floating\\\">Date debut <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-datetime placeholder=\\\"De\\\" formControlName=\\\"startedDate\\\">\\n                                </ion-datetime>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('experiences')['controls'][i].get('startedDate').invalid && (form.get('experiences')['controls'][i].get('startedDate').dirty || form.get('experiences')['controls'][i].get('startedDate').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-datetime w-100\\\">\\n                                <ion-label position=\\\"floating\\\">Date fin</ion-label>\\n                                <ion-datetime placeholder=\\\"À\\\" formControlName=\\\"endDate\\\" [disabled]=\\\"inWork\\\">\\n                                </ion-datetime>\\n                            </ion-item>\\n                        </div>\\n                    </div>\\n\\n                    <small class=\\\"text-error\\\" *ngIf=\\\"\\n            form.get('experiences')['controls'][i].get('startedDate').touched && \\n            form.get('experiences')['controls'][i].get('endDate').touched &&\\n            form.get('experiences')['controls'][i].hasError('dateError')\\\">\\n                        Date fin doit être supérieur de la date debut\\n                    </small>\\n\\n                    <!-- <div class=\\\"w-40\\\">\\n                        <ion-item class=\\\"custom-checkbox\\\" lines=\\\"none\\\">\\n                            <ion-label class=\\\"ml-1\\\">En poste</ion-label>\\n                            <ion-checkbox class=\\\"ion-no-margin\\\" color=\\\"primary\\\" slot=\\\"start\\\"\\n                                (ionChange)=\\\"inWordChange()\\\">\\n                            </ion-checkbox>\\n                        </ion-item>\\n                    </div> -->\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Entreprise <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"company\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('company').invalid && (form.get('experiences')['controls'][i].get('company').dirty || form.get('experiences')['controls'][i].get('company').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-select\\\">\\n                            <ion-label position=\\\"floating\\\">Secteur d’activité <span class=\\\"required\\\">*</span>\\n                            </ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"activitySector\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.activitySectors\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('activitySector').invalid && (form.get('experiences')['controls'][i].get('activitySector').dirty || form.get('experiences')['controls'][i].get('activitySector').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Lieu <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experiences')['controls'][i].get('location').invalid && (form.get('experiences')['controls'][i].get('location').dirty || form.get('experiences')['controls'][i].get('location').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"text-right mt-1\\\">\\n                        <ion-button fill=\\\"outline\\\" class=\\\"btn-outline-danger ml-30\\\" color=\\\"danger\\\"\\n                            *ngIf=\\\"form.controls['experiences']['controls'].length > 1\\\"\\n                            (click)=\\\"removeField(i, 'experiences')\\\">\\n                            Supprimer\\n                        </ion-button>\\n                    </div>\\n                </ng-container>\\n                <div class=\\\"text-left mt-1\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline\\\" color=\\\"primary\\\"\\n                        [disabled]=\\\"!form.controls.experiences.valid\\\" (click)=\\\"addField('experiences')\\\">\\n                        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                        Ajouter une Expérience\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Mes formations</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n\\n            <ion-item class=\\\"custom-select w-100\\\">\\n                <ion-label position=\\\"floating\\\">Niveau d'études le plus élevé</ion-label>\\n                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                    formControlName=\\\"levelOfStudies\\\">\\n                    <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                        {{item.name}}</ion-select-option>\\n                </ion-select>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('levelOfStudies').invalid && (form.get('levelOfStudies').dirty || form.get('levelOfStudies').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n            </ion-item>\\n\\n            <div class=\\\"mt-2\\\" formArrayName=\\\"trainings\\\">\\n\\n                <ng-container *ngFor=\\\"let training of form.get('trainings')['controls']; let i=index; let last=last;\\\"\\n                    [formGroupName]=\\\"i\\\">\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Intitulé de la formation <span class=\\\"required\\\">*</span>\\n                            </ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('name').invalid && (form.get('trainings')['controls'][i].get('name').dirty || form.get('trainings')['controls'][i].get('name').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <ion-item class=\\\"custom-select w-100\\\">\\n                        <ion-label position=\\\"floating\\\">Niveau d'études</ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"studyLevel\\\">\\n                            <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                                {{item.name}}</ion-select-option>\\n                        </ion-select>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('studyLevel').invalid && (form.get('trainings')['controls'][i].get('studyLevel').dirty || form.get('trainings')['controls'][i].get('studyLevel').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </ion-item>\\n\\n\\n                    <ion-item class=\\\"custom-select w-100\\\">\\n                        <ion-label position=\\\"floating\\\">Type de formation</ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"typeOfTraining\\\">\\n                            <ion-select-option *ngFor=\\\"let item of globalService.typeOfTrainings\\\" [value]=\\\"item._id\\\">\\n                                {{item.name}}</ion-select-option>\\n                        </ion-select>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('typeOfTraining').invalid && (form.get('trainings')['controls'][i].get('typeOfTraining').dirty || form.get('trainings')['controls'][i].get('typeOfTraining').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </ion-item>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">École <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"school\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('school').invalid && (form.get('trainings')['controls'][i].get('school').dirty || form.get('trainings')['controls'][i].get('school').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-datetime w-100\\\">\\n                                <ion-label position=\\\"floating\\\">Année d’obtention</ion-label>\\n                                <ion-datetime placeholder=\\\"De\\\" displayFormat=\\\"YYYY\\\" pickerFormat=\\\"YYYY\\\"\\n                                    formControlName=\\\"yearOfGraduation\\\">\\n                                </ion-datetime>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('trainings')['controls'][i].get('yearOfGraduation').invalid && (form.get('trainings')['controls'][i].get('yearOfGraduation').dirty || form.get('trainings')['controls'][i].get('yearOfGraduation').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Lieu <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('trainings')['controls'][i].get('location').invalid && (form.get('trainings')['controls'][i].get('location').dirty || form.get('trainings')['controls'][i].get('location').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"text-right mt-1\\\">\\n                        <ion-button fill=\\\"outline\\\" class=\\\"btn-outline-danger ml-30\\\" color=\\\"danger\\\"\\n                            *ngIf=\\\"form.controls['trainings']['controls'].length > 1\\\"\\n                            (click)=\\\"removeField(i, 'trainings')\\\">\\n                            Supprimer\\n                        </ion-button>\\n                    </div>\\n                </ng-container>\\n                <div class=\\\"text-left mt-1\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline\\\" color=\\\"primary\\\"\\n                        [disabled]=\\\"!form.controls.trainings || !form.controls.trainings.valid\\\"\\n                        (click)=\\\"addField('trainings')\\\">\\n                        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                        Ajouter une Formation\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button (click)=\\\"onSave()\\\" [disabled]=\\\"languagesList.length <= 0\\n                || form.get('programingLanguages.logiciel').value?.length <= 0\\n                || form.get('programingLanguages.language').value?.length <= 0\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Langue</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div formGroupName=\\\"languages\\\">\\n                    <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n\\n                        <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-label position=\\\"floating\\\">Langue</ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"language\\\">\\n                                <ion-select-option\\n                                    *ngFor=\\\"let item of globalService.languages | languages:languagesList\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n\\n                        <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-label position=\\\"floating\\\">Niveau de langue</ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"languageLevel\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.languagesLevels\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"mb-1 mt-1\\\">\\n                    <ul class=\\\"customList\\\">\\n                        <li *ngFor=\\\"let item of languagesList;let i =index;\\\">\\n                            <span class=\\\"text-primary text-left\\\">\\n                                {{ item.language.name }} : {{ item.languageLevel.name}}\\n                            </span>\\n                            <mat-icon class=\\\"cursor-pointer btn-round vertical-align ml-1\\\" (click)=\\\"deleteLanguage(i)\\\">\\n                                close\\n                            </mat-icon><br>\\n                        </li>\\n                    </ul>\\n                </div>\\n\\n                <div class=\\\"mt-1 mb-1 text-left\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline w-40\\\" color=\\\"primary\\\" (click)=\\\"addLanguage()\\\">\\n                        Ajouter\\n                        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n                    </ion-button>\\n                </div>\\n\\n                <div class=\\\"mb-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\"\\n                    formGroupName=\\\"programingLanguages\\\">\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <app-multi-select label=\\\"Langages informatiques\\\" collection=\\\"programmingLanguages\\\"\\n                            formControlName=\\\"language\\\"></app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.language').value?.length <= 0\\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <app-multi-select label=\\\"Logiciels informatiques\\\" collection=\\\"logiciels\\\"\\n                            formControlName=\\\"logiciel\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.logiciel').value?.length <= 0\\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" (click)=\\\"onSave()\\\" [disabled]=\\\"languagesList.length <= 0\\n                || form.get('programingLanguages.logiciel').value?.length <= 0\\n                || form.get('programingLanguages.language').value?.length <= 0\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Mes liens</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/website-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Site internet</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"webSite\\\">\\n                        <span matPrefix>www.</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/blogger-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Blog</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"blog\\\">\\n                        <span matPrefix>www.</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/linkedin-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Linkedin</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"linkedin\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/instagram-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Instagram</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"instagram\\\">\\n                        <span matPrefix>@</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/twitter-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Twitter</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"twitter\\\">\\n                        <span matPrefix>@</span>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"custom-input-icon\\\">\\n                    <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/facebook-input.svg\\\"></ion-icon>\\n                    <mat-form-field class=\\\"ml-1 w-90\\\">\\n                        <mat-label>Facebook</mat-label>\\n                        <input matInput placeholder=\\\"\\\" formControlName=\\\"facebook\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Mon objectif</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n                <div class=\\\"d-block\\\">\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Poste souhaité <span class=\\\"required\\\">*</span>\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\" formControlName=\\\"searchedPost\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('searchedPost').invalid && (form.get('searchedPost').dirty || form.get('searchedPost').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                        <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <app-multi-select label=\\\"Intitulés d'usage\\\" collection=\\\"usageTitles\\\"\\n                                formControlName=\\\"usageTitles\\\">\\n                            </app-multi-select>\\n                            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('usageTitles').value?.length\\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                    </div>\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <app-multi-select label=\\\"Type de contrat\\\" collection=\\\"contracts\\\"\\n                                formControlName=\\\"contracts\\\">\\n                            </app-multi-select>\\n                            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('contracts').value?.length\\\">\\n                                Veuillez choisir au moins un type de contrat.\\n                            </small>\\n                        </div>\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-select\\\">\\n                                <ion-label position=\\\"floating\\\">Type de Poste <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                    formControlName=\\\"jobType\\\">\\n                                    <ion-select-option *ngFor=\\\"let item of globalService.jobTypes\\\" [value]=\\\"item._id\\\">\\n                                        {{item.name}}</ion-select-option>\\n                                </ion-select>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('jobType').invalid && (form.get('jobType').dirty || form.get('jobType').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <app-multi-select label=\\\"Fonction\\\" collection=\\\"functions\\\" formControlName=\\\"functions\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('functions').value?.length\\\">\\n                            Veuillez choisir au moins une fonction.\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n\\n                        <app-multi-select label=\\\"Secteur d’activité \\\" collection=\\\"activitySectors\\\"\\n                            formControlName=\\\"activitySector\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('activitySector').value?.length\\\">\\n                            Veuillez choisir au moins un secteur d’activité.\\n                        </small>\\n\\n                    </div>\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-select w-100 \\\">\\n                            <ion-label position=\\\"floating\\\">Mode de travail <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"jobMode\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.jobModes\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('jobMode').invalid && (form.get('jobMode').dirty || form.get('jobMode').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <app-multi-select label=\\\"Lieu\\\" collection=\\\"locations\\\" formControlName=\\\"locations\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('locations').value?.length\\\">\\n                            Veuillez choisir au moins une ville.\\n                        </small>\\n                    </div>\\n\\n                    <h4 class=\\\"pt-2\\\">Prétentions salariales (Dhs)</h4>\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">À partir de <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMin\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('supposedSalaryMin').invalid && (form.get('supposedSalaryMin').dirty || form.get('supposedSalaryMin').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n\\n                        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Jusqu'à <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMax\\\"></ion-input>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('supposedSalaryMax').invalid && (form.get('supposedSalaryMax').dirty || form.get('supposedSalaryMax').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                    </div>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('supposedSalaryMax').touched && !form.get('supposedSalaryMax').hasError('required') && form.hasError('salaryErreur')\\\">\\n                        Le salaire maximum doit être supérieur au salaire minimum\\n                    </small>\\n                </div>\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.get('usageTitles').value?.length\\n                || !form.get('functions').value?.length \\n                || !form.get('activitySector').value?.length\\n                || !form.get('locations').value?.length\\n                || !form.get('contracts').value?.length\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Mon profil</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content mt-2\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Nom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('lastName').invalid && (form.get('lastName').dirty || form.get('lastName').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Prénom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('firstName').invalid && (form.get('firstName').dirty || form.get('firstName').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-datetime\\\">\\n                            <ion-label position=\\\"floating\\\">Date Naissance <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-datetime placeholder=\\\"Choissez votre date\\\" formControlName=\\\"birthday\\\">\\n                            </ion-datetime>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('birthday').invalid && (form.get('birthday').dirty || form.get('birthday').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select\\\">\\n                            <ion-label position=\\\"floating\\\">Sexe <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"gender\\\">\\n                                <ion-select-option value=\\\"masculin\\\">Homme</ion-select-option>\\n                                <ion-select-option value=\\\"feminin\\\">Femme</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('gender').invalid && (form.get('gender').dirty || form.get('gender').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <div class=\\\"w-100 custom-input\\\">\\n                            <ion-item class=\\\"custom-input\\\">\\n                                <ion-label position=\\\"floating\\\">Téléphone (+212)<span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-input type=\\\"tel\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\n                            </ion-item>\\n                        </div>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('phoneNumber').invalid && (form.get('phoneNumber').dirty || form.get('phoneNumber').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Disponiblité <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"availability\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.availabilities\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('availability').invalid && (form.get('availability').dirty || form.get('availability').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"100%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Nombre d’années d’experience <span class=\\\"required\\\">*</span>\\n                            </ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"experienceYears\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.experiences\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('experienceYears').invalid && (form.get('experienceYears').dirty || form.get('experienceYears').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <ion-item class=\\\"custom-input w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Poste actuel <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"currentJob\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('currentJob').invalid && (form.get('currentJob').dirty || form.get('currentJob').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n\\n                <ion-item class=\\\"custom-input w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Préciser salaire actuel (Dhs) <span class=\\\"required\\\">*</span>\\n                    </ion-label>\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"currentSalary\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('currentSalary').invalid && (form.get('currentSalary').dirty || form.get('currentSalary').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Niv. managérial <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"managerialLevel\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.managerialLevels\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('managerialLevel').invalid && (form.get('managerialLevel').dirty || form.get('managerialLevel').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Effectif Géré <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"effective\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.effectives\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('effective').invalid && (form.get('effective').dirty || form.get('effective').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <ion-item class=\\\"custom-input w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Objectif <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-input type=\\\"text\\\" formControlName=\\\"goal\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('goal').invalid && (form.get('goal').dirty || form.get('goal').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Soft skills</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n                <div class=\\\"text-center mt-2\\\">\\n                    <p> Vos softskills sont très importants pour les recruteurs.\\n                        Choisissez dans la liste les 5 softskills qui vous représentent le plus.\\n                    </p>\\n                </div>\\n                <app-multi-select label=\\\"Mes soft skills\\\" [limit] = \\\"5\\\" collection=\\\"softSkills\\\" formControlName=\\\"skills\\\">\\n                </app-multi-select>\\n                <div class=\\\"text-center mt-2\\\">\\n                    <p>En recrutement une valeur est parfois plus\\n                        décisive qu’une compétence.\\n                        Renforcer la qualité de votre profil en\\n                        séléctionnant dans la liste les 6 valeurs qui vous\\n                        correspondent</p>\\n                </div>\\n                <app-multi-select label=\\\"Mes valeurs\\\" [limit] = \\\"6\\\" collection=\\\"values\\\" formControlName=\\\"values\\\">\\n                </app-multi-select>\\n            \\n            </form>\\n        </div>\\n        <div class=\\\"text-right mt-2\\\">\\n            <ion-button type=\\\"submit\\\" (click)=\\\"onSave()\\\" [disabled]=\\\"form.get('values').value?.length < 6\\n            ||  form.get('skills').value?.length < 5 ? true : false\\\">\\n                Enregistrer\\n            </ion-button>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Vidéo</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content mt-4\\\">\\n            <app-file-uploader [data]=\\\"value\\\" (fileChanges)=\\\"fileChanges($event)\\\"></app-file-uploader>\\n        </div>\\n        <div class=\\\"text-right mt-2\\\">\\n            <ion-button type=\\\"submit\\\" [disabled]=\\\"!file\\\" (click)=\\\"onSave()\\\">\\n                Enregistrer\\n            </ion-button>\\n        </div>\\n    </section>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardCondidateComponent } from './components/card-condidate/card-condidate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CardCondidateComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CandidateRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { CandidateRoutingModule } from './candidate-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CardCondidateComponent } from './components/card-condidate/card-condidate.component';\nimport { CvCondidateComponent } from './components/update/cv-condidate/cv-condidate.component';\nimport { ExperienceCondidateComponent } from './components/update/experience-condidate/experience-condidate.component';\nimport { FormationCondidateComponent } from './components/update/formation-condidate/formation-condidate.component';\nimport { LangueCondidateComponent } from './components/update/langue-condidate/langue-condidate.component';\nimport { LinksCondidateComponent } from './components/update/links-condidate/links-condidate.component';\nimport { ObjectifCondidateComponent } from './components/update/objectif-condidate/objectif-condidate.component';\nimport { ProfilCondidateComponent } from './components/update/profil-condidate/profil-condidate.component';\nimport { SkilsCondidateComponent } from './components/update/skils-condidate/skils-condidate.component';\nimport { VideoCondidateComponent } from './components/update/video-condidate/video-condidate.component';\n\n\n@NgModule({\n  declarations: [CardCondidateComponent,\n    ProfilCondidateComponent,\n    ObjectifCondidateComponent,\n    VideoCondidateComponent,\n    CvCondidateComponent,\n    ExperienceCondidateComponent,\n    FormationCondidateComponent,\n    LangueCondidateComponent,\n    LinksCondidateComponent,\n    SkilsCondidateComponent],\n  imports: [\n    SharedModule,\n    CandidateRoutingModule\n  ]\n})\nexport class CandidateModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL2NhcmQtY29uZGlkYXRlL2NhcmQtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { ModalController, ActionSheetController, LoadingController } from '@ionic/angular';\nimport { CvCondidateComponent } from '../update/cv-condidate/cv-condidate.component';\nimport { ExperienceCondidateComponent } from '../update/experience-condidate/experience-condidate.component';\nimport { FormationCondidateComponent } from '../update/formation-condidate/formation-condidate.component';\nimport { LangueCondidateComponent } from '../update/langue-condidate/langue-condidate.component';\nimport { LinksCondidateComponent } from '../update/links-condidate/links-condidate.component';\nimport { ObjectifCondidateComponent } from '../update/objectif-condidate/objectif-condidate.component';\nimport { ProfilCondidateComponent } from '../update/profil-condidate/profil-condidate.component';\nimport { SkilsCondidateComponent } from '../update/skils-condidate/skils-condidate.component';\nimport { VideoCondidateComponent } from '../update/video-condidate/video-condidate.component';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { PictureUtilsService } from 'src/app/core/services/global/picture-utils.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { FileService } from 'src/app/core/services/crud/file.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Helper, Redirection } from 'src/app/core/utils';\n\n\n@Component({\n  selector: 'app-card-condidate',\n  templateUrl: './card-condidate.component.html',\n  styleUrls: ['./card-condidate.component.scss']\n})\nexport class CardCondidateComponent implements OnInit {\n\n  location: string;\n  languages = [];\n  objectifLocation: string;\n  hasChanged = false;\n  disabled = true;\n  values = [];\n  softSkills = [];\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public authService: AuthService,\n    private globalService: GlobalService, private actionSheetController: ActionSheetController,\n    private loadingController: LoadingController, private pictureUtilsService: PictureUtilsService,\n    private zone: NgZone, private toastService: ToastService, private fileService: FileService,\n    public candidateService: CandidateService, private trans: TransService) { }\n\n  ngOnInit(): void {\n    this.getLanguageCandidate();\n    console.log(this.authService.user);\n    this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n    const value = { picture: this.authService.user.picture };\n    this.oldPercentage = Helper.calculePercentage(value, 0, 1.96);\n  }\n\n  getLanguageCandidate() {\n    this.languages = this.authService.user['languages'].map(lang => {\n      const languageIndex = this.globalService.languages.findIndex(x => x._id === lang.language);\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === lang.languageLevel);\n      return {\n        language: this.globalService.languages[languageIndex],\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n      };\n    });\n  }\n\n  ionViewDidEnter(): void {\n    const index = this.globalService.locations.findIndex(x => x._id === this.authService.user['location']);\n    const objectifLocationIndex = this.globalService.locations.findIndex(x => x._id === this.authService.user['locations'][0]);\n    if (index !== -1) {\n      this.location = this.globalService.locations[index].name;\n    }\n    if (objectifLocationIndex !== -1) {\n      this.objectifLocation = this.globalService.locations[objectifLocationIndex].name;\n    }\n    this.candidateService.changes.subscribe(res => {\n      this.getLanguageCandidate();\n      const index = this.globalService.locations.findIndex(x => x._id === this.authService.user['location']);\n      const objectifLocationIndex = this.globalService.locations.findIndex(x => x._id === this.authService.user['locations'][0]);\n      if (index !== -1) {\n        this.location = this.globalService.locations[index].name;\n      }\n      if (objectifLocationIndex !== -1) {\n        this.objectifLocation = this.globalService.locations[objectifLocationIndex].name;\n      }\n    });\n    console.log(this.authService.user['values']);\n  }\n\n  /**\n   * add image\n   */\n  async addImageAction() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Image',\n      buttons: [\n        {\n          text: 'Camera',\n          icon: 'camera',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromCamera().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    if (!this.authService.user['picture']) {\n                      let value = { picture: res.file };\n                      let per = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n                      value = Object.assign(value, {\n                        percentage: (Math.round(per * 100) / 100).toFixed(2)\n                      });\n                      this.candidateService.updatePicture(value).subscribe(response => {\n                        console.log(response);\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.candidate.percentage = Math.round(per);\n                        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n\n                      });\n                      console.log('makaynach');\n                    } else {\n                      console.log('kayna');\n                      this.candidateService.updatePicture({ picture: res.file }).subscribe(response => {\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n                      });\n                    }\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              _error => {\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        },\n        {\n          text: 'Gallery',\n          icon: 'image',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromGallery().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    if (!this.authService.user['picture']) {\n                      let value = { picture: res.file };\n                      let per = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n                      value = Object.assign(value, {\n                        percentage: (Math.round(per * 100) / 100).toFixed(2)\n                      });\n                      console.log(value);\n                      this.candidateService.updatePicture(value).subscribe(response => {\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.candidate.percentage = Math.round(per);\n                        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n                      });\n                      console.log('makaynach');\n                    } else {\n                      console.log('kayna');\n                      this.candidateService.updatePicture({ picture: res.file}).subscribe(response => {\n                        console.log(response['picture']);\n                        this.authService.user['picture'] = response['picture'];\n                        this.candidateService.candidate['picture'] = response['picture'];\n                        this.candidateService.setChanges(true);\n                        this.toastService.success('Modifier avec success');\n                      });\n                    }\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              _error => {\n                alert(_error);\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  async editProfil() {\n    const modal = await this.modalController.create({\n      component: ProfilCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editObjectif() {\n    const modal = await this.modalController.create({\n      component: ObjectifCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editCV() {\n    const modal = await this.modalController.create({\n      component: CvCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editExperience() {\n    const modal = await this.modalController.create({\n      component: ExperienceCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editFormation() {\n    const modal = await this.modalController.create({\n      component: FormationCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editLangue() {\n    const modal = await this.modalController.create({\n      component: LangueCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editLinks() {\n    const modal = await this.modalController.create({\n      component: LinksCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editSkils() {\n    const modal = await this.modalController.create({\n      component: SkilsCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  async editVideo() {\n    const modal = await this.modalController.create({\n      component: VideoCondidateComponent\n    });\n    return await modal.present();\n  }\n\n  /**\n   * go back\n   */\n  goBack() {\n    if (this.authService.user.role.name === 'candidate') {\n      Redirection.candidateDashboard();\n    } else {\n      Redirection.dashboard();\n    }\n  }\n\n  enableButton() {\n    const softSkillsSize = this.softSkills.filter(x => (x.checked)).length;\n    const valuesSize = this.values.filter(x => (x.checked)).length;\n    this.disabled = softSkillsSize === 0 || valuesSize === 0;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9jdi1jb25kaWRhdGUvY3YtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\n\n@Component({\n  selector: 'app-cv-condidate',\n  templateUrl: './cv-condidate.component.html',\n  styleUrls: ['./cv-condidate.component.scss']\n})\nexport class CvCondidateComponent {\n\n  form: FormGroup;\n  file;\n  value;\n  constructor( public modalController: ModalController, private authService: AuthService,\n    private candidateService: CandidateService, private toastService: ToastService, private trans: TransService ) {\n  }\n\n  ionViewDidEnter(): void {\n    this.value = { file: this.authService.user['cv'] ? this.authService.user['cv'] : null, type: 'cv' };\n  }\n\n  /**\n  * \n  * @param value \n  */\n  fileChanges(value) {\n    this.file = value;\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    this.candidateService.updateCV(this.file._id).subscribe((response: Response) => {\n      this.authService.user['cv'] = this.file;\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9leHBlcmllbmNlLWNvbmRpZGF0ZS9leHBlcmllbmNlLWNvbmRpZGF0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormBuilder, FormControl, FormArray, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-experience-condidate',\n  templateUrl: './experience-condidate.component.html',\n  styleUrls: ['./experience-condidate.component.scss']\n})\nexport class ExperienceCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n  functions = [];\n  activitySectors = [];\n  inWork = false;\n\n  constructor(public modalController: ModalController, private fb: FormBuilder, public globalService: GlobalService,\n    private authService: AuthService, private transService: TransService, private toastService: ToastService,\n    private candidateService: CandidateService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n    this.setValues('experiences');\n  }\n\n  /**\n   * init experience form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      experiences: this.fb.array([this.getExperienceFields()]),\n    });\n  }\n\n  inWordChange() {\n    this.inWork = !this.inWork;\n  }\n\n  /**\n   * get experiences fields\n   */\n  private getExperienceFields(): FormGroup {\n    return this.fb.group({\n      job: new FormControl(null, Validators.required),\n      function: new FormControl(null, Validators.required),\n      startedDate: new FormControl(null, Validators.required),\n      endDate: new FormControl(null, Validators.required),\n      company: new FormControl(null, Validators.required),\n      activitySector: new FormControl(null, Validators.required),\n      location: new FormControl(null, Validators.required)\n    }, { validator: this.checkDates });\n  }\n\n  checkDates(group: FormGroup) {\n    const min = new Date(group.controls.startedDate.value).setHours(0, 0, 0, 0);\n    const max = new Date(group.controls.endDate.value).setHours(0, 0, 0, 0);\n    if (min === max || min > max) {\n      return { dateError: true };\n    }\n    console.log(min, max);\n    // return min === max ? null : { dateError: true };\n  }\n\n  /**\n   * set values\n   * @param control\n   */\n  private setValues(control: string) {\n    if (this.candidateService.candidate[control] && this.candidateService.candidate[control].length > 0) {\n      let fields = <FormArray>this.form.controls[control];\n      fields.controls.splice(0);\n      fields.controls = [];\n      this.candidateService.candidate[control].forEach((val) => {\n        fields.push(this.fb.group(val));\n      });\n    }\n  }\n\n  /**\n   * add field to form array\n   * @param ctrl\n   */\n  addField(ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.push(this.getExperienceFields());\n  }\n\n  /**\n   * remove field from form array\n   * @param index\n   * @param ctrl\n   */\n  removeField(index: number, ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.removeAt(index);\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n    if (this.candidateService.candidate['experiences'].length <= 0) {\n      this.candidateService.updateExperience(Object.assign(value, {\n        percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n      })).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        // this.candidateService.candidate = this.authService.user;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    } else {\n      this.candidateService.updateExperience(value).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        // this.candidateService.candidate = this.authService.user.candidate;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9mb3JtYXRpb24tY29uZGlkYXRlL2Zvcm1hdGlvbi1jb25kaWRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-formation-condidate',\n  templateUrl: './formation-condidate.component.html',\n  styleUrls: ['./formation-condidate.component.scss']\n})\nexport class FormationCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, private fb: FormBuilder,\n    public globalService: GlobalService, private toastService: ToastService,\n    private transService: TransService, private candidateService: CandidateService,\n    private authService: AuthService) {\n\n    this.initForm();\n\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n    this.setValues('trainings');\n  }\n\n  private initForm(): void {\n    this.form = this.fb.group({\n      levelOfStudies: new FormControl(this.candidateService.candidate['levelOfStudies']),\n      trainings: this.fb.array([this.getTrainings()]),\n    });\n  }\n\n  /**\n   * get study fields\n   */\n  private getTrainings(): FormGroup {\n    return this.fb.group({\n      name: new FormControl(null, Validators.required),\n      studyLevel: new FormControl(null, Validators.required),\n      typeOfTraining: new FormControl(null, Validators.required),\n      yearOfGraduation: new FormControl(null, Validators.required),\n      school: new FormControl(null, Validators.required),\n      location: new FormControl(null, Validators.required)\n    });\n  }\n\n\n  /**\n * set values\n * @param control\n */\n  private setValues(control: string) {\n    if (this.candidateService.candidate[control] && this.candidateService.candidate[control].length > 0) {\n      let fields = <FormArray>this.form.controls[control];\n      fields.controls.splice(0);\n      fields.controls = [];\n      this.candidateService.candidate[control].forEach((val) => {\n        fields.push(this.fb.group(val));\n      });\n    }\n  }\n\n  /**\n   * add field to form array\n   * @param ctrl\n   */\n  addField(ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.push(this.getTrainings());\n  }\n\n  /**\n   * remove field from form array\n   * @param index\n   * @param ctrl\n   */\n  removeField(index: number, ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.removeAt(index);\n  }\n\n\n  /**\n   * update trainings\n   */\n  onSave() {\n    const value = this.form.value;\n    for (let training of value['trainings']) {\n      training.yearOfGraduation = typeof training.yearOfGraduation === 'number' ? training.yearOfGraduation :\n        new Date(training.yearOfGraduation).getFullYear();\n    }\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n    if (this.candidateService.candidate['experiences'].length <= 0) {\n      this.candidateService.updateTraining(Object.assign(value, {\n        percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n      })).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        this.candidateService.candidate = this.authService.user as Candidate;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    } else {\n      this.candidateService.updateTraining(value).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.form.value);\n        this.candidateService.candidate = this.authService.user as Candidate;;\n        this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n        this.toastService.success('Enregistré avec succès');\n        this.modalController.dismiss();\n      });\n    }\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9sYW5ndWUtY29uZGlkYXRlL2xhbmd1ZS1jb25kaWRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormBuilder, FormControl, FormArray, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-langue-condidate',\n  templateUrl: './langue-condidate.component.html',\n  styleUrls: ['./langue-condidate.component.scss']\n})\nexport class LangueCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  languagesList = [];\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public globalService: GlobalService, private fb: FormBuilder,\n    private candidateService: CandidateService, private toastService: ToastService, private transService: TransService,\n    private authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    if (this.candidateService.candidate['languages'] && this.candidateService.candidate['languages'].length > 0) {\n      this.candidateService.candidate['languages'].forEach(item => {\n        const languageIndex = this.globalService.languages.findIndex(x => x._id === item.language);\n        const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === item.languageLevel);\n        this.languagesList.push({\n          language: this.globalService.languages[languageIndex],\n          languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n        });\n      });\n    }\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  private initForm(): void {\n    this.form = this.fb.group({\n      languages: new FormGroup({\n        language: new FormControl(null),\n        languageLevel: new FormControl(null)\n      }),\n      programingLanguages: new FormGroup({\n        language: new FormControl(this.candidateService.candidate['programingLanguages'] ? this.candidateService.candidate['programingLanguages']['language'] : []),\n        logiciel: new FormControl(this.candidateService.candidate['programingLanguages'] ? this.candidateService.candidate['programingLanguages']['logiciel'] : [])\n      }),\n    });\n  }\n\n  addLanguage() {\n    const value = this.form.get('languages').value;\n    if (value) {\n      const languageIndex = this.globalService.languages.findIndex(x => x._id === value.language);\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === value.languageLevel);\n      this.languagesList.push({\n        language: this.globalService.languages[languageIndex],\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n      });\n      this.form.get('languages').reset();\n    }\n  }\n\n  deleteLanguage(i: number) {\n    this.languagesList.splice(i, 1);\n  }\n\n  /**\n   * update soft skills\n   */\n  onSave() {\n    const value = this.form.value;\n    delete value['languages'];\n    value.languages = this.languagesList.map(x => ({\n      language: x.language._id,\n      languageLevel: x.languageLevel._id\n    }));\n\n    this.candidateService.updateLanguage(value).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.toastService.success('Enregistré avec succès');\n      this.candidateService.setChanges(true);\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9saW5rcy1jb25kaWRhdGUvbGlua3MtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-links-condidate',\n  templateUrl: './links-condidate.component.html',\n  styleUrls: ['./links-condidate.component.scss']\n})\nexport class LinksCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public authService: AuthService,\n    private candidateService: CandidateService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  /**\n   * init links\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      webSite: new FormControl(this.authService.user['webSite']),\n      blog: new FormControl(this.authService.user['blog']),\n      linkedin: new FormControl(this.authService.user['linkedin']),\n      instagram: new FormControl(this.authService.user['instagram']),\n      twitter: new FormControl(this.authService.user['twitter']),\n      facebook: new FormControl(this.authService.user['facebook'])\n    });\n  }\n\n  /**\n   * update social network\n   */\n  onSave() {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n    this.candidateService.updateSocialNetworks(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.candidateService.candidate = this.authService.user as Candidate;\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9vYmplY3RpZi1jb25kaWRhdGUvb2JqZWN0aWYtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-objectif-condidate',\n  templateUrl: './objectif-condidate.component.html',\n  styleUrls: ['./objectif-condidate.component.scss']\n})\nexport class ObjectifCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(private fb: FormBuilder, private candidateService: CandidateService, public globalService: GlobalService, private transService: TransService,\n    public authService: AuthService, private toastService: ToastService, public modalController: ModalController) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  /**\n   * init job infos form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      jobType: new FormControl(this.candidateService.candidate['jobType'], Validators.required),\n      searchedPost: new FormControl(this.candidateService.candidate['searchedPost'], Validators.required),\n      jobMode: new FormControl(this.candidateService.candidate['jobMode'], Validators.required),\n      supposedSalaryMin: new FormControl(this.candidateService.candidate['supposedSalaryMin'], Validators.required),\n      supposedSalaryMax: new FormControl(this.candidateService.candidate['supposedSalaryMax'], Validators.required),\n      usageTitles: new FormControl(this.candidateService.candidate['usageTitles'] ? this.candidateService.candidate['usageTitles'] : []),\n      functions: new FormControl(this.candidateService.candidate['functions'] ? this.candidateService.candidate['functions'] : []),\n      activitySector: new FormControl(this.candidateService.candidate['activitySector'] ? this.candidateService.candidate['activitySector'] : [], Validators.required),\n      locations: new FormControl(this.candidateService.candidate['locations'] ? this.candidateService.candidate['locations'] : [], Validators.required),\n      contracts: new FormControl(this.candidateService.candidate['contracts'] ? this.candidateService.candidate['contracts'] : [], Validators.required),\n    }, { validator: this.checkSupposedSalary });\n  }\n\n  checkSupposedSalary(group: FormGroup) {\n    const min = group.controls.supposedSalaryMin.value;\n    const max = group.controls.supposedSalaryMax.value;\n    return min < max ? null : { salaryErreur: true };\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n\n    this.candidateService.updateGoals(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.candidateService.candidate = this.authService.user as Candidate;\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.candidateService.setChanges(true);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9wcm9maWwtY29uZGlkYXRlL3Byb2ZpbC1jb25kaWRhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Helper } from 'src/app/core/utils';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-profil-condidate',\n  templateUrl: './profil-condidate.component.html',\n  styleUrls: ['./profil-condidate.component.scss']\n})\nexport class ProfilCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, public globalService: GlobalService,\n    private candidateService: CandidateService, private authService: AuthService,\n    private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n    console.log(this.candidateService.candidate);\n    // this.formPercentage = Object.keys(this.form.controls).length * 1.96;\n    // Number(this.candidateService.percentage.forEach(element => {\n    //   this.currentPercentage = element;\n    // }));\n    // this.newPercentage = (Math.trunc(this.currentPercentage) - Math.trunc(this.formPercentage));\n  }\n\n  private initForm() {\n    this.form = new FormGroup({\n      firstName: new FormControl(this.authService.user.firstName, Validators.required),\n      lastName: new FormControl(this.authService.user.lastName, Validators.required),\n      birthday: new FormControl( (this.candidateService.candidate ? this.candidateService.candidate['birthday'] : null ), Validators.required),\n      gender: new FormControl(this.candidateService.candidate['gender'], Validators.required),\n      phoneNumber: new FormControl(this.authService.user['phoneNumber'], Validators.required),\n      availability: new FormControl(this.candidateService.candidate['availability'], Validators.required),\n      currentJob: new FormControl(this.candidateService.candidate['currentJob'], Validators.required),\n      currentSalary: new FormControl(this.candidateService.candidate['currentSalary'], Validators.required),\n      managerialLevel: new FormControl(this.candidateService.candidate['managerialLevel'], Validators.required),\n      effective: new FormControl(this.candidateService.candidate['effective'], Validators.required),\n      goal: new FormControl(this.candidateService.candidate['goal'], Validators.required),\n      experienceYears: new FormControl(this.candidateService.candidate['experienceYears'], Validators.required),\n    });\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    const value = this.form.value;\n    const calc = Math.round(this.authService.user.percentage - Number(this.oldPercentage));\n    const percentage = Helper.calculePercentage(value, calc, 1.96);\n\n    this.candidateService.updateInfos(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, value);\n      this.authService.user = Object.assign(this.authService.user, {\n        firstName: value.firstName,\n        lastName: value.lastName\n      });\n      this.candidateService.candidate = this.authService.user as Candidate;\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS9za2lscy1jb25kaWRhdGUvc2tpbHMtY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces/response';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-skils-condidate',\n  templateUrl: './skils-condidate.component.html',\n  styleUrls: ['./skils-condidate.component.scss']\n})\nexport class SkilsCondidateComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(public modalController: ModalController, public globalService: GlobalService, private transService: TransService,\n              private authService: AuthService, private candidateService: CandidateService, private toastService: ToastService) {\n  }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      values: new FormControl(this.candidateService.candidate['values'] ? this.candidateService.candidate['values'] : []),\n      skills: new FormControl(this.candidateService.candidate['skills'] ? this.candidateService.candidate['skills'] : [])\n    });\n  }\n\n  /**\n   * update soft skills\n   */\n  onSave() {\n    this.candidateService.updateSoftSkills(this.form.value).subscribe((response: Response) => {\n      this.authService.user = Object.assign(this.authService.user, this.form.value);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhbmRpZGF0ZS9jb21wb25lbnRzL3VwZGF0ZS92aWRlby1jb25kaWRhdGUvdmlkZW8tY29uZGlkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ModalController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { Helper } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-video-condidate',\n  templateUrl: './video-condidate.component.html',\n  styleUrls: ['./video-condidate.component.scss']\n})\nexport class VideoCondidateComponent implements OnInit {\n\n  form: FormGroup;\n  file;\n  value;\n  oldPercentage = 0;\n\n  constructor(public modalController: ModalController, private candidateService: CandidateService,\n    private authService: AuthService, private toastService: ToastService, private trans: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    this.value = { file: this.authService.user['video'] ? this.authService.user['video'] : null, type: 'video' };\n    if (this.value.file) {\n      this.oldPercentage = 1.96;\n    }\n  }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      video: new FormControl(null, Validators.required)\n    });\n  }\n\n  /**\n   * \n   * @param value\n   */\n  fileChanges(value) {\n    this.form.setValue({ video: value });\n    this.file = value;\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    let value = this.form.value;\n    let percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    value = Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    });\n    this.authService.user['video'] = null;\n    this.candidateService.updateVideo(value).subscribe((response: Response) => {\n      this.authService.user['video'] = value.video;\n      this.candidateService.candidate['video'] = value.video;\n      this.candidateService.candidate.percentage = Math.round(value.percentage);\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      this.toastService.success('Enregistré avec succès');\n      this.modalController.dismiss();\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}