{"version":3,"sources":["webpack:///src/app/pages/settings/components/account/account.component.html","webpack:///src/app/pages/settings/components/entreprise/entreprise.component.html","webpack:///src/app/pages/settings/components/identity/identity.component.html","webpack:///src/app/pages/settings/components/settings/settings.component.html","webpack:///src/app/pages/settings/components/account/account.component.scss","webpack:///src/app/pages/settings/components/account/account.component.ts","webpack:///src/app/pages/settings/components/entreprise/entreprise.component.scss","webpack:///src/app/pages/settings/components/entreprise/entreprise.component.ts","webpack:///src/app/pages/settings/components/identity/identity.component.scss","webpack:///src/app/pages/settings/components/identity/identity.component.ts","webpack:///src/app/pages/settings/components/settings/settings.component.scss","webpack:///src/app/pages/settings/components/settings/settings.component.ts","webpack:///src/app/pages/settings/settings-routing.module.ts","webpack:///src/app/pages/settings/settings.module.ts"],"names":["AccountComponent","modalController","fb","authService","toastService","transService","initForm","form","group","email","user","compose","required","currentPassword","minLength","newPassword","confirmPassword","validator","checkPasswords","controls","value","passwordsDoNotMatch","updateProfile","subscribe","response","console","log","message","success","translate","dismiss","selector","template","EntrepriseComponent","globalService","company","phoneNumber","name","disabled","managerFirstName","managerLastName","title","zipCode","city","country","rc","taxIdentification","ice","activitySector","IdentityComponent","recruiterService","actionSheetController","loadingController","pictureUtilsService","zone","fileService","hasChanged","file","type","subscription","recruiter","getValues","picture","create","header","cssClass","buttons","text","icon","handler","syncing","setTimeout","loading","error","present","uploadFromCamera","then","imageData","run","res","updatePicture","uploadFromGallery","alert","actionSheet","role","formRecruiter","firstName","lastName","firstPhoneNumber","secondPhoneNumber","formCandidate","gender","updateIdentity","Object","assign","unsubscribe","SettingsComponent","component","modal","candidateDashboard","dashboard","routes","path","SettingsRoutingModule","imports","forChild","exports","SettingsModule","declarations"],"mappings":"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","file":"pages-settings-settings-module-es5.js","sourcesContent":["export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)='onSave()'>\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Compte</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Email <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" readonly></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Mot de passe actuel <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"password\\\" formControlName=\\\"currentPassword\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('currentPassword').invalid && (form.get('currentPassword').dirty || form.get('currentPassword').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Mot de passe <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"password\\\" formControlName=\\\"newPassword\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('newPassword').invalid && (form.get('newPassword').dirty || form.get('newPassword').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Confirmer le mot de passe <span class=\\\"required\\\">*</span>\\n                        </ion-label>\\n                        <ion-input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('confirmPassword').invalid && (form.get('confirmPassword').dirty || form.get('confirmPassword').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('confirmPassword').touched &&\\n                !form.get('confirmPassword').hasError('required') &&\\n                !form.get('confirmPassword').hasError('minlength') &&\\n                form.hasError('passwordsDoNotMatch')\\\" class=\\\"text-error\\\">\\n                    Les mots de passe ne correspondent pas.\\n                </small>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <!-- <ion-buttons slot=\\\"end\\\">\\n            <ion-button>\\n                Enregistrer\\n            </ion-button>\\n        </ion-buttons> -->\\n        <ion-title>Informations entreprise</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Nom de l’entreprise</mat-label>\\n                    <input type=\\\"type\\\" matInput value=\\\"Fairmont royal palm marrakech\\\" formControlName=\\\"name\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Nom du responsable</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"yasmine\\\" formControlName=\\\"managerLastName\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Prénom</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"jtioui\\\" formControlName=\\\"managerFirstName\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Titre</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"Hotellerie\\\" formControlName=\\\"title\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Adresse email</mat-label>\\n                    <input type=\\\"email\\\" matInput value=\\\"Fairmont.marrakaech@contact.com\\\" formControlName=\\\"email\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Adresse postale</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"40130\\\" formControlName=\\\"zipCode\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Ville / entreprise</mat-label>\\n                    <input type=\\\"text\\\" matInput formControlName=\\\"city\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Pays</mat-label>\\n                    <input type=\\\"text\\\" matInput formControlName=\\\"country\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>RC</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"7845103269\\\" formControlName=\\\"rc\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>IF</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"700364981\\\" formControlName=\\\"taxIdentification\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>ICE</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"145967236541208\\\" formControlName=\\\"ice\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Télephone portable</mat-label>\\n                    <input type=\\\"tel\\\" matInput value=\\\"555-555-1234\\\" formControlName=\\\"phoneNumber\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Secteur d’activité</mat-label>\\n                    <mat-select matNativeControl formControlName=\\\"activitySector\\\">\\n                        <mat-option *ngFor=\\\"let activitySector of globalService.activitySectors\\\" [value]=\\\"activitySector._id\\\"> \\n                            {{ activitySector.name }} \\n                        </mat-option>\\n                    </mat-select>\\n                </mat-form-field>\\n            </form>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"formRecruiter\\\" *ngIf=\\\"authService.user.role.name !== 'candidate'\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!formRecruiter.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Identité</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div class=\\\"d-block position-relative mr-auto pt-1\\\" *ngIf=\\\"authService.user.role.name !== 'candidate'\\\"\\n                    style=\\\"width: 120px\\\">\\n                    <img class=\\\"circle-image\\\"\\n                        [src]=\\\"authService.user.picture ? (('backend_url' | env) + this.authService.user.picture.name) : \\n                    (this.authService.user.civility === 'Mr' ? '/assets/img/male.svg' : '/assets/img/female.svg' )\\\" alt=\\\"profil\\\">\\n                    <div class=\\\"change-photo\\\" (click)=\\\"addImageAction()\\\">\\n                        <mat-icon style=\\\"color: #ffffff; position: absolute;top: 2px; left: 3px;\\\">edit</mat-icon>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Nom <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Prénom <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100 custom-input\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <!-- <span slot=\\\"start\\\" class=\\\"mr-1\\\" style=\\\"margin-top: 28px;\\\">+212 &nbsp;</span> -->\\n                        <ion-label position=\\\"floating\\\">Téléphone personnel (+212) </ion-label>\\n                        <ion-input type=\\\"tel\\\" formControlName=\\\"firstPhoneNumber\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100 custom-input\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Téléphone professionnel (+212) </ion-label>\\n                        <ion-input type=\\\"tel\\\" formControlName=\\\"secondPhoneNumber\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"text-right mt-2\\\">\\n                    <ion-button type=\\\"submit\\\" [disabled]=\\\"!formRecruiter.valid\\\">\\n                        Enregistrer\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\\n\\n<form class=\\\"d-block\\\" [formGroup]=\\\"formCandidate\\\" (ngSubmit)=\\\"onSave()\\\"\\n    *ngIf=\\\"authService.user.role.name === 'candidate'\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!formCandidate.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Identité</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <ng-container *ngIf=\\\"authService.user.role.name === 'candidate'\\\">\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Nom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n                        </ion-item>\\n                    </div>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('lastName').invalid && (formCandidate.get('lastName').dirty || formCandidate.get('lastName').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Prénom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\"></ion-input>\\n                        </ion-item>\\n                    </div>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('firstName').invalid && (formCandidate.get('firstName').dirty || formCandidate.get('firstName').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                    <ion-item class=\\\"custom-select w-100\\\">\\n                        <ion-label position=\\\"floating\\\">Sexe</ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"gender\\\">\\n                            <ion-select-option value=\\\"masculin\\\">Homme</ion-select-option>\\n                            <ion-select-option value=\\\"feminin\\\">Femme</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('gender').invalid && (formCandidate.get('gender').dirty || formCandidate.get('gender').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                    <div class=\\\"w-100 custom-input\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Téléphone (+212) <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"tel\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\n                        </ion-item>\\n                    </div>\\n\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('phoneNumber').invalid && (formCandidate.get('phoneNumber').dirty || formCandidate.get('phoneNumber').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                </ng-container>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!formCandidate.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"goBack()\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Paramètres</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"settings-content mb-3\\\">\\n        <div class=\\\"page-content\\\">\\n            <div class=\\\"d-block\\\">\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\" (click)=\\\"editEntreprise()\\\" *appHasPermission=\\\"['read_infos_company']\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Informations entreprise </ion-label>\\n                </ion-item>\\n\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\" (click)=\\\"openAccount()\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Compte </ion-label>\\n                </ion-item>\\n\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\" (click)=\\\"openIdentity()\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Identité </ion-label>\\n                </ion-item>\\n\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Confidentialité </ion-label>\\n                </ion-item>\\n\\n                <div class=\\\"mt-3 text-center\\\">\\n                    <ion-button class=\\\"w-80\\\" color=\\\"primary\\\" (click)=\\\"authService.logout()\\\">Déconnexion</ion-button>\\n                </div>\\n                \\n            </div>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent {\n\n  form: FormGroup;\n\n  constructor(public modalController: ModalController, private fb: FormBuilder,\n    private authService: AuthService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ionViewDidEnter(): void {\n  }\n\n  /**\n   * init Form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      email: new FormControl(this.authService.user.email, Validators.compose([Validators.required, Validators.email])),\n      currentPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      newPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      confirmPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n    }, { validator: this.checkPasswords });\n  }\n\n  /**\n   * check match passwords\n   * @param group\n   */\n  checkPasswords(group: FormGroup) {\n    return group.controls.newPassword.value === group.controls.confirmPassword.value ? null : { passwordsDoNotMatch: true };\n  }\n\n  /**\n   * update profile infos\n   */\n  onSave() {\n    let value = this.form.value;\n    delete value['confirmPassword'];\n    this.authService.updateProfile(value).subscribe((response: Response) => {\n      console.log(response.message);\n      this.toastService.success(this.transService.translate(response.message));\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvZW50cmVwcmlzZS9lbnRyZXByaXNlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\n\n@Component({\n  selector: 'app-entreprise',\n  templateUrl: './entreprise.component.html',\n  styleUrls: ['./entreprise.component.scss']\n})\nexport class EntrepriseComponent {\n\n  form: FormGroup;\n\n  constructor(public modalController: ModalController, private authService: AuthService,\n    public globalService: GlobalService) {\n    this.initForm();\n    console.log(this.authService.user.company.phoneNumber);\n  }\n\n  ionViewDidEnter(): void { }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      name: new FormControl({ value: this.authService.user.company.name, disabled: true }),\n      managerFirstName: new FormControl({ value: this.authService.user.company.managerFirstName, disabled: true }),\n      managerLastName: new FormControl({ value: this.authService.user.company.managerLastName, disabled: true }),\n      title: new FormControl({ value: this.authService.user.company.title, disabled: true }),\n      email: new FormControl({ value: this.authService.user.company.email, disabled: true }),\n      zipCode: new FormControl({ value: this.authService.user.company.zipCode, disabled: true }),\n      city: new FormControl({ value: this.authService.user.company.city, disabled: true }),\n      country: new FormControl({ value: this.authService.user.company.country, disabled: true }),\n      rc: new FormControl({ value: this.authService.user.company.rc, disabled: true }),\n      taxIdentification: new FormControl({ value: this.authService.user.company.taxIdentification, disabled: true }),\n      ice: new FormControl({ value: this.authService.user.company.ice, disabled: true }),\n      phoneNumber: new FormControl({ value: this.authService.user.company.phoneNumber, disabled: true }),\n      activitySector: new FormControl({ value: this.authService.user.company.activitySector, disabled: true })\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvaWRlbnRpdHkvaWRlbnRpdHkuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { ActionSheetController, LoadingController, ModalController } from '@ionic/angular';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { RecruiterService } from 'src/app/core/services/crud/recruiter.service';\nimport { Subscription } from 'rxjs';\nimport { Recruiter } from 'src/app/core/models/classes';\nimport { PictureUtilsService } from 'src/app/core/services/global/picture-utils.service';\nimport { FileService } from 'src/app/core/services/crud/file.service';\n\n@Component({\n  selector: 'app-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss']\n})\nexport class IdentityComponent implements OnInit, OnDestroy {\n\n  formCandidate: FormGroup;\n  formRecruiter: FormGroup;\n  hasChanged = false;\n  subscription: Subscription;\n  value = { file: null, type: 'photo' };\n\n  constructor(public modalController: ModalController, public authService: AuthService,\n    private toastService: ToastService, private transService: TransService, public recruiterService: RecruiterService,\n    private actionSheetController: ActionSheetController, private loadingController: LoadingController,\n    private pictureUtilsService: PictureUtilsService, private zone: NgZone, private fileService: FileService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.recruiterService.recruiter.subscribe((recruiter: Recruiter) => {\n      console.log(this.authService.user);\n      if (recruiter) {\n        console.log(recruiter.getValues());\n        this.value = { file: recruiter.picture ? recruiter.picture : null, type: 'edit-image' };\n      }\n    });\n  }\n\n  async addImageAction() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Image',\n      cssClass: 'my-actionSheet',\n      buttons: [\n        {\n          text: 'Camera',\n          icon: 'camera',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromCamera().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    this.authService.user.picture = res.file;\n                    this.recruiterService.updatePicture({\n                      picture: res.file\n                    }).subscribe(response => {\n                      this.authService.user.picture = res.file;\n                      this.toastService.success(this.transService.translate('picture_updated'));\n                    });\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              error => {\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        },\n        {\n          text: 'Gallery',\n          icon: 'image',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromGallery().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    this.recruiterService.updatePicture({\n                      picture: res.file\n                    }).subscribe(response => {\n                      this.authService.user.picture = res.file;\n                      this.toastService.success(this.transService.translate('picture_updated'));\n                    });\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              error => {\n                alert(error);\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  ionViewDidEnter(): void {\n  }\n\n  /**\n   * init form\n   */\n  private initForm() {\n    if (this.authService.user.role.name === 'recruiter' || this.authService.user.role.name === 'Responsable délégué' || this.authService.user.role.name === 'Responsable principale') {\n      this.formRecruiter = new FormGroup({\n        firstName: new FormControl(this.authService.user.firstName, Validators.required),\n        lastName: new FormControl(this.authService.user.lastName, Validators.required),\n        firstPhoneNumber: new FormControl(this.authService.user['firstPhoneNumber']),\n        secondPhoneNumber: new FormControl(this.authService.user['secondPhoneNumber'])\n      });\n    } else if (this.authService.user.role.name === 'candidate') {\n      this.formCandidate = new FormGroup({\n        firstName: new FormControl(this.authService.user.firstName, Validators.required),\n        lastName: new FormControl(this.authService.user.lastName, Validators.required),\n        email: new FormControl(this.authService.user.email),\n        gender: new FormControl(this.authService.user['gender'], Validators.required),\n        phoneNumber: new FormControl(this.authService.user.phoneNumber, Validators.required),\n      });\n    }\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    if (this.authService.user.role.name === 'candidate') {\n      console.log(this.formCandidate.value);\n      this.authService.updateIdentity(this.formCandidate.value).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.formCandidate.value);\n        this.authService.user = Object.assign(this.authService.user, this.formCandidate.value);\n        this.toastService.success(this.transService.translate(response.message));\n        this.modalController.dismiss();\n      });\n    }\n    else {\n      console.log(this.formRecruiter.value);\n      this.authService.updateIdentity(this.formRecruiter.value).subscribe((response: Response) => {\n        this.toastService.success(this.transService.translate(response.message));\n        this.modalController.dismiss();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { AccountComponent } from '../account/account.component';\nimport { EntrepriseComponent } from '../entreprise/entreprise.component';\nimport { IdentityComponent } from '../identity/identity.component';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  constructor(public modalController: ModalController, public authService: AuthService) { }\n\n  ionViewDidEnter(): void {\n  }\n\n  async openAccount() {\n    const modal = await this.modalController.create({\n      component: AccountComponent\n    });\n    return await modal.present();\n  }\n\n  async openIdentity() {\n    const modal = await this.modalController.create({\n      component: IdentityComponent\n    });\n    return await modal.present();\n  }\n\n  async editEntreprise() {\n    const modal = await this.modalController.create({\n      component: EntrepriseComponent\n    });\n    return await modal.present();\n  }\n\n  /**\n   * go back\n   */\n  goBack() {\n    if (this.authService.user.role.name === 'candidate') {\n      Redirection.candidateDashboard();\n    } else {\n      Redirection.dashboard();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsComponent } from './components/settings/settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AccountComponent } from './components/account/account.component';\nimport { IdentityComponent } from './components/identity/identity.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { EntrepriseComponent } from './components/entreprise/entreprise.component';\n\n\n@NgModule({\n  declarations: [SettingsComponent, AccountComponent, IdentityComponent, EntrepriseComponent],\n  imports: [\n    SharedModule,\n    SettingsRoutingModule\n  ]\n})\nexport class SettingsModule { }\n"]}