{"version":3,"sources":["./src/app/pages/authentication/components/account-type/account-type.component.html","./src/app/pages/authentication/components/congratulation/congratulation.component.html","./src/app/pages/authentication/components/forgot-password/forgot-password.component.html","./src/app/pages/authentication/components/recruiter/recruiter.component.html","./src/app/pages/authentication/components/reset-password/reset-password.component.html","./src/app/pages/authentication/components/sign-in/sign-in.component.html","./src/app/pages/authentication/components/sign-up/sign-up.component.html","./src/app/pages/authentication/components/verification/verification.component.html","./src/app/core/services/crud/contact.service.ts","./src/app/pages/authentication/Authentication-routing.module.ts","./src/app/pages/authentication/authentication.module.ts","./src/app/pages/authentication/components/account-type/account-type.component.scss","./src/app/pages/authentication/components/account-type/account-type.component.ts","./src/app/pages/authentication/components/congratulation/congratulation.component.scss","./src/app/pages/authentication/components/congratulation/congratulation.component.ts","./src/app/pages/authentication/components/forgot-password/forgot-password.component.scss","./src/app/pages/authentication/components/forgot-password/forgot-password.component.ts","./src/app/pages/authentication/components/index.ts","./src/app/pages/authentication/components/recruiter/recruiter.component.scss","./src/app/pages/authentication/components/recruiter/recruiter.component.ts","./src/app/pages/authentication/components/reset-password/reset-password.component.scss","./src/app/pages/authentication/components/reset-password/reset-password.component.ts","./src/app/pages/authentication/components/sign-in/sign-in.component.scss","./src/app/pages/authentication/components/sign-in/sign-in.component.ts","./src/app/pages/authentication/components/sign-up/sign-up.component.scss","./src/app/pages/authentication/components/sign-up/sign-up.component.ts","./src/app/pages/authentication/components/verification/verification.component.scss","./src/app/pages/authentication/components/verification/verification.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,klFAAmhF,E;;;;;;;;;;;;ACAliF;AAAe,m+CAAo6C,E;;;;;;;;;;;;ACAn7C;AAAe,o3DAAqzD,yCAAyC,2ZAA2Z,E;;;;;;;;;;;;ACAxwE;AAAe,k9CAAm5C,4CAA4C,ihBAAihB,4CAA4C,8gBAA8gB,4CAA4C,uhBAAuhB,4CAA4C,qgBAAqgB,yCAAyC,yhBAAyhB,4CAA4C,igDAAigD,E;;;;;;;;;;;;ACA5vL;AAAe,26DAA42D,E;;;;;;;;;;;;ACA33D;AAAe,6vBAA8rB,QAAQ,moBAAmoB,yCAAyC,i2DAAi2D,E;;;;;;;;;;;;ACAluG;AAAe,ivCAAkrC,4CAA4C,6XAA6X,4CAA4C,uZAAuZ,yCAAyC,+pGAA+pG,E;;;;;;;;;;;;ACArvK;AAAe,87CAA+3C,iCAAiC,08CAA08C,E;;;;;;;;;;;;;;;;;;ACA90F;AACQ;IAQtC,cAAc,SAAd,cAAc;IAEzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C;;;OAGG;IACH,OAAO,CAAC,OAAgB;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;IAC9D,CAAC;CAEF;;YApBQ,8DAAU;;AAQN,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAY1B;AAZ0B;;;;;;;;;;;;;;;;;;;;;;;ACToE;AACtD;AACc;AAIjC;AAC0D;AAEzE,MAAM,MAAM,GAAW;IAC1B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAe;KAC7B;IACD;QACI,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2DAAe;KAC7B;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,mEAAuB;KACrC;IACD;QACI,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,kEAAsB;KACpC;IACD;QACI,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,iEAAqB;KACnC;IACD;QACI,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,gEAAoB;KAClC;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4FAAkB;KAChC;IACD;QACI,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,2GAAuB;KACrC;CACJ,CAAC;IAMW,2BAA2B,SAA3B,2BAA2B;CACvC;AADY,2BAA2B;IAJvC,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,2BAA2B,CACvC;AADuC;;;;;;;;;;;;;;;;;;;;;;;AChDC;AAKnB;AACwD;AAClB;AACoB;AACe;IAYlF,oBAAoB,SAApB,oBAAoB;CAAI;AAAxB,oBAAoB;IAVhC,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAe,EAAE,2DAAe,EAAE,mEAAuB,EAAE,kEAAsB;YACjF,iEAAqB,EAAE,gEAAoB,EAAE,4FAAkB,EAAE,2GAAuB;SACzF;QACD,OAAO,EAAE;YACP,yEAAY;YACZ,0FAA2B;SAC5B;KACF,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;ACrBjC;AAAe,6GAA8C,uMAAuM,E;;;;;;;;;;;;;;;;;;;ACAlN;AACkB;AAC3B;IAO5B,oBAAoB,SAApB,oBAAoB;IAI/B,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ,KAAW,CAAC;IAEZ,QAAQ;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjD,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,WAAW,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;SAC5C;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;SAC9C;IACH,CAAC;CAEF;;YA/BQ,sDAAM;;AAOF,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gRAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAwBhC;AAxBgC;;;;;;;;;;;;;ACTjC;AAAe,6GAA8C,+MAA+M,E;;;;;;;;;;;;;;;;;;;;ACA1N;AACsB;AAEvB;AAC+B;IAOnE,uBAAuB,SAAvB,uBAAuB;IAElC,YAAmB,WAAwB,EAAU,gBAAkC;QAApE,gBAAW,GAAX,WAAW,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAE5F,QAAQ;IACR,CAAC;IAED;;OAEG;IACH,IAAI;QACF,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC3C,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;YACtG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAc,EAAE,EAAE;gBAC1D,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;oBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;wBAC/F,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;6BAC5B,SAAS,EAAE;6BACX,IAAI,CAAC,GAAG,CAAC,EAAE;4BACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,GAAG,CAAC;4BACtC,8DAAW,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;wBAC7C,CAAC,CAAC,CAAC;qBACJ;yBAAM;wBACL,8DAAW,CAAC,kBAAkB,EAAE,CAAC;qBAClC;iBACF;qBAAM;oBACL,8DAAW,CAAC,SAAS,EAAE,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;SACJ;aACI;YACH,8DAAW,CAAC,KAAK,EAAE,CAAC;SACrB;IACH,CAAC;CAEF;;YA9CQ,qFAAW;YAGX,6FAAgB;;AAOZ,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,sRAA8C;;KAE/C,CAAC;GACW,uBAAuB,CAoCnC;AApCmC;;;;;;;;;;;;;ACXpC;AAAe,6GAA8C,+MAA+M,E;;;;;;;;;;;;;;;;;;;;;;ACA1N;AACkB;AACI;AACvB;AAC4B;AAEA;IAOhE,uBAAuB,SAAvB,uBAAuB;IAIlC,YAAoB,WAAwB,EAAU,YAA0B,EAAU,YAA0B;QAAhG,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAClH,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ,KAAK,CAAC;IAEd;;OAEG;IACK,QAAQ;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAC1F,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAkB,EAAE,EAAE;YAChF,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,iBAAiB,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YAClE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACzE,8DAAW,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA1CQ,qFAAW;YAEX,0FAAY;YAEZ,0FAAY;;AAOR,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,yRAA+C;;KAEhD,CAAC;GACW,uBAAuB,CA+BnC;AA/BmC;;;;;;;;;;;;;ACbpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACM;AACF;AACd;AACA;AACU;;;;;;;;;;;;;ACLtD;AAAe,sFAAuB,qBAAqB,uBAAuB,GAAG,+BAA+B,0BAA0B,uBAAuB,GAAG,wEAAwE,kBAAkB,uBAAuB,gBAAgB,kCAAkC,+BAA+B,WAAW,iBAAiB,GAAG,sCAAsC,gBAAgB,uBAAuB,GAAG,qCAAqC,eAAe,sBAAsB,GAAG,+CAA+C,u7CAAu7C,E;;;;;;;;;;;;;;;;;;;;;ACA19D;AACkB;AACQ;AAE3B;AACuB;IAO3D,kBAAkB,SAAlB,kBAAkB;IAI7B,YAAoB,cAA8B,EAAU,WAAwB;QAAhE,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAClF,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;IACR,CAAC;IAED;;OAEG;IACK,QAAQ;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACzF,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3D,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,SAAS,CAAC;YACtC,8DAAW,CAAC,cAAc,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA7CQ,yFAAc;YAGd,qFAAW;;AAOP,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,uQAAyC;;KAE1C,CAAC;GACW,kBAAkB,CAmC9B;AAnC8B;;;;;;;;;;;;;ACZ/B;AAAe,6GAA8C,+MAA+M,E;;;;;;;;;;;;;;;;;;;;;;ACA1N;AAC+B;AAEJ;AACA;AACL;AACvB;IAOpC,sBAAsB,SAAtB,sBAAsB;IAIjC,YAAoB,EAAe,EAAU,WAAwB,EAAU,YAA0B,EAAU,YAA0B;QAAzH,OAAE,GAAF,EAAE,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAC3I,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ,KAAK,CAAC;IAEd;;OAEG;IACK,QAAQ;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnG,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3G,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,KAAgB;QAC7B,OAAO,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC;IACvH,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9E,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACpE,8DAAW,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;CAEF;;YAlDmB,0DAAW;YAItB,qFAAW;YAFX,0FAAY;YACZ,0FAAY;;AASR,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,sRAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAsClC;AAtCkC;;;;;;;;;;;;;ACbnC;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;;;ACAtM;AACkB;AACI;AAEvB;AAC+B;IAQnE,eAAe,SAAf,eAAe;IAO1B,YAAoB,WAAwB,EAAU,gBAAkC;QAApE,gBAAW,GAAX,WAAW,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QALxF,eAAU,GAAG,KAAK,CAAC;QAMjB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ,KAAK,CAAC;IAEd;;OAEG;IACK,QAAQ;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACpG,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAAc,EAAE,EAAE;YACpE,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3C,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAiB,CAAC;gBAC7D,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;oBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;wBAC/F,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;6BAC1B,SAAS,EAAE;6BACX,IAAI,CAAC,GAAG,CAAC,EAAE;4BACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;4BACjB,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,GAAG,CAAC;4BACtC,8DAAW,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;wBAC7C,CAAC,CAAC,CAAC;qBACN;yBAAM;wBACL,8DAAW,CAAC,kBAAkB,EAAE,CAAC;qBAClC;iBACF;qBAAM;oBACL,8DAAW,CAAC,SAAS,EAAE,CAAC;iBACzB;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA5DQ,qFAAW;YAGX,6FAAgB;;AAQZ,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iQAAuC;;KAExC,CAAC;GACW,eAAe,CAiD3B;AAjD2B;;;;;;;;;;;;;ACb5B;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;;ACAtM;AAC+B;AAET;AACvB;IAOpC,eAAe,SAAf,eAAe;IAG1B,YAAoB,EAAe,EAAU,WAAwB;QAAjD,OAAE,GAAF,EAAE,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QACnE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ,KAAK,CAAC;IAEd;;OAEG;IACK,QAAQ;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnG,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3G,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,KAAgB;QAC7B,OAAO,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC;IACvH,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,aAAa,KAAK,KAAK,CAAC,KAAK,EAAE;YACjC,8DAAW,CAAC,YAAY,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,SAAS,CAAC;gBACtC,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC;gBACjD,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACjD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC3C,8DAAW,CAAC,YAAY,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAEF;;YA5D4C,0DAAW;YAE/C,qFAAW;;AAQP,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,iQAAuC;;KAExC,CAAC;GACW,eAAe,CAkD3B;AAlD2B;;;;;;;;;;;;;ACX5B;AAAe,6GAA8C,uMAAuM,E;;;;;;;;;;;;;;;;;;;;;ACAlN;AACkB;AACI;AACvB;AAE4B;IAOhE,qBAAqB,SAArB,qBAAqB;IAKhC,YAAmB,WAAwB,EAAU,YAA0B;QAA5D,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAF/E,cAAS,GAAG,KAAK,CAAC;QAGhB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,EAAE,MAAM,CAAC,CAAC;IACb,CAAC;IAED;;OAEG;IACK,QAAQ;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAC;YACxB,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,KAAK,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjD,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,KAAK,EAAE,WAAW;QAC1B,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW;eAC9G,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC;YAC7E,WAAW,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE;YACtC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAkB,EAAE,EAAE;gBAC9G,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,CAAC,EAAE,MAAM,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,IAAI,gBAAgB,GAAG,EAAE,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACzC,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAC7D,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC3C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7G,8DAAW,CAAC,cAAc,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7G,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;gBACrD,8DAAW,CAAC,aAAa,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;SACJ;QACD,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;CAEF;;YA5EQ,qFAAW;YAGX,0FAAY;;AAOR,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,gRAA4C;;KAE7C,CAAC;GACW,qBAAqB,CAkEjC;AAlEiC","file":"pages-authentication-authentication-module-es2015.js","sourcesContent":["export default \"<!-- <ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title text-primary mb-0\\\">Inscription</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title text-primary\\\">Inscription</h1>\\n  </div>\\n</ion-header> -->\\n<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <a routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\">\\n    <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n  </a>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title text-primary\\\">Inscription</h1>\\n  </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <section class=\\\"auth-content auth-account-type p-2\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <article class=\\\"page-title\\\">\\n            <h1 class=\\\"title fw-500\\\">Vous êtes ?</h1>\\n          </article>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block mt-3\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"choiseType()\\\">\\n  \\n              <img class=\\\"d-block mb-2 mt-2 mr-auto w-100\\\" src=\\\"./assets/img/type-background.svg\\\" alt=\\\"type account\\\">\\n  \\n              <ion-radio-group formControlName=\\\"type\\\">\\n                <ion-item lines=\\\"none\\\" class=\\\"d-inline ion-no-padding\\\">\\n                  <ion-label>Recruteur</ion-label>\\n                  <ion-radio slot=\\\"start\\\" color=\\\"primary\\\" mode=\\\"md\\\" value=\\\"recruiter\\\"></ion-radio>\\n                </ion-item>\\n  \\n                <ion-item lines=\\\"none\\\" class=\\\"d-inline float-right ion-no-padding\\\">\\n                  <ion-label>Candidat</ion-label>\\n                  <ion-radio slot=\\\"start\\\" color=\\\"primary\\\" mode=\\\"md\\\" value=\\\"candidate\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n  \\n              <div class=\\\"mt-1\\\">\\n                <ion-button class=\\\"choose-btn w-100\\\" color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Continuer</ion-button>\\n              </div>\\n            </form>\\n  \\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n</ion-content>\";","export default \"<section class=\\\"congratulation mt-1\\\">\\n    <ng-container *ngIf=\\\"authService.fromPage === 'sign-up', else contact \\\" >\\n        <img class=\\\"d-block mt-1 mb-2 mr-auto\\\" src=\\\"./assets/img/logo.svg\\\" alt=\\\"\\\">\\n        <h2 class=\\\"text-center\\\"> Votre compte Jobwinwin a été créé avec succès!</h2>\\n        <div class=\\\"mt-2 text-center\\\">\\n            Les recruteurs sont à quelques clics! <br>\\n            Suivez les étapes d'inscription pour matcher et trouver votre futur emploi\\n        </div>\\n        <img class=\\\"d-block mt-3 mr-auto\\\" src=\\\"./assets/img/congratulation-ilustration.svg\\\" alt=\\\"\\\">\\n        <div class=\\\"text-center mt-3\\\">\\n            <ion-button class=\\\"yellow-btn w-80\\\" color=\\\"secondary\\\" (click)=\\\"goTo()\\\">\\n                Ok\\n            </ion-button>\\n        </div>\\n    </ng-container>\\n    \\n    <ng-template #contact>\\n        <img class=\\\"d-block mt-4 mr-auto\\\" src=\\\"./assets/img/logo.svg\\\" alt=\\\"\\\">\\n        <div class=\\\"mt-3 text-center\\\">\\n            Nous vous remercions pour votre message, un conseiller Jobwinwin prendra rapidement contact avec vous.\\n        </div>\\n        <img class=\\\"d-block mt-3 mr-auto w-30\\\" src=\\\"./assets/img/msg-check.svg\\\" alt=\\\"\\\">\\n        <div class=\\\"text-center mt-3\\\">\\n            <ion-button class=\\\"yellow-btn w-80\\\" color=\\\"secondary\\\" (click)=\\\"goTo()\\\">\\n                Ok\\n            </ion-button>\\n        </div>\\n    </ng-template>\\n\\n</section>\";","export default \"<!-- <ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title text-primary mb-0\\\">Mot de passe oublié</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <a routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\">\\n    <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n  </a>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title text-primary\\\">Mot de passe oublié</h1>\\n  </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"false\\\" class=\\\"forms\\\">\\n  <section class=\\\"auth-content auth-forgot-password p-1\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <img class=\\\"d-block mb-2 mr-auto w-100\\\" src=\\\"./assets/img/forgot-password.svg\\\" alt=\\\"forgot password\\\">\\n            <p class=\\\"mt-2\\\">\\n              Saisissez votre adresse e-mail <br>\\n              pour réinitialiser votre mot de passe\\n            </p>\\n            <form class=\\\"d-block mt-2\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                form.get('email').hasError('required'))\\\">\\n                  {{ 'shared.validations.email' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"mt-1\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"choose-btn w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">\\n                  Envoyer\\n                </ion-button>\\n              </div>\\n            </form>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </section>\\n\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header signup-background ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar class=\\\"auth-toolbar\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button routerLink=\\\"/auth/account-type\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"page-title\\\">\\n            <h1 class=\\\"title mb-0\\\">Contactez-nous</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content overflow-scroll=\\\"true\\\" scroll=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"auth-content auth-contact p-1\\\">\\n        <ion-grid class=\\\"h-100\\\">\\n            <ion-row class=\\\"h-100\\\">\\n                <ion-col size=\\\"12\\\" class=\\\"ion-align-self-start\\\">\\n                    <div class=\\\"page-content\\\">\\n                        <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Société\\\"\\n                                    formControlName=\\\"companyName\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('companyName').touched && form.get('companyName').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Nom complet\\\"\\n                                    formControlName=\\\"fullName\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('fullName').touched && form.get('fullName').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Fonction\\\"\\n                                    formControlName=\\\"function\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('function').touched && form.get('function').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"tel\\\" placeholder=\\\"Téléphone\\\"\\n                                    formControlName=\\\"phoneNumber\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('phoneNumber').touched && form.get('phoneNumber').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                                form.get('email').hasError('required'))\\\">\\n                                    {{ 'shared.validations.email' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <textarea class=\\\"custom-textarea\\\" placeholder=\\\"Tapez votre message\\\"\\n                                    formControlName=\\\"message\\\"></textarea>\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('message').touched && form.get('message').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"mt-1\\\">\\n                                <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">\\n                                    Envoyez le message\\n                                </ion-button>\\n                            </div>\\n                        </form>\\n\\n                        <div class=\\\"other-choice text-center mt-2 pb-4\\\">\\n                            <h3 class=\\\"title\\\">\\n                                <span>Ou appelez le</span>\\n                            </h3>\\n                            <div class=\\\"text-center mt-2\\\">\\n                                <div class=\\\"d-block mb-1\\\">\\n                                    <img class=\\\"d-inline align-sub mr-2\\\" src=\\\"./assets/icon/phone-icon.svg\\\">\\n                                    <span class=\\\"d-inline align-center\\\">+212 000 000 000</span>\\n                                </div>\\n                                <div class=\\\"d-block\\\">\\n                                    <img class=\\\"d-inline align-sub mr-2\\\" src=\\\"./assets/icon/phone-icon.svg\\\">\\n                                    <span class=\\\"d-inline align-center\\\">+212 000 000 000</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n\\n    </section>\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title-black mb-0\\\">Nouveau mot de passe</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n  <section class=\\\"auth-content auth-resetPassword p-1 h-80vh\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <img class=\\\"d-block mb-2 mr-auto w-100\\\" src=\\\"./assets/img/set-new-password.svg\\\" alt=\\\"Set New password\\\">\\n            <p class=\\\"text-center mt-2\\\">\\n              Entrez le nouveau mot de passe\\n            </p>\\n            <form class=\\\"d-block mt-2\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"form-group position-relative\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Nouveau mot de passe\\\"\\n                  formControlName=\\\"password\\\">\\n              </div>\\n              <div class=\\\"form-group position-relative\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Confirmez le mot de passe\\\"\\n                  formControlName=\\\"confirmPassword\\\">\\n              </div>\\n              <div class=\\\"mt-1\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">Validez</ion-button>\\n              </div>\\n            </form>\\n\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </section>\\n\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header signup-background ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-title class=\\\"text-center\\\">\\n      <img class=\\\"auth-logo\\\" src=\\\"./assets/img/logo.svg\\\" alt=\\\"Logo\\\">\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"forms\\\" >\\n  <section class=\\\"auth-content auth-login\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100 py-1\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-start\\\">\\n          <article class=\\\"page-title\\\">\\n            <p class=\\\"pt-1\\\">\\n              Connectez-vous à Jobwinwin<br>\\n              Swipez, Matchez et Rencontrez-vous !\\n            </p>\\n            {{ code }}\\n          </article>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <div class=\\\"custom-card py-1\\\">\\n              <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                  <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                form.get('email').hasError('required'))\\\">\\n                    {{ 'shared.validations.email' | translate}}\\n                  </small>\\n                </div>\\n                <div class=\\\"form-group position-relative\\\">\\n                  <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Mot de passe\\\" formControlName=\\\"password\\\">\\n                  <small class=\\\"text-error\\\" *ngIf=\\\"form.get('password').touched && (form.get('password').hasError('minlength') || \\n                form.get('password').hasError('required'))\\\"\\n                    [innerHtml]=\\\"'shared.validations.required-password' | translate\\\"></small>\\n                </div>\\n                <div class=\\\"forgot-password w-100 mt-1\\\">\\n                  <a routerLink=\\\"/auth/forgot-password\\\" routerDirection=\\\"root\\\">Mot de passe oublié ?</a>\\n                </div>\\n                <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                  <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"40%\\\">\\n                    <a class=\\\"pt-1\\\" routerLink=\\\"/auth/account-type\\\" routerDirection=\\\"root\\\"><span class=\\\"link\\\">Créer un compte</span></a>\\n                  </div>\\n                  <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"50%\\\">\\n                    <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">\\n                      Se connecter\\n                    </ion-button>\\n                  </div>\\n                </div>\\n              </form>\\n              <div class=\\\"other-choice text-center mt-2\\\">\\n                <h3 class=\\\"title\\\">Ou connectez-vous avec </h3>\\n                <p class=\\\"text-center mt-2\\\">\\n                  <img class=\\\"mr-2\\\" src=\\\"./assets/icon/linkedin.svg\\\">\\n                  <img src=\\\"./assets/icon/google.svg\\\">\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header signup-background ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button routerLink=\\\"/auth/account-type\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title mb-0\\\">Créer votre compte</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n  <section class=\\\"auth-content auth-signup p-1\\\">\\n\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-start\\\">\\n          <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Votre prénom\\\" formControlName=\\\"lastName\\\">\\n                <small class=\\\"text-error\\\"\\n                  *ngIf=\\\"form.get('lastName').touched && form.get('lastName').hasError('required')\\\">\\n                  {{ 'shared.validations.required' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Votre nom\\\" formControlName=\\\"firstName\\\">\\n                <small class=\\\"text-error\\\"\\n                  *ngIf=\\\"form.get('firstName').touched && form.get('firstName').hasError('required')\\\">\\n                  {{ 'shared.validations.required' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                form.get('email').hasError('required'))\\\">\\n                  {{ 'shared.validations.email' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Mot de passe\\\" formControlName=\\\"password\\\">\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('password').touched && (form.get('password').hasError('minlength') || \\n                form.get('password').hasError('required'))\\\"\\n                  [innerHtml]=\\\"'shared.validations.required-password' | translate\\\"></small>\\n              </div>\\n              <div class=\\\"form-group position-relative\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Confirmez le mot de passe\\\"\\n                  formControlName=\\\"confirmPassword\\\">\\n                <small class=\\\"text-error\\\"\\n                  *ngIf=\\\"form.get('confirmPassword').touched &&\\n                      (form.get('confirmPassword').hasError('required') || form.get('confirmPassword').hasError('minlength'))\\\">\\n                  Le champ doit contenir au moins <strong>5</strong> caractères.\\n                </small>\\n                <small *ngIf=\\\"form.get('confirmPassword').touched &&\\n                      !form.get('confirmPassword').hasError('required') &&\\n                      !form.get('confirmPassword').hasError('minlength') &&\\n                      form.hasError('passwordsDoNotMatch')\\\" class=\\\"text-error\\\">\\n                  Les mots de passe ne <strong>correspondent pas</strong>.\\n                </small>\\n              </div>\\n              <p class=\\\"condition-politique ion-text-center\\\">\\n                En appuyant sur je m'inscris et j'accepte, vous reconnaissez avoir lu notre\\n                <span class=\\\"link\\\">Politique de confidentialité </span> et acceptez nos <span class=\\\"link\\\"> Conditions\\n                  d'utilisation </span> du service\\n              </p>\\n              <div class=\\\"mt-1\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">Je m'inscris\\n                </ion-button>\\n              </div>\\n              <p class=\\\"hint ion-text-center\\\">\\n                En vous connectant.vous acceptez nos conditions générales. Pour en savoir plus sur l'usage que nous\\n                faisons de\\n                vos données, consultez notre Politique de confidentialité et notre Politique en matière de cookies.\\n              </p>\\n            </form>\\n\\n            <div class=\\\"other-choice text-center mt-2\\\">\\n              <h3 class=\\\"title\\\">Ou inscrivez-vous avec </h3>\\n              <p class=\\\"text-center mt-2\\\">\\n                <img class=\\\"mr-2\\\" src=\\\"./assets/icon/linkedin.svg\\\">\\n                <img src=\\\"./assets/icon/google.svg\\\">\\n              </p>\\n            </div>\\n\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-end\\\">\\n          <div class=\\\"footer-auth text-center\\\">\\n            <p class=\\\"mt-1 copyright\\\">Vous avez déjà un compte ?\\n              <a routerLink=\\\"/\\\" routerDirection=\\\"root\\\"><span class=\\\"link\\\">S’identifier</span></a>\\n            </p>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n</ion-content>\";","export default \"<!-- <ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/auth/forgot-password\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title mb-0\\\">Vérification d’email</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <a [routerLink]=\\\"authService.fromPage === 'sign-up' ? '/auth/sign-up' : '/auth/forgot-password' \\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\">\\n    <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n  </a>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title\\\">Vérification d’email</h1>\\n  </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"verify-background forms\\\">\\n  <section class=\\\"auth-content auth-verification p-1\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content mt-3\\\">\\n            <h4 class=\\\"subtitle\\\">Entrez le code</h4>\\n            <p class=\\\"desc text-center mt-2\\\">\\n              Nous vous avons envoyé un code d’activation par email sur le compte {{ authService.verificationEmail }}\\n            </p>\\n            <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"custom-card mt-4\\\">\\n                <div class=\\\"form-group text-center\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"1\\\" (keyup)=\\\"moveFocus($event, b)\\\"\\n                    formControlName=\\\"one\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"2\\\" #b (keyup)=\\\"moveFocus($event, c)\\\"\\n                    formControlName=\\\"two\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"3\\\" #c (keyup)=\\\"moveFocus($event, d)\\\"\\n                    formControlName=\\\"three\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"4\\\" #d formControlName=\\\"four\\\">\\n                </div>\\n              </div>\\n\\n              <div class=\\\"text-left pt-2\\\">\\n                <strong *ngIf=\\\"sendTimer\\\"  class=\\\"text-primary\\\" (click)=\\\"resendCode()\\\">Renvoyer le code ?</strong><br>\\n                <small>Veuillez patienter au moins 2 minutes avant de demander un autre code </small>\\n              </div>\\n\\n              <ion-button type=\\\"submit\\\" class=\\\"btn-verification mt-3 w-100\\\" [disabled]=\\\"!form.valid\\\">\\n                Validez\\n              </ion-button>\\n\\n            </form>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </section>\\n\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { ApiService } from '../global/api.service';\nimport { Observable } from 'rxjs';\nimport { Response } from '../../models/interfaces';\nimport { Contact } from '../../models/classes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor(private apiService: ApiService) { }\n\n  /**\n   * contact admin\n   * @param contact\n   */\n  contact(contact: Contact): Observable<Response> {\n    return this.apiService.post('contact-ms/contacts', contact);\n  }\n\n}\n","import { CongratulationComponent } from './components/congratulation/congratulation.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n    SignInComponent, SignUpComponent, ForgotPasswordComponent,\n    ResetPasswordComponent, VerificationComponent, AccountTypeComponent\n} from './components';\nimport { RecruiterComponent } from './components/recruiter/recruiter.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        component: SignInComponent\n    },\n    {\n        path: 'sign-up',\n        component: SignUpComponent\n    },\n    {\n        path: 'forgot-password',\n        component: ForgotPasswordComponent\n    },\n    {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n    },\n    {\n        path: 'verification',\n        component: VerificationComponent\n    },\n    {\n        path: 'account-type',\n        component: AccountTypeComponent\n    },\n    {\n        path: 'recruiter',\n        component: RecruiterComponent\n    },\n    {\n        path: 'congratulation',\n        component: CongratulationComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  SignInComponent, SignUpComponent, ForgotPasswordComponent,\n  ResetPasswordComponent, VerificationComponent, AccountTypeComponent\n} from './components';\nimport { AuthenticationRoutingModule } from './Authentication-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RecruiterComponent } from './components/recruiter/recruiter.component';\nimport { CongratulationComponent } from './components/congratulation/congratulation.component';\n\n@NgModule({\n  declarations: [\n    SignInComponent, SignUpComponent, ForgotPasswordComponent, ResetPasswordComponent,\n    VerificationComponent, AccountTypeComponent, RecruiterComponent, CongratulationComponent\n  ],\n  imports: [\n    SharedModule,\n    AuthenticationRoutingModule\n  ]\n})\nexport class AuthenticationModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvYWNjb3VudC10eXBlL2FjY291bnQtdHlwZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account-type',\n  templateUrl: './account-type.component.html',\n  styleUrls: ['./account-type.component.scss'],\n})\nexport class AccountTypeComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private router: Router) {\n    this.initForm();\n  }\n\n  ngOnInit(): void { }\n\n  private initForm(): void {\n    this.form = new FormGroup({\n      type: new FormControl(null, Validators.required)\n    });\n  }\n\n  choiseType(): void {\n    if (this.form.get('type').value === 'candidate') {\n      this.router.navigateByUrl('/auth/sign-up');\n    } else {\n      this.router.navigateByUrl('/auth/recruiter');\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvY29uZ3JhdHVsYXRpb24vY29uZ3JhdHVsYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Auth } from 'src/app/core/models/interfaces';\nimport { Redirection } from 'src/app/core/utils';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\n\n@Component({\n  selector: 'app-congratulation',\n  templateUrl: './congratulation.component.html',\n  styleUrls: ['./congratulation.component.scss']\n})\nexport class CongratulationComponent implements OnInit {\n\n  constructor(public authService: AuthService, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * on save\n   */\n  goTo(): void {\n    if (this.authService.fromPage === 'sign-up') {\n      const value = { email: this.authService.verificationEmail, password: this.authService.signUpPassword }\n      this.authService.signIn(value).subscribe((response: Auth) => {\n        if (response.user.userRole === 'Candidate') {\n          if (!response.user || Object.keys(response.user).length === 0 || response.user.currentStep <= 8) {\n            this.authService.isLoggedIn()\n            .toPromise()\n            .then(res => {\n              console.log(res);\n              this.candidateService.candidate = res;\n              Redirection.profileByStep(res.currentStep);\n            });\n          } else {\n            Redirection.candidateDashboard();\n          }\n        } else {\n          Redirection.dashboard();\n        }\n      });\n    }\n    else {\n      Redirection.login();\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private authService: AuthService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init forgot password form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, Validators.compose([Validators.required, Validators.email]))\n    });\n  }\n\n  /**\n   * forgot your password\n   */\n  onSave(): void {\n    this.authService.forgotPassword(this.form.value).subscribe((response: Response) => {\n      this.authService.fromPage = 'forgot-password';\n      this.authService.verificationEmail = this.form.get('email').value;\n      this.toastService.success(this.transService.translate(response.message));\n      Redirection.verification();\n    });\n  }\n\n}\n","export * from './account-type/account-type.component';\nexport * from './forgot-password/forgot-password.component';\nexport * from './reset-password/reset-password.component';\nexport * from './sign-in/sign-in.component';\nexport * from './sign-up/sign-up.component';\nexport * from './verification/verification.component';","export default \".other-choice .title {\\n  line-height: 0.5;\\n  text-align: center;\\n}\\n\\n.other-choice .title span {\\n  display: inline-block;\\n  position: relative;\\n}\\n\\n.other-choice .title span:before,\\n.other-choice .title span:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 5px;\\n  border-bottom: 1px solid #ccc;\\n  border-top: 1px solid #ccc;\\n  top: 0;\\n  width: 130px;\\n}\\n\\n.other-choice .title span:before {\\n  right: 100%;\\n  margin-right: 15px;\\n}\\n\\n.other-choice .title span:after {\\n  left: 100%;\\n  margin-left: 15px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy9yZWNydWl0ZXIvcmVjcnVpdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVEsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUExQjs7QUFIQTtFQU1RLHFCQUFxQjtFQUNyQixrQkFBa0I7QUFDMUI7O0FBUkE7O0VBV1EsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsNkJBQTZCO0VBQzdCLDBCQUEwQjtFQUMxQixNQUFNO0VBQ04sWUFBWTtBQUVwQjs7QUFuQkE7RUFvQlEsV0FBVztFQUNYLGtCQUFrQjtBQUcxQjs7QUF4QkE7RUF3QlEsVUFBVTtFQUNWLGlCQUFpQjtBQUl6QiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvcmVjcnVpdGVyL3JlY3J1aXRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vdGhlci1jaG9pY2Uge1xuICAgIC50aXRsZSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAwLjU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIH1cbiAgICAgIC50aXRsZSBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICBcbiAgICAgIH1cbiAgICAgIC50aXRsZSBzcGFuOmJlZm9yZSxcbiAgICAgIC50aXRsZSBzcGFuOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBoZWlnaHQ6IDVweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHdpZHRoOiAxMzBweDtcbiAgICAgIH1cbiAgICAgIC50aXRsZSBzcGFuOmJlZm9yZSB7XG4gICAgICAgIHJpZ2h0OiAxMDAlO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgICB9XG4gICAgICAudGl0bGUgc3BhbjphZnRlciB7XG4gICAgICAgIGxlZnQ6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICAgICAgfVxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ContactService } from 'src/app/core/services/crud/contact.service';\nimport { Contact } from 'src/app/core/models/classes';\nimport { Redirection } from 'src/app/core/utils';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\n\n@Component({\n  selector: 'app-recruiter',\n  templateUrl: './recruiter.component.html',\n  styleUrls: ['./recruiter.component.scss']\n})\nexport class RecruiterComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private contactService: ContactService, private authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * init contact form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      companyName: new FormControl(null, Validators.required),\n      function: new FormControl(null, Validators.required),\n      fullName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      email: new FormControl(null, Validators.compose([Validators.required, Validators.email])),\n      message: new FormControl(null, Validators.required)\n    });\n  }\n\n  /**\n   * contact\n   */\n  onSave() {\n    this.contactService.contact(this.form.value).subscribe(res => {\n      this.authService.fromPage = 'contact';\n      Redirection.congratulation();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatchPassword } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      password: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      confirmPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n    }, { validator: this.checkPasswords });\n  }\n\n  /**\n   * check match passwords\n   * @param group\n   */\n  checkPasswords(group: FormGroup): MatchPassword {\n    return group.controls.password.value === group.controls.confirmPassword.value ? null : { passwordsDoNotMatch: true };\n  }\n\n  /**\n   * reset password\n   */\n  onSave(): void {\n    this.authService.resetPassword(this.form.get('password').value).subscribe(res => {\n      this.toastService.success(this.transService.translate(res.message));\n      Redirection.login();\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Response, Auth } from 'src/app/core/models/interfaces';\nimport { Redirection } from 'src/app/core/utils';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n\n  visibility = false;\n\n  form: FormGroup;\n  code: string;\n\n  constructor(private authService: AuthService, private candidateService: CandidateService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init sign in form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, Validators.compose([Validators.required, Validators.email])),\n      password: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)]))\n    });\n  }\n\n  /**\n   * singn in\n   */\n  onSave(): void {\n    this.authService.signIn(this.form.value).subscribe((response: Auth) => {\n      if (Object.keys(response.user).length !== 0) {\n        this.candidateService.candidate = response.user as Candidate;\n        if (response.user.userRole === 'Candidate') {\n          if (!response.user || Object.keys(response.user).length === 0 || response.user.currentStep <= 6) {\n            this.authService.isLoggedIn()\n              .toPromise()\n              .then(res => {\n                console.log(res);\n                this.candidateService.candidate = res;\n                Redirection.profileByStep(res.currentStep);\n              });\n          } else {\n            Redirection.candidateDashboard();\n          }\n        } else {\n          Redirection.dashboard();\n        }\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { MatchPassword } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init sign up form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      email: new FormControl(null, Validators.compose([Validators.email, Validators.required])),\n      password: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      confirmPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n    }, { validator: this.checkPasswords });\n  }\n\n  /**\n   * check match passwords\n   * @param group\n   */\n  checkPasswords(group: FormGroup): MatchPassword {\n    return group.controls.password.value === group.controls.confirmPassword.value ? null : { passwordsDoNotMatch: true };\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    const value = this.form.value;\n    let getLocalEmail = localStorage.getItem('email');\n    if (getLocalEmail === value.email) {\n      Redirection.verification();\n    } else {\n      this.authService.signUp(value).subscribe(res => {\n        console.log(res);\n        this.authService.fromPage = 'sign-up';\n        this.authService.verificationEmail = value.email;\n        this.authService.signUpPassword = value.password;\n        localStorage.setItem('email', value.email);\n        Redirection.verification();\n      });\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvdmVyaWZpY2F0aW9uL3ZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\n\n@Component({\n  selector: 'app-verification',\n  templateUrl: './verification.component.html',\n  styleUrls: ['./verification.component.scss'],\n})\nexport class VerificationComponent implements OnInit {\n\n  form: FormGroup;\n  sendTimer = false;\n\n  constructor(public authService: AuthService, private toastService: ToastService) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.sendTimer = true;\n    }, 120000);\n  }\n\n  /**\n   * init verification form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      one: new FormControl(null, Validators.required),\n      two: new FormControl(null, Validators.required),\n      three: new FormControl(null, Validators.required),\n      four: new FormControl(null, Validators.required)\n    });\n  }\n\n  moveFocus(event, nextElement) {\n    if (event.code !== 'Backspace' && event.code !== 'Space' && event.code !== 'CapsLock' && event.code !== 'ShiftLeft'\n      && event.code !== 'ShiftRight' && event.keyCode !== 16 && event.keyCode !== 8)\n      nextElement.focus();\n  }\n\n  resendCode() {\n    if (this.authService.verificationEmail) {\n      this.authService.forgotPassword({ email: this.authService.verificationEmail }).subscribe((response: Response) => {\n        this.toastService.success('Le code a été bien renvoyé');\n        this.sendTimer = false;\n        setTimeout(() => {\n          this.sendTimer = true;\n        }, 120000);\n      });\n    }\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    let verificationCode = '';\n    Object.keys(this.form.value).forEach(key => {\n      verificationCode += this.form.get(key).value.toLowerCase();\n    });\n    if (this.authService.fromPage === 'sign-up') {\n      this.authService.verification({ verificationCode, email: this.authService.verificationEmail }).subscribe(res => {\n        Redirection.congratulation();\n      });\n    } else {\n      this.authService.verification({ verificationCode, email: this.authService.verificationEmail }).subscribe(res => {\n        this.authService.verificationCode = verificationCode;\n        Redirection.resetPassword();\n      });\n    }\n    localStorage.removeItem('email');\n  }\n\n}\n"],"sourceRoot":"webpack:///"}