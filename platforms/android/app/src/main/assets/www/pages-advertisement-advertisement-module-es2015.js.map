{"version":3,"sources":["./src/app/pages/advertisement/components/create/create-advertisement/create-advertisement.component.html","./src/app/pages/advertisement/components/create/experience-required/experience-required.component.html","./src/app/pages/advertisement/components/create/form-advertissement/form-advertissement.component.html","./src/app/pages/advertisement/components/create/slider-advertisement/slider-advertisement.component.html","./src/app/pages/advertisement/components/create/validate-advertisement/validate-advertisement.component.html","./src/app/pages/advertisement/components/details/ads-details/ads-details.component.html","./src/app/pages/advertisement/components/details/ads-profile/ads-profile.component.html","./src/app/pages/advertisement/components/listes/listes.component.html","./src/app/pages/advertisement/components/update/date/date.component.html","./src/app/pages/advertisement/components/update/mission/mission.component.html","./src/app/pages/advertisement/components/update/other-info/other-info.component.html","./src/app/pages/advertisement/components/update/profil/profil.component.html","./src/app/pages/advertisement/components/update/status/status.component.html","./src/app/pages/advertisement/components/update/task/task.component.html","./src/app/pages/advertisement/advertisement-routing.module.ts","./src/app/pages/advertisement/advertisement.module.ts","./src/app/pages/advertisement/components/create/create-advertisement/create-advertisement.component.scss","./src/app/pages/advertisement/components/create/create-advertisement/create-advertisement.component.ts","./src/app/pages/advertisement/components/create/experience-required/experience-required.component.scss","./src/app/pages/advertisement/components/create/experience-required/experience-required.component.ts","./src/app/pages/advertisement/components/create/form-advertissement/form-advertissement.component.ts","./src/app/pages/advertisement/components/create/slider-advertisement/slider-advertisement.component.scss","./src/app/pages/advertisement/components/create/slider-advertisement/slider-advertisement.component.ts","./src/app/pages/advertisement/components/create/validate-advertisement/validate-advertisement.component.scss","./src/app/pages/advertisement/components/create/validate-advertisement/validate-advertisement.component.ts","./src/app/pages/advertisement/components/details/ads-details/ads-details.component.scss","./src/app/pages/advertisement/components/details/ads-details/ads-details.component.ts","./src/app/pages/advertisement/components/details/ads-profile/ads-profile.component.scss","./src/app/pages/advertisement/components/details/ads-profile/ads-profile.component.ts","./src/app/pages/advertisement/components/listes/listes.component.scss","./src/app/pages/advertisement/components/listes/listes.component.ts","./src/app/pages/advertisement/components/update/date/date.component.scss","./src/app/pages/advertisement/components/update/date/date.component.ts","./src/app/pages/advertisement/components/update/mission/mission.component.scss","./src/app/pages/advertisement/components/update/mission/mission.component.ts","./src/app/pages/advertisement/components/update/other-info/other-info.component.scss","./src/app/pages/advertisement/components/update/other-info/other-info.component.ts","./src/app/pages/advertisement/components/update/profil/profil.component.scss","./src/app/pages/advertisement/components/update/profil/profil.component.ts","./src/app/pages/advertisement/components/update/status/status.component.scss","./src/app/pages/advertisement/components/update/status/status.component.ts","./src/app/pages/advertisement/components/update/task/task.component.scss","./src/app/pages/advertisement/components/update/task/task.component.ts"],"names":[],"mappings":"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","file":"pages-advertisement-advertisement-module-es2015.js","sourcesContent":["export default \"<form class=\\\"d-block mt-1\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-input\\\">\\n            <ion-label position=\\\"floating\\\">Poste à pourvoir <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"desiredJob\\\"></ion-input>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('desiredJob').invalid && (form.get('desiredJob').dirty || form.get('desiredJob').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div>\\n\\n    <div class=\\\"w-100\\\">\\n        <app-multi-select label=\\\"Intitulés d'usage\\\" collection=\\\"usageTitles\\\" formControlName=\\\"usageTitles\\\">\\n        </app-multi-select>\\n        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('usageTitles').value?.length <= 0\\\">\\n            Veuillez choisir au moins un intitulé d'usage.\\n        </small>\\n    </div>\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n            <ion-label position=\\\"floating\\\">Fonction <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                formControlName=\\\"function\\\">\\n                <ion-select-option *ngFor=\\\"let item of globalService.functions\\\" [value]=\\\"item._id\\\">\\n                    {{item.name}}\\n                </ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('function').invalid && (form.get('function').dirty || form.get('function').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <ion-item class=\\\"custom-select w-100\\\">\\n                <ion-label position=\\\"floating\\\">Expérience <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                    formControlName=\\\"experienceYears\\\">\\n                    <ion-select-option *ngFor=\\\"let experience of globalService.experiences\\\" [value]=\\\"experience._id\\\">\\n                        {{ experience.name }}\\n                    </ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('experienceYears').invalid && (form.get('experienceYears').dirty || form.get('experienceYears').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <ion-item class=\\\"custom-select w-100\\\">\\n                <ion-label position=\\\"floating\\\">Effectif géré <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                    formControlName=\\\"effective\\\">\\n                    <ion-select-option *ngFor=\\\"let effective of globalService.effectives\\\" [value]=\\\"effective._id\\\">\\n                        {{ effective.name }}\\n                    </ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('effective').invalid && (form.get('effective').dirty || form.get('effective').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n            <ion-label position=\\\"floating\\\">Niveau managérial <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                formControlName=\\\"managerialLevel\\\">\\n                <ion-select-option *ngFor=\\\"let item of globalService.managerialLevels\\\" [value]=\\\"item._id\\\">\\n                    {{item.name}}\\n                </ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('managerialLevel').invalid && (form.get('managerialLevel').dirty || form.get('managerialLevel').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div>\\n\\n    <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <ion-item class=\\\"custom-select w-100\\\">\\n                <ion-label position=\\\"floating\\\">Type de contrat <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                    formControlName=\\\"contract\\\">\\n                    <ion-select-option *ngFor=\\\"let item of globalService.contracts\\\" [value]=\\\"item._id\\\">\\n                        {{item.name}}\\n                    </ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('contract').invalid && (form.get('contract').dirty || form.get('contract').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <ion-item class=\\\"custom-select w-100\\\">\\n                <ion-label position=\\\"floating\\\">Type de Poste <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                    formControlName=\\\"jobType\\\">\\n                    <ion-select-option *ngFor=\\\"let item of globalService.jobTypes\\\" [value]=\\\"item._id\\\">\\n                        {{item.name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('jobType').invalid && (form.get('jobType').dirty || form.get('jobType').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n            <ion-label position=\\\"floating\\\">Mode de travail <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                formControlName=\\\"jobMode\\\">\\n                <ion-select-option *ngFor=\\\"let item of globalService.jobModes\\\" [value]=\\\"item._id\\\">\\n                    {{item.name}}</ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('jobMode').invalid && (form.get('jobMode').dirty || form.get('jobMode').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div>\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n            <ion-label position=\\\"floating\\\">Poste basé à <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                formControlName=\\\"location\\\">\\n                <ion-select-option *ngFor=\\\"let item of globalService.locations\\\" [value]=\\\"item._id\\\">\\n                    {{item.name}}\\n                </ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('location').invalid && (form.get('location').dirty || form.get('location').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div>\\n\\n\\n    <div class=\\\"w-100 mt-1\\\">\\n        <mat-form-field class=\\\"w-100\\\">\\n            <mat-label>Mission générale <span class=\\\"required\\\">*</span></mat-label>\\n            <textarea matInput placeholder=\\\"Mission générale\\\" matTextareaAutosize matAutosizeMinRows=1 matAutosizeMaxRows=7\\n                formControlName=\\\"missions\\\">\\n                        </textarea>\\n        </mat-form-field>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('missions').invalid && (form.get('missions').dirty || form.get('missions').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div>\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-input\\\">\\n            <ion-label position=\\\"floating\\\">Descriptif de poste <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"descriptions\\\" #description></ion-input>\\n            <!-- <ion-icon (click)=\\\"addDescription(description)\\\" name=\\\"add\\\"></ion-icon> -->\\n        </ion-item>\\n        <small class=\\\"text-error\\\" *ngIf=\\\"descriptions.length <= 0\\\">\\n            Veuillez ajouter chaque tâche du descriptif.\\n        </small>\\n    </div>\\n    <div class=\\\"mt-1 w-100\\\">\\n        <ion-button fill=\\\"outline\\\" class=\\\"btn-outline d-block ml-auto mr-0 w-30\\\" color=\\\"primary\\\"\\n            [disabled]=\\\"!form.get('descriptions').value\\\" (click)=\\\"addDescription(description)\\\">\\n            Ajouter\\n            <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n        </ion-button>\\n    </div>\\n\\n\\n    <div class=\\\"mb-1 mt-1\\\">\\n        <ul class=\\\"customList\\\">\\n            <li *ngFor=\\\"let description of descriptions; let i = index;\\\">\\n                {{ description }}\\n                <span class=\\\"text-primary text-left\\\" (click)=\\\"deleteDescription(i)\\\">\\n                    <mat-icon class=\\\"cursor-pointer btn-round vertical-align ml-1\\\">close</mat-icon>\\n                </span><br>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <mat-form-field class=\\\"w-100\\\">\\n        <mat-label>Prérequis <span class=\\\"required\\\">*</span></mat-label>\\n        <textarea matInput placeholder=\\\"Prérequis\\\" matTextareaAutosize matAutosizeMinRows=1 matAutosizeMaxRows=7\\n            formControlName=\\\"prerequisite\\\">\\n                    </textarea>\\n    </mat-form-field>\\n    <small class=\\\"text-error\\\"\\n        *ngIf=\\\"form.get('prerequisite').invalid && (form.get('prerequisite').dirty || form.get('prerequisite').touched) \\\">\\n        Champ obligatoire\\n    </small>\\n\\n\\n    <div class=\\\"w-100\\\">\\n        <app-multi-select label=\\\"Formation souhaitée\\\" collection=\\\"typeOfTrainings\\\" formControlName=\\\"typeOfTraining\\\">\\n        </app-multi-select>\\n        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('typeOfTraining').value?.length <= 0\\\">\\n            Veuillez choisir au moins une Formation.\\n        </small>\\n    </div>\\n\\n    <!-- <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-select\\\">\\n            <ion-label position=\\\"floating\\\">Formation souhaitée <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                formControlName=\\\"typeOfTraining\\\">\\n                <ion-select-option *ngFor=\\\"let typeOfTraining of globalService.typeOfTrainings\\\"\\n                    [value]=\\\"typeOfTraining._id\\\">\\n                    {{ typeOfTraining.name }}\\n                </ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('typeOfTraining').invalid && (form.get('typeOfTraining').dirty || form.get('typeOfTraining').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div> -->\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n            <ion-label position=\\\"floating\\\">Niveau d'études <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                formControlName=\\\"levelOfStudies\\\">\\n                <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                    {{item.name}}</ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n            *ngIf=\\\"form.get('levelOfStudies').invalid && (form.get('levelOfStudies').dirty || form.get('levelOfStudies').touched) \\\">\\n            Champ obligatoire\\n        </small>\\n    </div>\\n\\n    <h4 class=\\\"pt-2\\\">Salaire proposé (Dhs)</h4>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <ion-item class=\\\"custom-input\\\">\\n                <ion-label position=\\\"floating\\\">À partir de <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMin\\\"></ion-input>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('supposedSalaryMin').invalid && (form.get('supposedSalaryMin').dirty || form.get('supposedSalaryMin').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <ion-item class=\\\"custom-input\\\">\\n                <ion-label position=\\\"floating\\\">Jusqu'à <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMax\\\"></ion-input>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('supposedSalaryMax').invalid && (form.get('supposedSalaryMax').dirty || form.get('supposedSalaryMax').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n    </div>\\n    <small class=\\\"text-error\\\" *ngIf=\\\"form.get('supposedSalaryMax').touched && !form.get('supposedSalaryMax').hasError('required') \\n                && form.hasError('salaryErreur')\\\">\\n        Le salaire maximum doit être supérieur au salaire minimum\\n    </small>\\n\\n    <div class=\\\"w-100\\\">\\n        <ion-item class=\\\"custom-input\\\">\\n            <ion-label position=\\\"floating\\\">Autres avantages</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"otherAdvantage\\\"></ion-input>\\n        </ion-item>\\n    </div>\\n\\n    <ion-item class=\\\"custom-datetime w-100\\\">\\n        <ion-label position=\\\"floating\\\">Date de prise de poste <span class=\\\"required\\\">*</span></ion-label>\\n        <ion-datetime placeholder=\\\"Sélectionner\\\" formControlName=\\\"startedDate\\\">\\n        </ion-datetime>\\n    </ion-item>\\n    <small class=\\\"text-error\\\"\\n        *ngIf=\\\"form.get('startedDate').invalid && (form.get('startedDate').dirty || form.get('startedDate').touched) \\\">\\n        Champ obligatoire\\n    </small>\\n\\n    <div class=\\\"mt-3 text-center\\\">\\n        <ion-button type=\\\"submit\\\" class=\\\"w-80\\\" color=\\\"primary\\\"\\n            [disabled]=\\\"!form.valid || form.get('usageTitles').value?.length <= 0 || form.get('typeOfTraining').value?.length <= 0 || descriptions.length <=0 \\\">\\n            Continuez\\n        </ion-button>\\n    </div>\\n\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n\\n    <app-multi-select label=\\\"Soft skills\\\" [limit]=\\\"5\\\" collection=\\\"softSkills\\\" formControlName=\\\"skills\\\">\\n    </app-multi-select>\\n    <!-- <small class=\\\"text-error\\\" *ngIf=\\\"form.get('skills').value?.length === 0 \\\">\\n        Veuillez renseigner ces valeurs\\n    </small>\\n    <small class=\\\"text-error\\\" *ngIf=\\\"form.get('skills').value?.length < 5 && form.get('skills').value?.length !== 0\\\">\\n        Veuillez renseigner au moins 5 valeur\\n    </small>  -->\\n    <small class=\\\"text-error\\\" *ngIf=\\\"form.get('skills').value?.length < 5\\\">\\n        Vous pouvez choisir jusqu'à 5 soft skills dans la liste\\n    </small>\\n\\n    <div formGroupName=\\\"languages\\\" class=\\\"mb-1\\\">\\n        <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n\\n            <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <ion-item class=\\\"custom-select w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Langue</ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"language\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.languages | languages:languagesList\\\"\\n                            [value]=\\\"item._id\\\">\\n                            {{item.name}}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n            </div>\\n\\n            <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <ion-item class=\\\"custom-select w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Niveau de langue</ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"languageLevel\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.languagesLevels\\\" [value]=\\\"item._id\\\">\\n                            {{item.name}}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <small class=\\\"text-error\\\" *ngIf=\\\"languagesList <= 0\\\">\\n        Veuillez renseigner au moins une valeur et cliquer sur ajouter\\n    </small>   \\n    <div class=\\\"mt-1 text-left\\\">\\n        <ion-button fill=\\\"outline\\\" class=\\\"btn-outline w-40\\\" color=\\\"primary\\\"\\n            [disabled]=\\\"!form.get('languages').get('language').value || !form.get('languages').get('languageLevel').value\\\"\\n            (click)=\\\"addLanguage()\\\">\\n            Ajouter\\n            <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n        </ion-button>\\n    </div>\\n    <div class=\\\"mb-1 mt-1\\\">\\n        <ul class=\\\"customList\\\">\\n            <li *ngFor=\\\"let item of languagesList;let i =index;\\\">\\n                <span class=\\\"text-primary text-left\\\">{{ item.language.name }} :\\n                    {{ item.languageLevel.name }}</span>\\n                <mat-icon class=\\\"cursor-pointer btn-round vertical-align ml-1\\\" (click)=\\\"deleteLanguage(i)\\\">\\n                    close</mat-icon>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <div formGroupName=\\\"programingLanguages\\\" class=\\\"mb-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\"\\n        fxLayoutGap=\\\"20px\\\">\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <app-multi-select label=\\\"Langages informatiques\\\" collection=\\\"programmingLanguages\\\"\\n                formControlName=\\\"language\\\"></app-multi-select>\\n            <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.language').value?.length <= 0\\\">\\n                Veuillez renseigner au moins une valeur\\n            </small>\\n        </div>\\n        <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n            <app-multi-select label=\\\"Logiciels informatiques\\\" collection=\\\"logiciels\\\" formControlName=\\\"logiciel\\\">\\n            </app-multi-select>\\n            <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.logiciel').value?.length <= 0\\\">\\n                Veuillez renseigner au moins une valeur\\n            </small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"mt-3 text-center\\\">\\n        <ion-button type=\\\"submit\\\" class=\\\"w-80\\\" color=\\\"primary\\\" [disabled]=\\\"languagesList.length <= 0\\n                    || form.get('skills').value?.length < 5\\n                    || form.get('programingLanguages.logiciel').value?.length <= 0\\n                    || form.get('programingLanguages.language').value?.length <= 0\\\">\\n            Continuez\\n        </ion-button>\\n    </div>\\n</form>\";","export default \"<ion-header class=\\\"steps-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar class=\\\"steps-toolbar\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button [routerLink]=\\\"pageLink\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title class=\\\"page-title\\\">\\n            <h1 class=\\\"title mb-0\\\">Créer une annonce</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n    <div class=\\\"progressbar\\\">\\n        <div class=\\\"porcent text-center\\\"\\n            [ngStyle]=\\\"{'width': ( advertisementService.percentage | async | number: '1.0-0' ) + '%'}\\\">\\n            <div class=\\\"counter text-center\\\">\\n                {{ advertisementService.percentage | async | number: '1.0-0' }} %\\n            </div>\\n        </div>\\n    </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content mb-3\\\">\\n        <article class=\\\"page-content\\\">\\n            <router-outlet></router-outlet>\\n        </article>\\n    </section>\\n</ion-content>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons routerLink=\\\"/dashboard/advertisement\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Annonces</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <article class=\\\"page-content\\\">\\n\\n            <ion-slides pager=\\\"true\\\">\\n\\n                <ion-slide>\\n                    <div class=\\\"slide\\\">\\n                        <img src=\\\"./assets/img/slide1.jpg\\\" />\\n                        <h2>Créer votre première annonce</h2>\\n                        <p>\\n                            En quelques minutes seulement, vous pouvez mettre en ligne votre annonce! Grace à son\\n                            algorithme performant, jobwinwin vous présentera des profils adaptés à vos besoins.\\n                        </p>\\n                    </div>\\n                </ion-slide>\\n\\n                <ion-slide>\\n                    <img src=\\\"./assets/img/slide2.jpg\\\" />\\n                    <h2>Remplir le formulaire</h2>\\n                    <p>\\n                        Il vous suffit de renseigner tous les éléments de l'annonce. Quelques éléments sont obligatoires\\n                        pour nous permettre de sélectionner les candidats qui correspondent le mieux à vos attentes. Vous\\n                        pourrez à tout moment, modifier ces informations.\\n                    </p>\\n                </ion-slide>\\n\\n                <ion-slide>\\n                    <img src=\\\"./assets/img/slide3.jpg\\\" />\\n                    <h2>Validation de votre annonce</h2>\\n                    <p>\\n                        Une fois votre annonce créée, elle apparaîtra en statut \\\"en cours de validation\\\". Une\\n                        notification sera envoyée au responsable de votre entité pour une validation.Vous pourrez\\n                        ensuite commencer à matcher avec des candidats!\\n                    </p>\\n                </ion-slide>\\n\\n            </ion-slides>\\n\\n        </article>\\n        <div class=\\\"text-center mt-2 mb-3\\\">\\n            <ion-button class=\\\"light-color w-80\\\" routerLink=\\\"/dashboard/advertisement/form/create-advertisement\\\"\\n                routerDirection=\\\"root\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n                Ajouter une annonce\\n            </ion-button>\\n        </div>\\n    </section>\\n\\n</ion-content>\";","export default \"<form class=\\\"d-block\\\">\\n\\n    <div class=\\\"text-center mt-2\\\">\\n        <h2>{{advertisementService.advertisement.desiredJob}}</h2>\\n        <p class=\\\"px-0\\\">Votre annonce de \\\"{{advertisementService.advertisement.desiredJob}}\\\" a été créée avec succès </p>\\n        <p class=\\\"px-0\\\">Pour visualiser et modifier les informations, prévisualisez votre annonce.</p>\\n        <p class=\\\"px-0\\\">Pour la valider et la publier, cliquez sur win. </p>\\n        <p class=\\\"px-0\\\">avec Jobwinwin, swipez, matchez et rencontrez le candidat adéquat ! </p>\\n    </div>\\n    <div class=\\\"mt-3 text-center\\\">\\n        <ion-button class=\\\"w-80\\\" color=\\\"primary\\\" (click)=\\\"previewAdvertisement()\\\">\\n            Prévisualisez votre annonce\\n        </ion-button>\\n    </div>\\n\\n    <div class=\\\"mt-1 text-center\\\">\\n        <ion-button class=\\\"btn-win w-80\\\" color=\\\"primary\\\" (click)=\\\"onSave()\\\">\\n            <img src=\\\"./assets/icon/win-btn.svg\\\" alt=\\\"\\\">\\n        </ion-button>\\n    </div>\\n\\n</form>\";","export default \"<ng-container *ngIf=\\\"advertisementService.advertisement\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons routerLink=\\\"/dashboard/advertisement\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-buttons slot=\\\"primary\\\">\\n                <ion-button >\\n                    <ion-icon slot=\\\"icon-only\\\" ios=\\\"ellipsis-vertical\\\" md=\\\"ellipsis-vertical\\\"></ion-icon>\\n                    <!-- <mat-menu #menu=\\\"matMenu\\\" [matMenuTriggerFor]=\\\"menu\\\">\\n                        <button class=\\\"icon-menu-ads\\\" mat-menu-item>\\n                            <span>Modifier annonce</span>\\n                        </button>\\n                    </mat-menu> -->\\n                </ion-button>\\n            </ion-buttons>\\n            <ion-title>Annonces</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"detail-mission-content mt-1 mb-3\\\">\\n            <div class=\\\"detail-mission\\\">\\n                <h3 class=\\\"title\\\">\\n                    <img src=\\\"./assets/icon/mission-generale-blue.svg\\\" alt=\\\"\\\" width=\\\"30px\\\">\\n                    <span>Mission Générale</span>\\n                    <mat-icon class=\\\"float-right\\\" (click)=\\\"openMission()\\\">edit</mat-icon>\\n                </h3>\\n                <span class=\\\"desc\\\">\\n                    {{ advertisementService.advertisement.missions }}\\n                </span>\\n            </div>\\n            <div class=\\\"detail-mission mt-2\\\">\\n                <h3 class=\\\"title\\\">\\n                    <img src=\\\"./assets/icon/Taches-blue.svg\\\" alt=\\\"\\\" width=\\\"30px\\\">\\n                    <span>Descriptif de poste</span>\\n                    <mat-icon class=\\\"float-right\\\" (click)=\\\"openTasks()\\\">edit</mat-icon>\\n                </h3>\\n                <div class=\\\"desc\\\">\\n                    <ul class=\\\"list\\\">\\n                        <li *ngFor=\\\"let description of advertisementService.advertisement.descriptions\\\">\\n                            {{ description }}\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"detail-mission mt-2\\\">\\n                <h3 class=\\\"title\\\">\\n                    <img src=\\\"./assets/icon/profil-blue.svg\\\" alt=\\\"\\\" width=\\\"30px\\\">\\n                    <span>Prérequis</span>\\n                    <mat-icon class=\\\"float-right\\\" (click)=\\\"openProfile()\\\">edit</mat-icon>\\n                </h3>\\n                <span class=\\\"desc\\\">\\n                    <p>\\n                        {{ advertisementService.advertisement.prerequisite }}\\n                    </p>\\n                    <h5 class=\\\"text-center\\\">\\n                        <strong>Langue</strong>\\n                    </h5>\\n                    <ul class=\\\"list\\\">\\n                        <li *ngFor=\\\"let item of languages\\\">\\n                            {{ item.language.name }} : {{ item.languageLevel.name }}\\n                        </li>\\n                    </ul>\\n                    <h5 class=\\\"text-center\\\">\\n                        <strong>Compétences informatiques</strong>\\n                    </h5>\\n                    <ul class=\\\"list\\\" id=\\\"programming-languages\\\">\\n                        <li *ngFor=\\\"let item of programingLanguages\\\"> {{ item }} </li>\\n                    </ul>\\n                </span>\\n            </div>\\n            <div class=\\\"detail-mission mt-2\\\">\\n                <h3 class=\\\"title\\\">\\n                    <img src=\\\"./assets/icon/profil-blue.svg\\\" alt=\\\"\\\" width=\\\"30px\\\">\\n                    <span>Autres informations</span>\\n                    <mat-icon class=\\\"float-right\\\" (click)=\\\"openOtherInfo()\\\">edit</mat-icon>\\n                </h3>\\n                <span class=\\\"desc\\\">\\n                    <ul class=\\\"list\\\">\\n                        <li *ngIf=\\\"infos.contract\\\">Type de contrat : {{ infos.contract.name }} </li>\\n                        <li *ngIf=\\\"infos.jobType\\\">Type de poste : {{ infos.jobType.name }} </li>\\n                        <li *ngIf=\\\"infos.jobMode\\\">Mode de travail : {{ infos.jobMode.name }} </li>\\n                        <li *ngIf=\\\"infos.managerialLevel\\\">Niv. managérial : {{ infos.managerialLevel.name }} </li>\\n                        <li *ngIf=\\\"infos.effective\\\">Effectif géré : {{ infos.effective.name }}</li>\\n                    </ul>\\n                </span>\\n            </div>\\n            <div class=\\\"detail-mission mt-2\\\">\\n                <h3 class=\\\"title\\\">\\n                    <img src=\\\"./assets/icon/calender.svg\\\" alt=\\\"\\\" width=\\\"30px\\\">\\n                    <span>Date prise de poste</span>\\n                    <mat-icon class=\\\"float-right\\\" (click)=\\\"openDate()\\\">edit</mat-icon>\\n                </h3>\\n                <span class=\\\"desc\\\">\\n                    <p class=\\\"ml-2\\\">Le {{ advertisementService.advertisement.startedDate | date: 'dd/MM/yyyy' }} </p>\\n                </span>\\n            </div>\\n            <!-- *appCanChangeStatus=\\\"advertisementService.advertisement.recruiter\\\" -->\\n            <div class=\\\"detail-mission mt-2\\\" *ngIf=\\\"authService.user.role.name == 'Responsable principale' \\\"  >\\n                <h3 class=\\\"title\\\">\\n                    <img src=\\\"/assets/icon/statusAds.svg\\\" alt=\\\"\\\" width=\\\"30px\\\">\\n                    <span>Statut</span>\\n                    <mat-icon class=\\\"float-right\\\" (click)=\\\"openStatus()\\\">edit</mat-icon>\\n                </h3>\\n                <span class=\\\"desc\\\">\\n                    <p class=\\\"ml-2\\\">{{ advertisementService.advertisement.status }} </p>\\n                </span>\\n            </div>\\n        </section>\\n    </ion-content>\\n</ng-container>\";","export default \"<ng-container *ngIf=\\\"advertisementService.advertisement\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons routerLink=\\\"/dashboard/advertisement\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-buttons slot=\\\"primary\\\">\\n                <ion-button>\\n                    <ion-icon slot=\\\"icon-only\\\" ios=\\\"ellipsis-vertical\\\" md=\\\"ellipsis-vertical\\\"></ion-icon>\\n                </ion-button>\\n            </ion-buttons>\\n            <ion-title>Annonces</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"detail-mission-content\\\">\\n            <div class=\\\"d-block text-center mb-3 w-100\\\">\\n                <h1 class=\\\"title title-border capitalize w-80\\\"> {{ advertisementService.advertisement.desiredJob }} </h1>\\n                <img [src]=\\\"authService.user.company.logo ? (('backend_url' | env) + authService.user.company.logo.name) : './assets/img/default-image.svg'\\\"\\n                    alt=\\\"profil Annonce\\\" class=\\\"image-circle\\\">\\n            </div>\\n\\n            <div class=\\\"d-block mt-1 w-100\\\">\\n                <div class=\\\"d-inline text-right align-middle w-30\\\">\\n                    <img class=\\\"mr-2\\\" src=\\\"./assets/icon/calender.svg\\\" alt=\\\"calendar\\\" width=\\\"20px\\\">\\n                </div>\\n                <div class=\\\"d-inline text-left w-60\\\">\\n                    <span>Édité le {{ advertisementService.advertisement.updatedAt | date: 'dd/MM' }}</span>\\n                </div>\\n            </div>\\n            <div class=\\\"d-block mt-1 w-100\\\">\\n                <div class=\\\"d-inline text-right align-middle w-30\\\">\\n                    <img class=\\\"mr-2\\\" src=\\\"./assets/icon/win-blue.svg\\\" alt=\\\"Win\\\" width=\\\"20px\\\">\\n                </div>\\n                <div class=\\\"d-inline text-left w-60\\\">\\n                    <span>{{ advertisementService.advertisement.wins }} wins</span>\\n                </div>\\n            </div>\\n            <div class=\\\"d-block mt-1 w-100\\\">\\n                <div class=\\\"d-inline text-right align-center w-30\\\">\\n                    <img class=\\\"mr-2\\\" src=\\\"./assets/icon/status.svg\\\" alt=\\\"status\\\" width=\\\"20px\\\">\\n                </div>\\n                <div class=\\\"d-inline text-left w-60\\\">\\n                    <span>Statut de l’annonce : <br>{{ advertisementService.advertisement.status }} <mat-slide-toggle class=\\\"align-middle\\\" color=\\\"primary\\\" [(ngModel)]=\\\"isChecked\\\" (click)=\\\"changeStatus()\\\"></mat-slide-toggle></span>\\n                </div>\\n                <!-- <div class=\\\"d-inline text-left w-60\\\">\\n                    <span>Statut : {{ advertisementService.advertisement.status }}</span>\\n                </div> -->\\n            </div>\\n            <div class=\\\"d-block mt-1 w-100\\\">\\n                <div class=\\\"d-inline text-right align-middle w-30\\\">\\n                    <img class=\\\"mr-2\\\" src=\\\"./assets/icon/recruiter.svg\\\" alt=\\\"recruiter\\\" width=\\\"20px\\\">\\n                </div>\\n                <div class=\\\"d-inline text-left w-60\\\" *ngIf=\\\"advertisementService.advertisement.recruiter || advertisementService.advertisement.recruiter\\\" >\\n                    <span class=\\\"d-inline vertical-align mr-2\\\">\\n                        {{ advertisementService.advertisement.recruiter.firstName }}\\n                        {{ advertisementService.advertisement.recruiter.lastName }}\\n                    </span>\\n                </div>\\n            </div>\\n\\n        </section>\\n\\n    </ion-content>\\n</ng-container>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"goBack()\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Annonces</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <article class=\\\"page-content\\\">\\n\\n            <form class=\\\"mb-1\\\">\\n                <div class=\\\"d-block\\\">\\n                    <div class=\\\"form-group position-relative d-inline w-100\\\">\\n                        <input class=\\\"custom-input search-input border-bleu\\\" type=\\\"text\\\" name=\\\"search\\\"\\n                            placeholder=\\\"Rechercher une annonce\\\" [(ngModel)]=\\\"search\\\" (ngModelChange)=\\\"onSearch()\\\">\\n                        <span class=\\\"icon-search position-absolute\\\">\\n                            <img src=\\\"./assets/icon/search.svg\\\">\\n                        </span>\\n                    </div>\\n                </div>\\n            </form>\\n\\n            <div class=\\\"text-center mb-1\\\">\\n                <ion-button class=\\\"light-color w-60\\\"\\n                    [routerLink]=\\\" advertisementService.advertisements.length > 0  ? '/dashboard/advertisement/form/create-advertisement' : '/dashboard/advertisement/slider-advertisement'\\\">\\n                    <ion-icon name=\\\"add\\\"></ion-icon>\\n                    Ajouter une annonce\\n                </ion-button>\\n            </div>\\n\\n            <div class=\\\"d-block\\\">\\n                <!-- <div class=\\\"d-inline w-50 mt-1 text-left\\\">\\n                    <h2 class=\\\"annonce-title\\\">Annonces</h2>\\n                </div> -->\\n\\n                <div class=\\\"d-inline w-100 mt-1 text-right\\\">\\n                    <p class=\\\"recent-ads\\\">Récent</p>\\n                </div>\\n            </div>\\n\\n            <ng-container *ngFor=\\\"let advertisement of advertisementService.advertisements\\\">\\n                <ion-row class=\\\"advertisement-detail w-100 mt-1\\\"\\n                [ngClass]=\\\"[advertisement.status === 'Ouverte' ? 'alert-valid' : '',  advertisement.status === 'En attente de validation' ? 'alert-attention' : '', advertisement.status === 'Close' ? 'alert-close' : '']\\\">\\n                    <ion-col size=\\\"10\\\" class=\\\"ion-align-self-start\\\">\\n                        <div class=\\\"w-10\\\" [ngClass]=\\\"{'animate__animated animate__tada animate__infinite infinite': advertisement.status === 'En attente de validation'}\\\">\\n                            <ion-icon class=\\\"status-annoce\\\" *ngIf=\\\"advertisement.status === 'Ouverte'\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n                            <ion-icon class=\\\"status-annoce\\\" *ngIf=\\\"advertisement.status === 'En attente de validation'\\\" name=\\\"alert-circle\\\"></ion-icon>\\n                            <ion-icon class=\\\"status-annoce\\\" *ngIf=\\\"advertisement.status === 'Close'\\\" name=\\\"close-circle\\\"></ion-icon>\\n                        </div>\\n                        <div class=\\\"advertisement-data\\\">\\n                            <h2 class=\\\"advertisement-name\\\">\\n                                {{ advertisement.desiredJob }}\\n                            </h2>\\n                            <p class=\\\"city\\\">{{ advertisement.location }}</p>\\n                            <p class=\\\"salary\\\">De {{ advertisement.supposedSalaryMin }} DH</p>\\n                            <p class=\\\"salary\\\">à {{ advertisement.supposedSalaryMax }} DH</p>\\n                        </div>\\n                    </ion-col>\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-align-self-start\\\">\\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"more-btn\\\">\\n                            <mat-icon>more_horiz</mat-icon>\\n                        </button>\\n                        <mat-menu #menu=\\\"matMenu\\\" class=\\\"advertisement-menu\\\">\\n                            <button class=\\\"icon-menu-ads\\\" mat-menu-item\\n                                [routerLink]=\\\"['detail-profile', advertisement._id]\\\">\\n                                <img src=\\\"/assets/icon/statusAds.svg\\\" alt=\\\"status\\\">\\n                                <span>Statut annonce</span>\\n                            </button>\\n                            <button class=\\\"icon-menu-ads\\\" mat-menu-item\\n                                [routerLink]=\\\"['detail-annonce', advertisement._id]\\\">\\n                                <img src=\\\"/assets/icon/updateAds.svg\\\" alt=\\\"status\\\">\\n                                <span>Modifier annonce</span>\\n                            </button>\\n                                <button class=\\\"icon-menu-ads\\\" mat-menu-item [routerLink]=\\\"['/dashboard']\\\" [queryParams]=\\\"{advertismentId: advertisement._id}\\\">\\n                                <img src=\\\"/assets/icon/swipe.svg\\\" alt=\\\"status\\\">\\n                                <span>Swipe & match</span>\\n                            </button>\\n    \\n                        </mat-menu>\\n                    </ion-col>\\n                    <ion-col size=\\\"3\\\" class=\\\"advertisement-info text-left\\\">\\n                        {{advertisement.views}} <br>\\n                        Vues\\n                    </ion-col>\\n                    <ion-col size=\\\"3\\\" class=\\\"advertisement-info text-left\\\">\\n                        {{ advertisement.wins }} <br>\\n                        Wins\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\" class=\\\"advertisement-info text-left\\\">\\n                        Édité le {{advertisement.updatedAt | date:'dd/MM'}}<br>\\n                        {{ advertisement.recruiter.firstName }} {{ advertisement.recruiter.lastName }}\\n                    </ion-col>\\n                </ion-row>\\n            </ng-container>\\n        </article>\\n    </section>\\n\\n</ion-content>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"close()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Date prise de poste</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n                <ion-item class=\\\"custom-datetime w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Date de prise de poste</ion-label>\\n                    <ion-datetime placeholder=\\\"Sélectionner\\\" formControlName=\\\"startedDate\\\">\\n                    </ion-datetime>\\n                </ion-item>\\n                <div class=\\\"text-right mt-2\\\">\\n                    <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                        Enregistrer\\n                    </ion-button>\\n                </div>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"close()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Mission générale</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Missions</mat-label>\\n                    <textarea matInput placeholder=\\\"\\\" matTextareaAutosize matAutosizeMinRows=1 matAutosizeMaxRows=7 formControlName=\\\"missions\\\">\\n                    </textarea>\\n                </mat-form-field>\\n                <div class=\\\"text-right mt-1\\\">\\n                    <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                        Enregistrer\\n                    </ion-button>\\n                </div>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"close()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Autre information</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n                <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Type de contrat <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"contract\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.contracts\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('contract').invalid && (form.get('contract').dirty || form.get('contract').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Type de Poste <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"jobType\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.jobTypes\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('jobType').invalid && (form.get('jobType').dirty || form.get('jobType').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Mode de travail <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"jobMode\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.jobModes\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('jobMode').invalid && (form.get('jobMode').dirty || form.get('jobMode').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Poste basé à <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"location\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.locations\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('location').invalid && (form.get('location').dirty || form.get('location').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Niv. managérial <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"managerialLevel\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.managerialLevels\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('managerialLevel').invalid && (form.get('managerialLevel').dirty || form.get('managerialLevel').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-select w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Effectif géré <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"effective\\\">\\n                                <ion-select-option *ngFor=\\\"let effective of globalService.effectives\\\"\\n                                    [value]=\\\"effective._id\\\">\\n                                    {{ effective.name }}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('effective').invalid && (form.get('effective').dirty || form.get('effective').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                </div>\\n\\n                <h4 class=\\\"pt-2\\\">Salaire proposé (Dhs)</h4>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">À partir de <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMin\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('supposedSalaryMin').invalid && (form.get('supposedSalaryMin').dirty || form.get('supposedSalaryMin').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Jusqu'à <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMax\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('supposedSalaryMax').invalid && (form.get('supposedSalaryMax').dirty || form.get('supposedSalaryMax').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n                </div>\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('supposedSalaryMax').touched && !form.get('supposedSalaryMax').hasError('required') \\n                && form.hasError('salaryErreur')\\\">\\n                    Le salaire maximum doit être supérieur au salaire minimum\\n                </small>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Autres avantages</ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"otherAdvantage\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"text-right mt-2\\\">\\n                    <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                        Enregistrer\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"close()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Prérequis</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Pré-requis <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"prerequisite\\\"></ion-input>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('prerequisite').invalid && (form.get('prerequisite').dirty || form.get('prerequisite').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <app-multi-select label=\\\"Soft skills\\\" [limit]=\\\"5\\\" collection=\\\"softSkills\\\" formControlName=\\\"skills\\\">\\n                </app-multi-select>\\n                \\n                <!-- <small class=\\\"text-error\\\" *ngIf=\\\"form.get('skills').value?.length === 0 \\\">\\n                    Veuillez renseigner ces valeurs\\n                </small>\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('skills').value?.length < 5 && form.get('skills').value?.length !== 0\\\">\\n                    Veuillez renseigner au moins 5 valeur\\n                </small>  -->\\n\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('skills').value?.length < 5\\\">\\n                    Vous pouvez choisir jusqu'à 5 soft skills dans la liste\\n                </small>\\n\\n\\n                <div formGroupName=\\\"languages\\\">\\n                    <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n\\n                        <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-label position=\\\"floating\\\">Langue</ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"language\\\">\\n                                <ion-select-option\\n                                    *ngFor=\\\"let item of globalService.languages | languages:languagesList\\\"\\n                                    [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n\\n                        <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                            <ion-label position=\\\"floating\\\">Niveau de langue</ion-label>\\n                            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                                formControlName=\\\"languageLevel\\\">\\n                                <ion-select-option *ngFor=\\\"let item of globalService.languagesLevels\\\" [value]=\\\"item._id\\\">\\n                                    {{item.name}}\\n                                </ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n\\n                    </div>\\n                    <small class=\\\"text-error\\\" *ngIf=\\\"languagesList <= 0\\\">\\n                        Veuillez renseigner au moins une valeur\\n                    </small>  \\n                </div>\\n                <div class=\\\"mt-1 text-left\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline w-40\\\" color=\\\"primary\\\"\\n                        [disabled]=\\\"form.get('languages').invalid\\\" (click)=\\\"addLanguage()\\\">\\n                        Ajouter\\n                        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n                    </ion-button>\\n                </div>\\n                <div class=\\\"mb-1 mt-1\\\">\\n                    <ul class=\\\"customList\\\">\\n                        <li *ngFor=\\\"let item of languagesList;let i =index;\\\">\\n                            <span class=\\\"text-primary text-left\\\">{{ item.language.name }} :\\n                                {{ item.languageLevel.name }}</span>\\n                            <mat-icon class=\\\"cursor-pointer btn-round vertical-align ml-1\\\" (click)=\\\"deleteLanguage(i)\\\">\\n                                close</mat-icon>\\n                        </li>\\n                    </ul>\\n                </div>\\n\\n\\n                <div formGroupName=\\\"programingLanguages\\\" class=\\\"mb-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\"\\n                    fxLayoutGap=\\\"20px\\\">\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <app-multi-select label=\\\"Langages informatiques\\\" collection=\\\"programmingLanguages\\\"\\n                            formControlName=\\\"language\\\"></app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.language').value?.length <= 0\\\">\\n                            Veuillez choisir au moins un Langages informatiques.\\n                        </small>\\n                    </div>\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <app-multi-select label=\\\"Logiciels informatiques\\\" collection=\\\"logiciels\\\"\\n                            formControlName=\\\"logiciel\\\">\\n                        </app-multi-select>\\n                        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.logiciel').value?.length <= 0\\\">\\n                            Veuillez choisir au moins un Logiciels informatiques.\\n                        </small>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <app-multi-select label=\\\"Formation souhaitée\\\" collection=\\\"typeOfTrainings\\\" formControlName=\\\"typeOfTraining\\\">\\n                    </app-multi-select>\\n                    <small class=\\\"text-error\\\" *ngIf=\\\"form.get('typeOfTraining').value?.length <= 0\\\">\\n                        Veuillez choisir au moins une Formation.\\n                    </small>\\n                </div>\\n                <!-- <ion-item class=\\\"custom-select w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Formation souhaitée <span class=\\\"required\\\">*</span>\\n                    </ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"typeOfTraining\\\">\\n                        <ion-select-option *ngFor=\\\"let typeOfTraining of globalService.typeOfTrainings\\\"\\n                            [value]=\\\"typeOfTraining._id\\\">\\n                            {{ typeOfTraining.name }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('typeOfTraining').invalid && (form.get('typeOfTraining').dirty || form.get('typeOfTraining').touched) \\\">\\n                    Champ obligatoire\\n                </small> -->\\n\\n                <ion-item class=\\\"custom-select w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Niveau d'études <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"levelOfStudies\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                            {{item.name}}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('levelOfStudies').invalid && (form.get('levelOfStudies').dirty || form.get('levelOfStudies').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <ion-item class=\\\"custom-select w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Expérience <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"experienceYears\\\">\\n                        <ion-select-option *ngFor=\\\"let experience of globalService.experiences\\\"\\n                            [value]=\\\"experience._id\\\">\\n                            {{ experience.name }}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('experienceYears').invalid && (form.get('experienceYears').dirty || form.get('experienceYears').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n                \\n                <div class=\\\"text-right mt-2\\\">\\n                    <ion-button type=\\\"submit\\\" [disabled]=\\\"languagesList.length <= 0\\n                    || form.get('programingLanguages.logiciel').value?.length <= 0\\n                    || form.get('programingLanguages.language').value?.length <= 0 || !form.valid\\\">\\n                        Enregistrer\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"changeStatus()\\\">\\n  <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n      <ion-buttons (click)=\\\"close()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-buttons>\\n      <ion-title>Statut</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n      <div class=\\\"page-content\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n          <ion-label position=\\\"floating\\\">Statut <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n            formControlName=\\\"status\\\">\\n            <ion-select-option value=\\\"En attente de validation\\\">\\n              En attente de validation\\n            </ion-select-option>\\n            <ion-select-option value=\\\"Ouverte\\\">\\n              Publiée\\n            </ion-select-option>\\n            <ion-select-option value=\\\"Close\\\">\\n              Close\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <div class=\\\"text-right mt-2\\\">\\n          <ion-button type=\\\"ngSubmit\\\" [disabled]=\\\"!form.valid\\\">\\n            Enregistrer\\n          </ion-button>\\n      </div>\\n      </div>\\n    </section>\\n  </ion-content>\\n</form>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"close()\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Descriptif du poste</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\">\\n\\n                <div class=\\\"w-100\\\">\\n                    <app-multi-select label=\\\"Intitulés d'usage\\\" collection=\\\"usageTitles\\\" formControlName=\\\"usageTitles\\\">\\n                    </app-multi-select>\\n                    <small class=\\\"text-error\\\" *ngIf=\\\"form.get('usageTitles').value?.length <= 0\\\">\\n                        Veuillez choisir au moins un intitulés d'usage.\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-select w-100\\\">\\n                        <ion-label position=\\\"floating\\\">Fonction <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"function\\\">\\n                            <ion-select-option *ngFor=\\\"let item of globalService.functions\\\" [value]=\\\"item._id\\\">\\n                                {{item.name}}\\n                            </ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('function').invalid && (form.get('function').dirty || form.get('function').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"w-100 mt-1\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Poste à pourvoir <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"desiredJob\\\"></ion-input>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('desiredJob').invalid && (form.get('desiredJob').dirty || form.get('desiredJob').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Descriptif de poste <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"descriptions\\\" #description></ion-input>\\n                        <ion-icon (click)=\\\"addTask(description)\\\" name=\\\"add\\\"></ion-icon>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\" *ngIf=\\\"descriptions.length <= 0\\\">\\n                        Veuillez Ajouter au moins une description.\\n                    </small>\\n                </div>\\n            </form>\\n            <div class=\\\"mb-1 mt-1\\\">\\n                <ul class=\\\"customList\\\">\\n                    <li *ngFor=\\\"let description of descriptions; let i = index;\\\">\\n                        {{ description }}\\n                        <span class=\\\"text-primary text-left\\\" (click)=\\\"deleteTask(i)\\\">\\n                            <mat-icon class=\\\"cursor-pointer btn-round vertical-align ml-1\\\">close</mat-icon>\\n                        </span><br>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button (click)=\\\"onSave()\\\" [disabled]=\\\"!form.valid || descriptions.length <= 0\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n            \\n        </div>\\n    </section>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateAdvertisementComponent } from './components/create/create-advertisement/create-advertisement.component';\nimport { ExperienceRequiredComponent } from './components/create/experience-required/experience-required.component';\nimport { FormAdvertissementComponent } from './components/create/form-advertissement/form-advertissement.component';\nimport { SliderAdvertisementComponent } from './components/create/slider-advertisement/slider-advertisement.component';\nimport { ValidateAdvertisementComponent } from './components/create/validate-advertisement/validate-advertisement.component';\nimport { AdsDetailsComponent } from './components/details/ads-details/ads-details.component';\nimport { AdsProfileComponent } from './components/details/ads-profile/ads-profile.component';\nimport { ListesComponent } from './components/listes/listes.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListesComponent\n  },\n  {\n    path: 'slider-advertisement',\n    component: SliderAdvertisementComponent\n  },\n  {\n    path: 'form',\n    component: FormAdvertissementComponent,\n    children: [\n      {\n        path: 'create-advertisement',\n        component: CreateAdvertisementComponent,\n        data: { pagelink: '/dashboard/advertisement' }\n      },\n      {\n        path: 'experience-required',\n        component: ExperienceRequiredComponent,\n        data: { pagelink: '/dashboard/advertisement/form/create-advertisement' }\n      },\n      {\n        path: 'validate-advertisement',\n        component: ValidateAdvertisementComponent,\n        data: { pagelink: '/dashboard/advertisement/form/experience-required' }\n      },\n    ]\n  },\n  {\n    path: 'detail-annonce/:id',\n    component: AdsDetailsComponent\n  },\n  {\n    path: 'detail-profile/:id',\n    component: AdsProfileComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdvertisementRoutingModule { }\n","import { SharedModule } from './../../shared/shared.module';\nimport { NgModule } from '@angular/core';\n\nimport { AdvertisementRoutingModule } from './advertisement-routing.module';\nimport { CreateAdvertisementComponent } from './components/create/create-advertisement/create-advertisement.component';\nimport { ExperienceRequiredComponent } from './components/create/experience-required/experience-required.component';\nimport { SliderAdvertisementComponent } from './components/create/slider-advertisement/slider-advertisement.component';\nimport { ValidateAdvertisementComponent } from './components/create/validate-advertisement/validate-advertisement.component';\nimport { AdsDetailsComponent } from './components/details/ads-details/ads-details.component';\nimport { AdsProfileComponent } from './components/details/ads-profile/ads-profile.component';\nimport { ListesComponent } from './components/listes/listes.component';\nimport { DateComponent } from './components/update/date/date.component';\nimport { MissionComponent } from './components/update/mission/mission.component';\nimport { ProfilComponent } from './components/update/profil/profil.component';\nimport { TaskComponent } from './components/update/task/task.component';\nimport { OtherInfoComponent } from './components/update/other-info/other-info.component';\nimport { StatusComponent } from './components/update/status/status.component';\nimport { FormAdvertissementComponent } from './components/create/form-advertissement/form-advertissement.component';\n\n\n@NgModule({\n  declarations: [CreateAdvertisementComponent, ValidateAdvertisementComponent,\n                  ExperienceRequiredComponent,\n                  MissionComponent,\n                  TaskComponent,\n                  ProfilComponent,\n                  DateComponent,\n                  ListesComponent,\n                  AdsProfileComponent,\n                  AdsDetailsComponent,\n                  SliderAdvertisementComponent,\n                  OtherInfoComponent,\n                  StatusComponent,\n                  FormAdvertissementComponent\n                ],\n  imports: [\n    SharedModule,\n    AdvertisementRoutingModule\n  ]\n})\nexport class AdvertisementModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy9jcmVhdGUvY3JlYXRlLWFkdmVydGlzZW1lbnQvY3JlYXRlLWFkdmVydGlzZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { Advertisement } from 'src/app/core/models/classes';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\n\n@Component({\n  selector: 'app-create-advertisement',\n  templateUrl: './create-advertisement.component.html',\n  styleUrls: ['./create-advertisement.component.scss']\n})\nexport class CreateAdvertisementComponent implements OnInit {\n\n  form: FormGroup;\n  descriptions = [];\n\n  constructor(private fb: FormBuilder, public globalService: GlobalService, public advertisementService: AdvertisementService, private authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    if (this.advertisementService.advertisement) {\n      const val = this.advertisementService.advertisement.toJson();\n      console.log(val);\n      if (Object.keys(val).length > 0) {\n        this.descriptions = val['descriptions'];\n        delete val['descriptions'];\n        this.form.patchValue(val);\n      }\n    }\n  }\n\n  /**\n   * init advertisement form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      usageTitles: new FormControl([]),\n      location: new FormControl(null, Validators.required),\n      desiredJob: new FormControl(null, Validators.required),\n      function: new FormControl(null, Validators.required),\n      experienceYears: new FormControl(null, Validators.required),\n      contract: new FormControl(null, Validators.required),\n      jobType: new FormControl(null, Validators.required),\n      jobMode: new FormControl(null, Validators.required),\n      managerialLevel: new FormControl(null, Validators.required),\n      effective: new FormControl(null, Validators.required),\n      missions: new FormControl(null, Validators.required),\n      descriptions: new FormControl(null),\n      prerequisite: new FormControl(null, Validators.required),\n      typeOfTraining: new FormControl([]),\n      levelOfStudies: new FormControl(null, Validators.required),\n      supposedSalaryMin: new FormControl(null, Validators.required),\n      supposedSalaryMax: new FormControl(null, Validators.required),\n      otherAdvantage: new FormControl(null),\n      startedDate: new FormControl(null, Validators.required),\n    }, { validator: this.checkSupposedSalary });\n  }\n\n  /**\n   * check salaries\n   * @param group\n   */\n  checkSupposedSalary(group: FormGroup) {\n    const min = group.controls.supposedSalaryMin.value;\n    const max = group.controls.supposedSalaryMax.value;\n    return min < max ? null : { salaryErreur: true };\n  }\n\n  addDescription(element) {\n    if (element.value) {\n      this.descriptions.push(element.value);\n      element.value = null;\n    }\n  }\n\n  /**\n   * delete tasks\n   * @param i\n   */\n  deleteDescription(i: number) {\n    this.descriptions.splice(i, 1);\n  }\n\n  /**\n   * add advertisement infos\n   */\n  onSave() {\n    let value = Object.assign(this.form.value, { 'descriptions': this.descriptions });\n    console.log(value);\n    const percentage = Helper.calculePercentage(value, 0, 4.16);\n    console.log(percentage);\n    this.advertisementService.advertisement = new Advertisement(Object.assign(value, this.advertisementService.advertisement ? this.advertisementService.advertisement.toJson() : { company: this.authService.user.company }));\n    this.advertisementService.setPercentage((Math.round(percentage * 100) / 100).toFixed(2));\n    Redirection.advertisementExperiences();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy9jcmVhdGUvZXhwZXJpZW5jZS1yZXF1aXJlZC9leHBlcmllbmNlLXJlcXVpcmVkLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { ModalController } from '@ionic/angular';\nimport { Advertisement } from 'src/app/core/models/classes';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\n\n@Component({\n  selector: 'app-experience-required',\n  templateUrl: './experience-required.component.html',\n  styleUrls: ['./experience-required.component.scss']\n})\nexport class ExperienceRequiredComponent implements OnInit {\n\n  form: FormGroup;\n  languagesList = [];\n  oldPercentage = 0;\n\n  constructor(private fb: FormBuilder, public globalService: GlobalService, private authService: AuthService,\n    public advertisementService: AdvertisementService, public modalController: ModalController) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    if (this.advertisementService.advertisement['languages'] && this.advertisementService.advertisement['languages'].length > 0) {\n      this.advertisementService.advertisement['languages'].forEach(item => {\n        const languageIndex = this.globalService.languages.findIndex(x => x._id === item.language);\n        const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === item.languageLevel);\n        this.languagesList.push({\n          language: this.globalService.languages[languageIndex],\n          languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n        });\n      });\n    }\n    // this.oldPercentage = Helper.calculePercentage(Object.assign(this.form.value, { languages: this.languagesList }), 0, 4.16);\n  }\n\n  /**\n   * init experience form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      skills: new FormControl(this.advertisementService.advertisement.skills ? this.advertisementService.advertisement.skills : []),\n      languages: new FormGroup({\n        language: new FormControl(null),\n        languageLevel: new FormControl(null)\n      }),\n      programingLanguages: new FormGroup({\n        language: new FormControl(this.advertisementService.advertisement.programingLanguages ? this.advertisementService.advertisement.programingLanguages['language'] : []),\n        logiciel: new FormControl(this.advertisementService.advertisement.programingLanguages ? this.advertisementService.advertisement.programingLanguages['logiciel'] : [])\n      }),\n    });\n  }\n\n  addLanguage() {\n    const value = this.form.get('languages').value;\n    if (value) {\n      const languageIndex = this.globalService.languages.findIndex(x => x._id === value.language);\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === value.languageLevel);\n      this.languagesList.push({\n        language: this.globalService.languages[languageIndex],\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n      });\n      this.form.get('languages').reset();\n    }\n  }\n\n  deleteLanguage(i: number) {\n    this.languagesList.splice(i, 1);\n  }\n\n  /**\n   * add experiences\n   */\n  onSave() {\n    let value = this.form.value;\n    delete value['languages'];\n    value.languages = this.languagesList.map(x => ({\n      language: x.language._id,\n      languageLevel: x.languageLevel._id\n    }));\n    const percentage = Helper.calculePercentage(value, (this.advertisementService.getPercentage() ? Number(this.advertisementService.getPercentage()) : 0) - Number(this.oldPercentage), 4.16);\n    this.advertisementService.setPercentage(percentage);\n    this.advertisementService.advertisement.languages = value.languages;\n    this.advertisementService.advertisement.programingLanguages = value.programingLanguages;\n    this.advertisementService.advertisement.skills = value.skills;\n    this.advertisementService.advertisement.company = this.authService.user.company;\n    Redirection.validateAdvertisement();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ChildActivationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\n\n@Component({\n  selector: 'app-form-advertissement',\n  templateUrl: './form-advertissement.component.html'\n})\nexport class FormAdvertissementComponent implements OnInit {\n\n  pageLink: string;\n  subscription: Subscription;\n\n  constructor(public advertisementService: AdvertisementService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.subscription = this.router.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        if (event.snapshot.firstChild.data.pagelink) {\n          this.pageLink = event.snapshot.firstChild.data.pagelink;\n        }\n      }\n    });\n  }\n\n}\n","export default \"ion-slides {\\n  height: 100%;\\n}\\n\\nion-slides .swiper-slide {\\n  display: block;\\n}\\n\\nion-slides .swiper-slide img {\\n  max-height: 50%;\\n  max-width: 80%;\\n  margin: 16px 0 40px;\\n  pointer-events: none;\\n}\\n\\nion-slides p {\\n  padding: 0 40px 2em 40px;\\n  font-size: 14px;\\n  line-height: 1.5;\\n  color: var(--ion-color-step-600, #60646b);\\n}\\n\\nion-slides .swiper-pagination-bullet-active {\\n  width: 16px !important;\\n  height: 16px !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWR2ZXJ0aXNlbWVudC9jb21wb25lbnRzL2NyZWF0ZS9zbGlkZXItYWR2ZXJ0aXNlbWVudC9zbGlkZXItYWR2ZXJ0aXNlbWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVk7QUFDaEI7O0FBRkE7RUFHTSxjQUFjO0FBR3BCOztBQU5BO0VBTU0sZUFBZTtFQUNmLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsb0JBQW9CO0FBSTFCOztBQWJBO0VBYU0sd0JBQXdCO0VBQ3hCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIseUNBQXlDO0FBSS9DOztBQXBCQTtFQW1CTSxzQkFBc0I7RUFDdEIsdUJBQXVCO0FBSzdCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYWR2ZXJ0aXNlbWVudC9jb21wb25lbnRzL2NyZWF0ZS9zbGlkZXItYWR2ZXJ0aXNlbWVudC9zbGlkZXItYWR2ZXJ0aXNlbWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1zbGlkZXMge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAuc3dpcGVyLXNsaWRlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICAuc3dpcGVyLXNsaWRlIGltZyB7XG4gICAgICBtYXgtaGVpZ2h0OiA1MCU7XG4gICAgICBtYXgtd2lkdGg6IDgwJTtcbiAgICAgIG1hcmdpbjogMTZweCAwIDQwcHg7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB9XG4gIFxuICAgIHAge1xuICAgICAgcGFkZGluZzogMCA0MHB4IDJlbSA0MHB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3RlcC02MDAsICM2MDY0NmIpO1xuICAgIH1cbiAgICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gICAgICB3aWR0aDogMTZweCAhaW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiAxNnB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG4gICJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-slider-advertisement',\n  templateUrl: './slider-advertisement.component.html',\n  styleUrls: ['./slider-advertisement.component.scss']\n})\nexport class SliderAdvertisementComponent {\n\n  constructor() { }\n\n  ionViewDidEnter(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy9jcmVhdGUvdmFsaWRhdGUtYWR2ZXJ0aXNlbWVudC92YWxpZGF0ZS1hZHZlcnRpc2VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { LocalStorage, Redirection } from 'src/app/core/utils';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Advertisement } from 'src/app/core/models/classes';\nimport { PreviewAdvertisementComponent } from 'src/app/shared/components';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-validate-advertisement',\n  templateUrl: './validate-advertisement.component.html',\n  styleUrls: ['./validate-advertisement.component.scss']\n})\nexport class ValidateAdvertisementComponent {\n\n  constructor(public advertisementService: AdvertisementService, private modalController: ModalController) { }\n\n  ionViewDidEnter(): void {\n  }\n\n  onSave() {\n    console.log(this.advertisementService.advertisement);\n    this.advertisementService.addAdvertisement().subscribe((response: Response) => {\n      this.advertisementService.advertisement = new Advertisement({});\n      this.advertisementService.setPercentage(0);\n      Redirection.advertisements();\n    });\n\n  }\n\n  async previewAdvertisement() {\n    const modal = await this.modalController.create({\n      component: PreviewAdvertisementComponent\n    });\n    modal.onWillDismiss().then( () => {\n      return this.advertisementService.advertisement;\n    });\n    return await modal.present();\n  }\n\n}\n","export default \"#programming-languages span {\\n  position: relative !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWR2ZXJ0aXNlbWVudC9jb21wb25lbnRzL2RldGFpbHMvYWRzLWRldGFpbHMvYWRzLWRldGFpbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSw2QkFBNkI7QUFBckMiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hZHZlcnRpc2VtZW50L2NvbXBvbmVudHMvZGV0YWlscy9hZHMtZGV0YWlscy9hZHMtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNwcm9ncmFtbWluZy1sYW5ndWFnZXMge1xuICAgIHNwYW4ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbiAgICB9XG59Il19 */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { DateComponent } from '../../update/date/date.component';\nimport { MissionComponent } from '../../update/mission/mission.component';\nimport { ProfilComponent } from '../../update/profil/profil.component';\nimport { TaskComponent } from '../../update/task/task.component';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { OtherInfoComponent } from '../../update/other-info/other-info.component';\nimport { StatusComponent } from '../../update/status/status.component';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\n\n@Component({\n  selector: 'app-ads-details',\n  templateUrl: './ads-details.component.html',\n  styleUrls: ['./ads-details.component.scss']\n})\nexport class AdsDetailsComponent implements OnDestroy {\n\n  languages = [];\n  programingLanguages = [];\n  infos = {\n    contract: null,\n    jobType: null,\n    jobMode: null,\n    managerialLevel: null,\n    effective: null\n  };\n  constructor(public modalController: ModalController, public advertisementService: AdvertisementService,\n              private activatedRoute: ActivatedRoute, private globalService: GlobalService, public authService: AuthService) { }\n\n  ionViewDidEnter(): void {\n    const { id } = this.activatedRoute.snapshot.params;\n    if (id) {\n      this.advertisementService.readOne(id).subscribe(res => {\n        this.setData(res);\n      });\n    }\n    // change values in popuo\n    this.advertisementService.changed.subscribe(res => {\n      this.setData(this.advertisementService.advertisement);\n    });\n  }\n\n  private setData(res) {\n    if (res) {\n      if (res.languages) {\n        this.languages = [];\n        res.languages.forEach((x: any) => {\n          const languageIndex = this.globalService.languages.findIndex(val => val._id === x.language);\n          const languageLevelIndex = this.globalService.languagesLevels.findIndex(val => val._id === x.languageLevel);\n          console.log(languageIndex, languageLevelIndex);\n          this.languages.push({\n            language: this.globalService.languages[languageIndex],\n            languageLevel: this.globalService.languagesLevels[languageLevelIndex],\n          });\n        });\n      }\n      if (res.programingLanguages) {\n        this.programingLanguages = [];\n        res.programingLanguages.language.forEach(item => {\n          const val = this.globalService.programmingLanguages.find(x => x._id === item);\n          if (val) {\n            this.programingLanguages.push(val.name);\n          }\n        });\n        res.programingLanguages.logiciel.forEach(item => {\n          const val = this.globalService.logiciels.find(x => x._id === item);\n          if (val) {\n            this.programingLanguages.push(val.name);\n          }\n        });\n      }\n\n      this.infos = {\n        contract: this.globalService.contracts.find(x => x._id === this.advertisementService.advertisement.contract),\n        jobType: this.globalService.jobTypes.find(x => x._id === this.advertisementService.advertisement.jobType),\n        jobMode: this.globalService.jobModes.find(x => x._id === this.advertisementService.advertisement.jobMode),\n        managerialLevel: this.globalService.managerialLevels.find(x => x._id === this.advertisementService.advertisement.managerialLevel),\n        effective: this.globalService.effectives.find(x => x._id === this.advertisementService.advertisement.effective)\n      };\n    }\n  }\n\n  async openMission() {\n    const modal = await this.modalController.create({\n      component: MissionComponent\n    });\n    return await modal.present();\n  }\n\n  async openTasks() {\n    const modal = await this.modalController.create({\n      component: TaskComponent\n    });\n    return await modal.present();\n  }\n\n  async openProfile() {\n    const modal = await this.modalController.create({\n      component: ProfilComponent\n    });\n    return await modal.present();\n  }\n\n  async openDate() {\n    const modal = await this.modalController.create({\n      component: DateComponent\n    });\n    return await modal.present();\n  }\n\n  async openOtherInfo() {\n    const modal = await this.modalController.create({\n      component: OtherInfoComponent\n    });\n    return await modal.present();\n  }\n\n  async openStatus() {\n    const modal = await this.modalController.create({\n      component: StatusComponent\n    });\n    return await modal.present();\n  }\n\n  ngOnDestroy() {\n    this.advertisementService.advertisement = null;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy9kZXRhaWxzL2Fkcy1wcm9maWxlL2Fkcy1wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Subscription } from 'rxjs';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-ads-profile',\n  templateUrl: './ads-profile.component.html',\n  styleUrls: ['./ads-profile.component.scss']\n})\nexport class AdsProfileComponent implements OnInit, OnDestroy {\n\n  subscribe: Subscription;\n  isChecked = true;\n  constructor(public advertisementService: AdvertisementService, private activatedRoute: ActivatedRoute, public authService: AuthService, private alertController: AlertController) { }\n\n  ngOnInit(): void {\n    const { id } = this.activatedRoute.snapshot.params;\n    if (id) {\n      this.subscribe = this.advertisementService.readDetails(id).subscribe(res =>\n        console.log(res)\n      );\n    }\n  }\n\n  ngOnDestroy(){\n    this.advertisementService.advertisement = null;\n    this.subscribe.unsubscribe();\n  }\n\n  async changeStatus() {\n    const alert = await this.alertController.create({\n      header: 'Confirmation!',\n      message: 'Etes-vous sûr de vouloir clôturer cette annonce?',\n      buttons: [\n        {\n          text: 'Non',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Oui',\n          handler: () => {\n            console.log('Confirm Okay');\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n","export default \"#badge-ribbon {\\n  position: relative;\\n  background: red;\\n  height: 100px;\\n  width: 100px;\\n  border-radius: 50px;\\n}\\n\\n#badge-ribbon:before,\\n#badge-ribbon:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  border-bottom: 70px solid red;\\n  border-left: 40px solid transparent;\\n  border-right: 40px solid transparent;\\n  top: 70px;\\n  left: -10px;\\n  transform: rotate(-140deg);\\n}\\n\\n#badge-ribbon:after {\\n  left: auto;\\n  right: -10px;\\n  transform: rotate(140deg);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWR2ZXJ0aXNlbWVudC9jb21wb25lbnRzL2xpc3Rlcy9saXN0ZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGFBQWE7RUFDYixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOztBQUNBOztFQUVFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsNkJBQTZCO0VBQzdCLG1DQUFtQztFQUNuQyxvQ0FBb0M7RUFDcEMsU0FBUztFQUNULFdBQVc7RUFDWCwwQkFBMEI7QUFFNUI7O0FBQUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtFQUNaLHlCQUF5QjtBQUczQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy9saXN0ZXMvbGlzdGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2JhZGdlLXJpYmJvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogcmVkO1xuICBoZWlnaHQ6IDEwMHB4O1xuICB3aWR0aDogMTAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XG59XG4jYmFkZ2UtcmliYm9uOmJlZm9yZSxcbiNiYWRnZS1yaWJib246YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlci1ib3R0b206IDcwcHggc29saWQgcmVkO1xuICBib3JkZXItbGVmdDogNDBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0OiA0MHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICB0b3A6IDcwcHg7XG4gIGxlZnQ6IC0xMHB4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTQwZGVnKTtcbn1cbiNiYWRnZS1yaWJib246YWZ0ZXIge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogLTEwcHg7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE0MGRlZyk7XG59XG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\nimport { StatusComponent } from '../update/status/status.component';\n\n@Component({\n  selector: 'app-listes',\n  templateUrl: './listes.component.html',\n  styleUrls: ['./listes.component.scss']\n})\nexport class ListesComponent implements OnInit{\n\n  search: string;\n\n  constructor(public advertisementService: AdvertisementService, public authService: AuthService, public modalController: ModalController) {\n  }\n\n  ionViewDidEnter(): void {\n    this.advertisementService.read().subscribe();\n  }\n\n  ngOnInit(): void {\n  }\n\n  async changeStatus(id){\n    console.log(id);\n    const modal = await this.modalController.create({\n      component: StatusComponent,\n      componentProps : { idAdvertissement: id }\n    });\n    return await modal.present();\n  }\n\n  /**\n   * search recruiter\n   */\n  onSearch() {\n    this.advertisementService.read(this.search).subscribe();\n  }\n\n  /**\n   * go back\n   */\n  goBack() {\n    if (this.authService.user.role.name === 'candidate') {\n      Redirection.candidateDashboard();\n    } else {\n      Redirection.dashboard();\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy91cGRhdGUvZGF0ZS9kYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\n\n@Component({\n  selector: 'app-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss']\n})\nexport class DateComponent {\n\n  form: FormGroup;\n  constructor(public modalController: ModalController, private advertisementService: AdvertisementService) {\n    this.initForm();\n  }\n\n  ionViewDidEnter(): void {\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n  /**\n   * init date form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      startedDate: new FormControl(this.advertisementService.advertisement.startedDate, Validators.required)\n    })\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    this.advertisementService.updateStartedDate(this.advertisementService.advertisement._id, this.form.value).subscribe(res => {\n      this.close();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy91cGRhdGUvbWlzc2lvbi9taXNzaW9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\n\n@Component({\n  selector: 'app-mission',\n  templateUrl: './mission.component.html',\n  styleUrls: ['./mission.component.scss']\n})\nexport class MissionComponent implements OnInit{\n\n  form: FormGroup;\n  constructor(public modalController: ModalController, private advertisementService: AdvertisementService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n  /**\n   * init Form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      missions: new FormControl(this.advertisementService.advertisement.missions, Validators.required)\n    });\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    this.advertisementService.updateMissions(this.advertisementService.advertisement._id, this.form.value).subscribe(res => {\n      this.close();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy91cGRhdGUvb3RoZXItaW5mby9vdGhlci1pbmZvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\n\n@Component({\n  selector: 'app-other-info',\n  templateUrl: './other-info.component.html',\n  styleUrls: ['./other-info.component.scss']\n})\nexport class OtherInfoComponent implements OnInit {\n\n  form: FormGroup;\n  locations = [];\n  constructor(public modalController: ModalController, private advertisementService: AdvertisementService,\n              public globalService: GlobalService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n  /**\n   * init date form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      contract: new FormControl(this.advertisementService.advertisement['contract'], Validators.required),\n      jobType: new FormControl(this.advertisementService.advertisement['jobType'], Validators.required),\n      jobMode: new FormControl(this.advertisementService.advertisement['jobMode'], Validators.required),\n      managerialLevel: new FormControl(this.advertisementService.advertisement['managerialLevel'], Validators.required),\n      location: new FormControl(this.advertisementService.advertisement['location'], Validators.required),\n      effective: new FormControl(this.advertisementService.advertisement['effective'], Validators.required),\n      supposedSalaryMin: new FormControl(this.advertisementService.advertisement['supposedSalaryMin'], Validators.required),\n      supposedSalaryMax: new FormControl(this.advertisementService.advertisement['supposedSalaryMax'], Validators.required),\n      otherAdvantage: new FormControl(this.advertisementService.advertisement['otherAdvantage'], Validators.required),\n    });\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    const value = this.form.value;\n    this.advertisementService.updateStartedDate(this.advertisementService.advertisement._id, value).subscribe(res => {\n      this.advertisementService.advertisement = Object.assign(this.advertisementService.advertisement, value);\n      this.advertisementService.setChanges();\n      this.close();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy91cGRhdGUvcHJvZmlsL3Byb2ZpbC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.scss']\n})\nexport class ProfilComponent implements OnInit {\n\n  form: FormGroup;\n  softSkills = [];\n  maxLenght = false;\n  languagesList = [];\n  programingLanguages = [];\n  programs = [];\n\n  constructor(public modalController: ModalController, private fb: FormBuilder, public globalService: GlobalService,\n    private advertisementService: AdvertisementService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    if (this.advertisementService.advertisement['languages'] && this.advertisementService.advertisement['languages'].length > 0) {\n      this.advertisementService.advertisement['languages'].forEach(item => {\n        const languageIndex = this.globalService.languages.findIndex(x => x._id === item.language);\n        const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === item.languageLevel);\n        this.languagesList.push({\n          language: this.globalService.languages[languageIndex],\n          languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n        });\n      });\n    }\n    if (this.advertisementService.advertisement['programingLanguages']) {\n      this.advertisementService.advertisement['programingLanguages']['language'].forEach(item => {\n        const index = this.programingLanguages.findIndex(x => x._id === item);\n        if (index !== -1) {\n          this.programingLanguages[index]['checked'] = true;\n        }\n      });\n      this.advertisementService.advertisement['programingLanguages']['logiciel'].forEach(item => {\n        const index = this.programs.findIndex(x => x._id === item);\n        if (index !== -1) {\n          this.programs[index]['checked'] = true;\n        }\n      });\n    }\n    if (this.advertisementService.advertisement['skills'] && this.advertisementService.advertisement['skills'].length > 0) {\n      this.advertisementService.advertisement['skills'].forEach(item => {\n        const index = this.softSkills.findIndex(x => x._id === item);\n        if (index !== -1) {\n          this.softSkills[index]['checked'] = true;\n        }\n      });\n    }\n  }\n\n  ionViewDidEnter(): void {\n    this.form.patchValue(this.advertisementService.advertisement);\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n  /**\n   * init profile form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      prerequisite: new FormControl(this.advertisementService.advertisement.prerequisite, Validators.required),\n      skills: new FormControl(this.advertisementService.advertisement.skills ? this.advertisementService.advertisement.skills : []),\n      languages: new FormGroup({\n        language: new FormControl(null),\n        languageLevel: new FormControl(null)\n      }),\n      programingLanguages: new FormGroup({\n        language: new FormControl(this.advertisementService.advertisement.programingLanguages ? this.advertisementService.advertisement.programingLanguages['language'] : []),\n        logiciel: new FormControl(this.advertisementService.advertisement.programingLanguages ? this.advertisementService.advertisement.programingLanguages['logiciel'] : [])\n      }),\n      typeOfTraining: new FormControl(this.advertisementService.advertisement.typeOfTraining ? this.advertisementService.advertisement.typeOfTraining : []),\n      levelOfStudies: new FormControl(this.advertisementService.advertisement.levelOfStudies ? this.advertisementService.advertisement.levelOfStudies : null),\n      experienceYears: new FormControl(this.advertisementService.advertisement.experienceYears)\n    });\n  }\n\n\n  addLanguage() {\n    const value = this.form.get('languages').value;\n    if (value) {\n      const languageIndex = this.globalService.languages.findIndex(x => x._id === value.language);\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === value.languageLevel);\n      this.languagesList.push({\n        language: this.globalService.languages[languageIndex],\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n      });\n      this.form.get('languages').reset();\n    }\n  }\n\n  deleteLanguage(i: number) {\n    this.languagesList.splice(i, 1);\n  }\n\n  /**\n   * add experiences\n   */\n  onSave() {\n    const value = this.form.value;\n    value['languages'] = this.languagesList.map(x => ({\n      language: x.language._id,\n      languageLevel: x.languageLevel._id\n    }));\n    this.advertisementService.updateProfile(this.advertisementService.advertisement._id, value).subscribe(res => {\n      this.advertisementService.advertisement = Object.assign(this.advertisementService.advertisement, value);\n      this.advertisementService.setChanges();\n      this.close();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy91cGRhdGUvc3RhdHVzL3N0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.scss'],\n})\nexport class StatusComponent implements OnInit {\n\n  form: FormGroup;\n  @Input() idAdvertissement: any;\n\n  constructor(private advertisementService: AdvertisementService, private modalController: ModalController) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    if (this.idAdvertissement) {\n      this.advertisementService.readOne(this.idAdvertissement);\n      console.log(this.advertisementService.advertisement.status)\n      this.initForm();\n    }\n  }\n\n  /**\n   * init status form\n   */\n  private initForm() {\n    this.form = new FormGroup({\n      status: new FormControl(this.advertisementService.advertisement.status, Validators.required)\n    });\n  }\n\n  /**\n   * change status\n   */\n  changeStatus() {\n    const value = this.form.value;\n    this.advertisementService.updateStatus(this.advertisementService.advertisement._id, value).subscribe(res => {\n      this.advertisementService.advertisement = Object.assign(this.advertisementService.advertisement, value);\n      this.advertisementService.setChanges();\n      this.modalController.dismiss();\n    });\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkdmVydGlzZW1lbnQvY29tcG9uZW50cy91cGRhdGUvdGFzay90YXNrLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AdvertisementService } from 'src/app/core/services/crud/advertisement.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit{\n\n  descriptions: string[] = [];\n  form: FormGroup;\n  constructor(public modalController: ModalController, public advertisementService: AdvertisementService, public globalService: GlobalService) {\n  }\n\n  ngOnInit(): void {\n    console.log(this.advertisementService.advertisement);\n    this.descriptions = this.advertisementService.advertisement.descriptions;\n    this.form = new FormGroup({\n      usageTitles: new FormControl(this.advertisementService.advertisement.usageTitles ? this.advertisementService.advertisement.usageTitles : []),\n      function: new FormControl(this.advertisementService.advertisement.function),\n      desiredJob: new FormControl(this.advertisementService.advertisement.desiredJob, Validators.required),\n      descriptions: new FormControl(null)\n    });\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n\n  /**\n   * add new task\n   * @param element\n   */\n  addTask(element) {\n    if (element.value) {\n      this.descriptions.push(element.value);\n      element.value = null;\n    }\n  }\n\n  /**\n   * delete tasks\n   * @param i\n   */\n  deleteTask(i: number) {\n    this.descriptions.splice(i, 1);\n  }\n\n  /**\n   * add experiences\n   */\n  onSave() {\n    this.advertisementService.updateTasks(this.advertisementService.advertisement._id, Object.assign(this.form.value, {descriptions: this.descriptions})).subscribe(res => {\n      this.close();\n    })\n  }\n\n}\n"],"sourceRoot":"webpack:///"}