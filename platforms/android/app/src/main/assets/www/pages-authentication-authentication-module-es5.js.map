{"version":3,"sources":["webpack:///src/app/pages/authentication/components/account-type/account-type.component.html","webpack:///src/app/pages/authentication/components/congratulation/congratulation.component.html","webpack:///src/app/pages/authentication/components/forgot-password/forgot-password.component.html","webpack:///src/app/pages/authentication/components/recruiter/recruiter.component.html","webpack:///src/app/pages/authentication/components/reset-password/reset-password.component.html","webpack:///src/app/pages/authentication/components/sign-in/sign-in.component.html","webpack:///src/app/pages/authentication/components/sign-up/sign-up.component.html","webpack:///src/app/pages/authentication/components/verification/verification.component.html","webpack:///src/app/core/services/crud/contact.service.ts","webpack:///src/app/pages/authentication/Authentication-routing.module.ts","webpack:///src/app/pages/authentication/authentication.module.ts","webpack:///src/app/pages/authentication/components/account-type/account-type.component.scss","webpack:///src/app/pages/authentication/components/account-type/account-type.component.ts","webpack:///src/app/pages/authentication/components/congratulation/congratulation.component.scss","webpack:///src/app/pages/authentication/components/congratulation/congratulation.component.ts","webpack:///src/app/pages/authentication/components/forgot-password/forgot-password.component.scss","webpack:///src/app/pages/authentication/components/forgot-password/forgot-password.component.ts","webpack:///src/app/pages/authentication/components/index.ts","webpack:///src/app/pages/authentication/components/recruiter/recruiter.component.scss","webpack:///src/app/pages/authentication/components/recruiter/recruiter.component.ts","webpack:///src/app/pages/authentication/components/reset-password/reset-password.component.scss","webpack:///src/app/pages/authentication/components/reset-password/reset-password.component.ts","webpack:///src/app/pages/authentication/components/sign-in/sign-in.component.scss","webpack:///src/app/pages/authentication/components/sign-in/sign-in.component.ts","webpack:///src/app/pages/authentication/components/sign-up/sign-up.component.scss","webpack:///src/app/pages/authentication/components/sign-up/sign-up.component.ts","webpack:///src/app/pages/authentication/components/verification/verification.component.scss","webpack:///src/app/pages/authentication/components/verification/verification.component.ts"],"names":["ContactService","apiService","contact","post","providedIn","routes","path","component","AuthenticationRoutingModule","imports","forChild","exports","AuthenticationModule","declarations","AccountTypeComponent","router","initForm","form","type","required","get","value","navigateByUrl","selector","template","CongratulationComponent","authService","candidateService","fromPage","email","verificationEmail","password","signUpPassword","signIn","subscribe","response","user","userRole","Object","keys","length","currentStep","isLoggedIn","toPromise","then","res","console","log","candidate","profileByStep","candidateDashboard","dashboard","login","ForgotPasswordComponent","toastService","transService","compose","forgotPassword","success","translate","message","verification","RecruiterComponent","contactService","companyName","fullName","phoneNumber","congratulation","ResetPasswordComponent","fb","group","minLength","confirmPassword","validator","checkPasswords","controls","passwordsDoNotMatch","resetPassword","SignInComponent","visibility","SignUpComponent","firstName","lastName","getLocalEmail","localStorage","getItem","signUp","setItem","VerificationComponent","sendTimer","setTimeout","one","two","three","four","event","nextElement","code","keyCode","focus","verificationCode","forEach","key","toLowerCase","removeItem"],"mappings":"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","file":"pages-authentication-authentication-module-es5.js","sourcesContent":["export default \"<!-- <ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title text-primary mb-0\\\">Inscription</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title text-primary\\\">Inscription</h1>\\n  </div>\\n</ion-header> -->\\n<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <a routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\">\\n    <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n  </a>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title text-primary\\\">Inscription</h1>\\n  </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <section class=\\\"auth-content auth-account-type p-2\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <article class=\\\"page-title\\\">\\n            <h1 class=\\\"title fw-500\\\">Vous êtes ?</h1>\\n          </article>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block mt-3\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"choiseType()\\\">\\n  \\n              <img class=\\\"d-block mb-2 mt-2 mr-auto w-100\\\" src=\\\"./assets/img/type-background.svg\\\" alt=\\\"type account\\\">\\n  \\n              <ion-radio-group formControlName=\\\"type\\\">\\n                <ion-item lines=\\\"none\\\" class=\\\"d-inline ion-no-padding\\\">\\n                  <ion-label>Recruteur</ion-label>\\n                  <ion-radio slot=\\\"start\\\" color=\\\"primary\\\" mode=\\\"md\\\" value=\\\"recruiter\\\"></ion-radio>\\n                </ion-item>\\n  \\n                <ion-item lines=\\\"none\\\" class=\\\"d-inline float-right ion-no-padding\\\">\\n                  <ion-label>Candidat</ion-label>\\n                  <ion-radio slot=\\\"start\\\" color=\\\"primary\\\" mode=\\\"md\\\" value=\\\"candidate\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n  \\n              <div class=\\\"mt-1\\\">\\n                <ion-button class=\\\"choose-btn w-100\\\" color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Continuer</ion-button>\\n              </div>\\n            </form>\\n  \\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n</ion-content>\";","export default \"<section class=\\\"congratulation mt-1\\\">\\n    <ng-container *ngIf=\\\"authService.fromPage === 'sign-up', else contact \\\" >\\n        <img class=\\\"d-block mt-1 mb-2 mr-auto\\\" src=\\\"./assets/img/logo.svg\\\" alt=\\\"\\\">\\n        <h2 class=\\\"text-center\\\"> Votre compte Jobwinwin a été créé avec succès!</h2>\\n        <div class=\\\"mt-2 text-center\\\">\\n            Les recruteurs sont à quelques clics! <br>\\n            Suivez les étapes d'inscription pour matcher et trouver votre futur emploi\\n        </div>\\n        <img class=\\\"d-block mt-3 mr-auto\\\" src=\\\"./assets/img/congratulation-ilustration.svg\\\" alt=\\\"\\\">\\n        <div class=\\\"text-center mt-3\\\">\\n            <ion-button class=\\\"yellow-btn w-80\\\" color=\\\"secondary\\\" (click)=\\\"goTo()\\\">\\n                Ok\\n            </ion-button>\\n        </div>\\n    </ng-container>\\n    \\n    <ng-template #contact>\\n        <img class=\\\"d-block mt-4 mr-auto\\\" src=\\\"./assets/img/logo.svg\\\" alt=\\\"\\\">\\n        <div class=\\\"mt-3 text-center\\\">\\n            Nous vous remercions pour votre message, un conseiller Jobwinwin prendra rapidement contact avec vous.\\n        </div>\\n        <img class=\\\"d-block mt-3 mr-auto w-30\\\" src=\\\"./assets/img/msg-check.svg\\\" alt=\\\"\\\">\\n        <div class=\\\"text-center mt-3\\\">\\n            <ion-button class=\\\"yellow-btn w-80\\\" color=\\\"secondary\\\" (click)=\\\"goTo()\\\">\\n                Ok\\n            </ion-button>\\n        </div>\\n    </ng-template>\\n\\n</section>\";","export default \"<!-- <ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title text-primary mb-0\\\">Mot de passe oublié</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <a routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\">\\n    <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n  </a>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title text-primary\\\">Mot de passe oublié</h1>\\n  </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"false\\\" class=\\\"forms\\\">\\n  <section class=\\\"auth-content auth-forgot-password p-1\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <img class=\\\"d-block mb-2 mr-auto w-100\\\" src=\\\"./assets/img/forgot-password.svg\\\" alt=\\\"forgot password\\\">\\n            <p class=\\\"mt-2\\\">\\n              Saisissez votre adresse e-mail <br>\\n              pour réinitialiser votre mot de passe\\n            </p>\\n            <form class=\\\"d-block mt-2\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                form.get('email').hasError('required'))\\\">\\n                  {{ 'shared.validations.email' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"mt-1\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"choose-btn w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">\\n                  Envoyer\\n                </ion-button>\\n              </div>\\n            </form>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </section>\\n\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header signup-background ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar class=\\\"auth-toolbar\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button routerLink=\\\"/auth/account-type\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"page-title\\\">\\n            <h1 class=\\\"title mb-0\\\">Contactez-nous</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content overflow-scroll=\\\"true\\\" scroll=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"auth-content auth-contact p-1\\\">\\n        <ion-grid class=\\\"h-100\\\">\\n            <ion-row class=\\\"h-100\\\">\\n                <ion-col size=\\\"12\\\" class=\\\"ion-align-self-start\\\">\\n                    <div class=\\\"page-content\\\">\\n                        <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Société\\\"\\n                                    formControlName=\\\"companyName\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('companyName').touched && form.get('companyName').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Nom complet\\\"\\n                                    formControlName=\\\"fullName\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('fullName').touched && form.get('fullName').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Fonction\\\"\\n                                    formControlName=\\\"function\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('function').touched && form.get('function').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"tel\\\" placeholder=\\\"Téléphone\\\"\\n                                    formControlName=\\\"phoneNumber\\\">\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('phoneNumber').touched && form.get('phoneNumber').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                                form.get('email').hasError('required'))\\\">\\n                                    {{ 'shared.validations.email' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <textarea class=\\\"custom-textarea\\\" placeholder=\\\"Tapez votre message\\\"\\n                                    formControlName=\\\"message\\\"></textarea>\\n                                <small class=\\\"text-error\\\"\\n                                    *ngIf=\\\"form.get('message').touched && form.get('message').hasError('required')\\\">\\n                                    {{ 'shared.validations.required' | translate}}\\n                                </small>\\n                            </div>\\n                            <div class=\\\"mt-1\\\">\\n                                <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">\\n                                    Envoyez le message\\n                                </ion-button>\\n                            </div>\\n                        </form>\\n\\n                        <div class=\\\"other-choice text-center mt-2 pb-4\\\">\\n                            <h3 class=\\\"title\\\">\\n                                <span>Ou appelez le</span>\\n                            </h3>\\n                            <div class=\\\"text-center mt-2\\\">\\n                                <div class=\\\"d-block mb-1\\\">\\n                                    <img class=\\\"d-inline align-sub mr-2\\\" src=\\\"./assets/icon/phone-icon.svg\\\">\\n                                    <span class=\\\"d-inline align-center\\\">+212 000 000 000</span>\\n                                </div>\\n                                <div class=\\\"d-block\\\">\\n                                    <img class=\\\"d-inline align-sub mr-2\\\" src=\\\"./assets/icon/phone-icon.svg\\\">\\n                                    <span class=\\\"d-inline align-center\\\">+212 000 000 000</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n\\n    </section>\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title-black mb-0\\\">Nouveau mot de passe</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n  <section class=\\\"auth-content auth-resetPassword p-1 h-80vh\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <img class=\\\"d-block mb-2 mr-auto w-100\\\" src=\\\"./assets/img/set-new-password.svg\\\" alt=\\\"Set New password\\\">\\n            <p class=\\\"text-center mt-2\\\">\\n              Entrez le nouveau mot de passe\\n            </p>\\n            <form class=\\\"d-block mt-2\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"form-group position-relative\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Nouveau mot de passe\\\"\\n                  formControlName=\\\"password\\\">\\n              </div>\\n              <div class=\\\"form-group position-relative\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Confirmez le mot de passe\\\"\\n                  formControlName=\\\"confirmPassword\\\">\\n              </div>\\n              <div class=\\\"mt-1\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">Validez</ion-button>\\n              </div>\\n            </form>\\n\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </section>\\n\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header signup-background ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-title class=\\\"text-center\\\">\\n      <img class=\\\"auth-logo\\\" src=\\\"./assets/img/logo.svg\\\" alt=\\\"Logo\\\">\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"forms\\\" >\\n  <section class=\\\"auth-content auth-login\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100 py-1\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-start\\\">\\n          <article class=\\\"page-title\\\">\\n            <p class=\\\"pt-1\\\">\\n              Connectez-vous à Jobwinwin<br>\\n              Swipez, Matchez et Rencontrez-vous !\\n            </p>\\n            {{ code }}\\n          </article>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content\\\">\\n            <div class=\\\"custom-card py-1\\\">\\n              <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                  <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                form.get('email').hasError('required'))\\\">\\n                    {{ 'shared.validations.email' | translate}}\\n                  </small>\\n                </div>\\n                <div class=\\\"form-group position-relative\\\">\\n                  <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Mot de passe\\\" formControlName=\\\"password\\\">\\n                  <small class=\\\"text-error\\\" *ngIf=\\\"form.get('password').touched && (form.get('password').hasError('minlength') || \\n                form.get('password').hasError('required'))\\\"\\n                    [innerHtml]=\\\"'shared.validations.required-password' | translate\\\"></small>\\n                </div>\\n                <div class=\\\"forgot-password w-100 mt-1\\\">\\n                  <a routerLink=\\\"/auth/forgot-password\\\" routerDirection=\\\"root\\\">Mot de passe oublié ?</a>\\n                </div>\\n                <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                  <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"40%\\\">\\n                    <a class=\\\"pt-1\\\" routerLink=\\\"/auth/account-type\\\" routerDirection=\\\"root\\\"><span class=\\\"link\\\">Créer un compte</span></a>\\n                  </div>\\n                  <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"50%\\\">\\n                    <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">\\n                      Se connecter\\n                    </ion-button>\\n                  </div>\\n                </div>\\n              </form>\\n              <div class=\\\"other-choice text-center mt-2\\\">\\n                <h3 class=\\\"title\\\">Ou connectez-vous avec </h3>\\n                <p class=\\\"text-center mt-2\\\">\\n                  <img class=\\\"mr-2\\\" src=\\\"./assets/icon/linkedin.svg\\\">\\n                  <img src=\\\"./assets/icon/google.svg\\\">\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n</ion-content>\";","export default \"<ion-header class=\\\"auth-header signup-background ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button routerLink=\\\"/auth/account-type\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title mb-0\\\">Créer votre compte</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n  <section class=\\\"auth-content auth-signup p-1\\\">\\n\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-start\\\">\\n          <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Votre prénom\\\" formControlName=\\\"lastName\\\">\\n                <small class=\\\"text-error\\\"\\n                  *ngIf=\\\"form.get('lastName').touched && form.get('lastName').hasError('required')\\\">\\n                  {{ 'shared.validations.required' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"text\\\" placeholder=\\\"Votre nom\\\" formControlName=\\\"firstName\\\">\\n                <small class=\\\"text-error\\\"\\n                  *ngIf=\\\"form.get('firstName').touched && form.get('firstName').hasError('required')\\\">\\n                  {{ 'shared.validations.required' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"email\\\" placeholder=\\\"E-mail\\\" formControlName=\\\"email\\\">\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('email').touched && (form.get('email').hasError('email') || \\n                form.get('email').hasError('required'))\\\">\\n                  {{ 'shared.validations.email' | translate}}\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Mot de passe\\\" formControlName=\\\"password\\\">\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('password').touched && (form.get('password').hasError('minlength') || \\n                form.get('password').hasError('required'))\\\"\\n                  [innerHtml]=\\\"'shared.validations.required-password' | translate\\\"></small>\\n              </div>\\n              <div class=\\\"form-group position-relative\\\">\\n                <input class=\\\"custom-input\\\" type=\\\"password\\\" placeholder=\\\"Confirmez le mot de passe\\\"\\n                  formControlName=\\\"confirmPassword\\\">\\n                <small class=\\\"text-error\\\"\\n                  *ngIf=\\\"form.get('confirmPassword').touched &&\\n                      (form.get('confirmPassword').hasError('required') || form.get('confirmPassword').hasError('minlength'))\\\">\\n                  Le champ doit contenir au moins <strong>5</strong> caractères.\\n                </small>\\n                <small *ngIf=\\\"form.get('confirmPassword').touched &&\\n                      !form.get('confirmPassword').hasError('required') &&\\n                      !form.get('confirmPassword').hasError('minlength') &&\\n                      form.hasError('passwordsDoNotMatch')\\\" class=\\\"text-error\\\">\\n                  Les mots de passe ne <strong>correspondent pas</strong>.\\n                </small>\\n              </div>\\n              <p class=\\\"condition-politique ion-text-center\\\">\\n                En appuyant sur je m'inscris et j'accepte, vous reconnaissez avoir lu notre\\n                <span class=\\\"link\\\">Politique de confidentialité </span> et acceptez nos <span class=\\\"link\\\"> Conditions\\n                  d'utilisation </span> du service\\n              </p>\\n              <div class=\\\"mt-1\\\">\\n                <ion-button type=\\\"submit\\\" class=\\\"w-100\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">Je m'inscris\\n                </ion-button>\\n              </div>\\n              <p class=\\\"hint ion-text-center\\\">\\n                En vous connectant.vous acceptez nos conditions générales. Pour en savoir plus sur l'usage que nous\\n                faisons de\\n                vos données, consultez notre Politique de confidentialité et notre Politique en matière de cookies.\\n              </p>\\n            </form>\\n\\n            <div class=\\\"other-choice text-center mt-2\\\">\\n              <h3 class=\\\"title\\\">Ou inscrivez-vous avec </h3>\\n              <p class=\\\"text-center mt-2\\\">\\n                <img class=\\\"mr-2\\\" src=\\\"./assets/icon/linkedin.svg\\\">\\n                <img src=\\\"./assets/icon/google.svg\\\">\\n              </p>\\n            </div>\\n\\n          </div>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-end\\\">\\n          <div class=\\\"footer-auth text-center\\\">\\n            <p class=\\\"mt-1 copyright\\\">Vous avez déjà un compte ?\\n              <a routerLink=\\\"/\\\" routerDirection=\\\"root\\\"><span class=\\\"link\\\">S’identifier</span></a>\\n            </p>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </section>\\n</ion-content>\";","export default \"<!-- <ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <ion-toolbar class=\\\"auth-toolbar\\\">\\n    <ion-buttons slot=\\\"start\\\" class=\\\"ml-3\\\">\\n      <ion-button routerLink=\\\"/auth/forgot-password\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton p-0\\\">\\n        <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"page-title\\\">\\n      <h1 class=\\\"title mb-0\\\">Vérification d’email</h1>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n<ion-header class=\\\"auth-header ion-no-border\\\" mode=\\\"md\\\">\\n  <a [routerLink]=\\\"authService.fromPage === 'sign-up' ? '/auth/sign-up' : '/auth/forgot-password' \\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\">\\n    <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n  </a>\\n  <div class=\\\"page-title\\\">\\n    <h1 class=\\\"title\\\">Vérification d’email</h1>\\n  </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"verify-background forms\\\">\\n  <section class=\\\"auth-content auth-verification p-1\\\">\\n    <ion-grid class=\\\"h-100\\\">\\n      <ion-row class=\\\"h-100\\\">\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center\\\">\\n          <div class=\\\"page-content mt-3\\\">\\n            <h4 class=\\\"subtitle\\\">Entrez le code</h4>\\n            <p class=\\\"desc text-center mt-2\\\">\\n              Nous vous avons envoyé un code d’activation par email sur le compte {{ authService.verificationEmail }}\\n            </p>\\n            <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n              <div class=\\\"custom-card mt-4\\\">\\n                <div class=\\\"form-group text-center\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"1\\\" (keyup)=\\\"moveFocus($event, b)\\\"\\n                    formControlName=\\\"one\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"2\\\" #b (keyup)=\\\"moveFocus($event, c)\\\"\\n                    formControlName=\\\"two\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"3\\\" #c (keyup)=\\\"moveFocus($event, d)\\\"\\n                    formControlName=\\\"three\\\">\\n                  <input class=\\\"verify-number\\\" type=\\\"text\\\" maxLength=\\\"1\\\" tabindex=\\\"4\\\" #d formControlName=\\\"four\\\">\\n                </div>\\n              </div>\\n\\n              <div class=\\\"text-left pt-2\\\">\\n                <strong *ngIf=\\\"sendTimer\\\"  class=\\\"text-primary\\\" (click)=\\\"resendCode()\\\">Renvoyer le code ?</strong><br>\\n                <small>Veuillez patienter au moins 2 minutes avant de demander un autre code </small>\\n              </div>\\n\\n              <ion-button type=\\\"submit\\\" class=\\\"btn-verification mt-3 w-100\\\" [disabled]=\\\"!form.valid\\\">\\n                Validez\\n              </ion-button>\\n\\n            </form>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n  </section>\\n\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { ApiService } from '../global/api.service';\nimport { Observable } from 'rxjs';\nimport { Response } from '../../models/interfaces';\nimport { Contact } from '../../models/classes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor(private apiService: ApiService) { }\n\n  /**\n   * contact admin\n   * @param contact\n   */\n  contact(contact: Contact): Observable<Response> {\n    return this.apiService.post('contact-ms/contacts', contact);\n  }\n\n}\n","import { CongratulationComponent } from './components/congratulation/congratulation.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n    SignInComponent, SignUpComponent, ForgotPasswordComponent,\n    ResetPasswordComponent, VerificationComponent, AccountTypeComponent\n} from './components';\nimport { RecruiterComponent } from './components/recruiter/recruiter.component';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        component: SignInComponent\n    },\n    {\n        path: 'sign-up',\n        component: SignUpComponent\n    },\n    {\n        path: 'forgot-password',\n        component: ForgotPasswordComponent\n    },\n    {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n    },\n    {\n        path: 'verification',\n        component: VerificationComponent\n    },\n    {\n        path: 'account-type',\n        component: AccountTypeComponent\n    },\n    {\n        path: 'recruiter',\n        component: RecruiterComponent\n    },\n    {\n        path: 'congratulation',\n        component: CongratulationComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  SignInComponent, SignUpComponent, ForgotPasswordComponent,\n  ResetPasswordComponent, VerificationComponent, AccountTypeComponent\n} from './components';\nimport { AuthenticationRoutingModule } from './Authentication-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { RecruiterComponent } from './components/recruiter/recruiter.component';\nimport { CongratulationComponent } from './components/congratulation/congratulation.component';\n\n@NgModule({\n  declarations: [\n    SignInComponent, SignUpComponent, ForgotPasswordComponent, ResetPasswordComponent,\n    VerificationComponent, AccountTypeComponent, RecruiterComponent, CongratulationComponent\n  ],\n  imports: [\n    SharedModule,\n    AuthenticationRoutingModule\n  ]\n})\nexport class AuthenticationModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvYWNjb3VudC10eXBlL2FjY291bnQtdHlwZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account-type',\n  templateUrl: './account-type.component.html',\n  styleUrls: ['./account-type.component.scss'],\n})\nexport class AccountTypeComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private router: Router) {\n    this.initForm();\n  }\n\n  ngOnInit(): void { }\n\n  private initForm(): void {\n    this.form = new FormGroup({\n      type: new FormControl(null, Validators.required)\n    });\n  }\n\n  choiseType(): void {\n    if (this.form.get('type').value === 'candidate') {\n      this.router.navigateByUrl('/auth/sign-up');\n    } else {\n      this.router.navigateByUrl('/auth/recruiter');\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvY29uZ3JhdHVsYXRpb24vY29uZ3JhdHVsYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Auth } from 'src/app/core/models/interfaces';\nimport { Redirection } from 'src/app/core/utils';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\n\n@Component({\n  selector: 'app-congratulation',\n  templateUrl: './congratulation.component.html',\n  styleUrls: ['./congratulation.component.scss']\n})\nexport class CongratulationComponent implements OnInit {\n\n  constructor(public authService: AuthService, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * on save\n   */\n  goTo(): void {\n    if (this.authService.fromPage === 'sign-up') {\n      const value = { email: this.authService.verificationEmail, password: this.authService.signUpPassword }\n      this.authService.signIn(value).subscribe((response: Auth) => {\n        if (response.user.userRole === 'Candidate') {\n          if (!response.user || Object.keys(response.user).length === 0 || response.user.currentStep <= 8) {\n            this.authService.isLoggedIn()\n            .toPromise()\n            .then(res => {\n              console.log(res);\n              this.candidateService.candidate = res;\n              Redirection.profileByStep(res.currentStep);\n            });\n          } else {\n            Redirection.candidateDashboard();\n          }\n        } else {\n          Redirection.dashboard();\n        }\n      });\n    }\n    else {\n      Redirection.login();\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private authService: AuthService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init forgot password form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, Validators.compose([Validators.required, Validators.email]))\n    });\n  }\n\n  /**\n   * forgot your password\n   */\n  onSave(): void {\n    this.authService.forgotPassword(this.form.value).subscribe((response: Response) => {\n      this.authService.fromPage = 'forgot-password';\n      this.authService.verificationEmail = this.form.get('email').value;\n      this.toastService.success(this.transService.translate(response.message));\n      Redirection.verification();\n    });\n  }\n\n}\n","export * from './account-type/account-type.component';\nexport * from './forgot-password/forgot-password.component';\nexport * from './reset-password/reset-password.component';\nexport * from './sign-in/sign-in.component';\nexport * from './sign-up/sign-up.component';\nexport * from './verification/verification.component';","export default \".other-choice .title {\\n  line-height: 0.5;\\n  text-align: center;\\n}\\n\\n.other-choice .title span {\\n  display: inline-block;\\n  position: relative;\\n}\\n\\n.other-choice .title span:before,\\n.other-choice .title span:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 5px;\\n  border-bottom: 1px solid #ccc;\\n  border-top: 1px solid #ccc;\\n  top: 0;\\n  width: 130px;\\n}\\n\\n.other-choice .title span:before {\\n  right: 100%;\\n  margin-right: 15px;\\n}\\n\\n.other-choice .title span:after {\\n  left: 100%;\\n  margin-left: 15px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy9yZWNydWl0ZXIvcmVjcnVpdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVEsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUExQjs7QUFIQTtFQU1RLHFCQUFxQjtFQUNyQixrQkFBa0I7QUFDMUI7O0FBUkE7O0VBV1EsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsNkJBQTZCO0VBQzdCLDBCQUEwQjtFQUMxQixNQUFNO0VBQ04sWUFBWTtBQUVwQjs7QUFuQkE7RUFvQlEsV0FBVztFQUNYLGtCQUFrQjtBQUcxQjs7QUF4QkE7RUF3QlEsVUFBVTtFQUNWLGlCQUFpQjtBQUl6QiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvcmVjcnVpdGVyL3JlY3J1aXRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vdGhlci1jaG9pY2Uge1xuICAgIC50aXRsZSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAwLjU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIH1cbiAgICAgIC50aXRsZSBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICBcbiAgICAgIH1cbiAgICAgIC50aXRsZSBzcGFuOmJlZm9yZSxcbiAgICAgIC50aXRsZSBzcGFuOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBoZWlnaHQ6IDVweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHdpZHRoOiAxMzBweDtcbiAgICAgIH1cbiAgICAgIC50aXRsZSBzcGFuOmJlZm9yZSB7XG4gICAgICAgIHJpZ2h0OiAxMDAlO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgICB9XG4gICAgICAudGl0bGUgc3BhbjphZnRlciB7XG4gICAgICAgIGxlZnQ6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICAgICAgfVxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ContactService } from 'src/app/core/services/crud/contact.service';\nimport { Contact } from 'src/app/core/models/classes';\nimport { Redirection } from 'src/app/core/utils';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\n\n@Component({\n  selector: 'app-recruiter',\n  templateUrl: './recruiter.component.html',\n  styleUrls: ['./recruiter.component.scss']\n})\nexport class RecruiterComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private contactService: ContactService, private authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * init contact form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      companyName: new FormControl(null, Validators.required),\n      function: new FormControl(null, Validators.required),\n      fullName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      email: new FormControl(null, Validators.compose([Validators.required, Validators.email])),\n      message: new FormControl(null, Validators.required)\n    });\n  }\n\n  /**\n   * contact\n   */\n  onSave() {\n    this.contactService.contact(this.form.value).subscribe(res => {\n      this.authService.fromPage = 'contact';\n      Redirection.congratulation();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatchPassword } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      password: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      confirmPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n    }, { validator: this.checkPasswords });\n  }\n\n  /**\n   * check match passwords\n   * @param group\n   */\n  checkPasswords(group: FormGroup): MatchPassword {\n    return group.controls.password.value === group.controls.confirmPassword.value ? null : { passwordsDoNotMatch: true };\n  }\n\n  /**\n   * reset password\n   */\n  onSave(): void {\n    this.authService.resetPassword(this.form.get('password').value).subscribe(res => {\n      this.toastService.success(this.transService.translate(res.message));\n      Redirection.login();\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Response, Auth } from 'src/app/core/models/interfaces';\nimport { Redirection } from 'src/app/core/utils';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Candidate } from 'src/app/core/models/classes';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n\n  visibility = false;\n\n  form: FormGroup;\n  code: string;\n\n  constructor(private authService: AuthService, private candidateService: CandidateService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init sign in form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, Validators.compose([Validators.required, Validators.email])),\n      password: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)]))\n    });\n  }\n\n  /**\n   * singn in\n   */\n  onSave(): void {\n    this.authService.signIn(this.form.value).subscribe((response: Auth) => {\n      if (Object.keys(response.user).length !== 0) {\n        this.candidateService.candidate = response.user as Candidate;\n        if (response.user.userRole === 'Candidate') {\n          if (!response.user || Object.keys(response.user).length === 0 || response.user.currentStep <= 6) {\n            this.authService.isLoggedIn()\n              .toPromise()\n              .then(res => {\n                console.log(res);\n                this.candidateService.candidate = res;\n                Redirection.profileByStep(res.currentStep);\n              });\n          } else {\n            Redirection.candidateDashboard();\n          }\n        } else {\n          Redirection.dashboard();\n        }\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { MatchPassword } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n\n  form: FormGroup;\n  constructor(private fb: FormBuilder, private authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  /**\n   * init sign up form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      email: new FormControl(null, Validators.compose([Validators.email, Validators.required])),\n      password: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      confirmPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n    }, { validator: this.checkPasswords });\n  }\n\n  /**\n   * check match passwords\n   * @param group\n   */\n  checkPasswords(group: FormGroup): MatchPassword {\n    return group.controls.password.value === group.controls.confirmPassword.value ? null : { passwordsDoNotMatch: true };\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    const value = this.form.value;\n    let getLocalEmail = localStorage.getItem('email');\n    if (getLocalEmail === value.email) {\n      Redirection.verification();\n    } else {\n      this.authService.signUp(value).subscribe(res => {\n        console.log(res);\n        this.authService.fromPage = 'sign-up';\n        this.authService.verificationEmail = value.email;\n        this.authService.signUpPassword = value.password;\n        localStorage.setItem('email', value.email);\n        Redirection.verification();\n      });\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvdmVyaWZpY2F0aW9uL3ZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\n\n@Component({\n  selector: 'app-verification',\n  templateUrl: './verification.component.html',\n  styleUrls: ['./verification.component.scss'],\n})\nexport class VerificationComponent implements OnInit {\n\n  form: FormGroup;\n  sendTimer = false;\n\n  constructor(public authService: AuthService, private toastService: ToastService) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.sendTimer = true;\n    }, 120000);\n  }\n\n  /**\n   * init verification form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      one: new FormControl(null, Validators.required),\n      two: new FormControl(null, Validators.required),\n      three: new FormControl(null, Validators.required),\n      four: new FormControl(null, Validators.required)\n    });\n  }\n\n  moveFocus(event, nextElement) {\n    if (event.code !== 'Backspace' && event.code !== 'Space' && event.code !== 'CapsLock' && event.code !== 'ShiftLeft'\n      && event.code !== 'ShiftRight' && event.keyCode !== 16 && event.keyCode !== 8)\n      nextElement.focus();\n  }\n\n  resendCode() {\n    if (this.authService.verificationEmail) {\n      this.authService.forgotPassword({ email: this.authService.verificationEmail }).subscribe((response: Response) => {\n        this.toastService.success('Le code a été bien renvoyé');\n        this.sendTimer = false;\n        setTimeout(() => {\n          this.sendTimer = true;\n        }, 120000);\n      });\n    }\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    let verificationCode = '';\n    Object.keys(this.form.value).forEach(key => {\n      verificationCode += this.form.get(key).value.toLowerCase();\n    });\n    if (this.authService.fromPage === 'sign-up') {\n      this.authService.verification({ verificationCode, email: this.authService.verificationEmail }).subscribe(res => {\n        Redirection.congratulation();\n      });\n    } else {\n      this.authService.verification({ verificationCode, email: this.authService.verificationEmail }).subscribe(res => {\n        this.authService.verificationCode = verificationCode;\n        Redirection.resetPassword();\n      });\n    }\n    localStorage.removeItem('email');\n  }\n\n}\n"]}