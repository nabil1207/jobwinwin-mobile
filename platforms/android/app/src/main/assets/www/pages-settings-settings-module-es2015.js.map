{"version":3,"sources":["./src/app/pages/settings/components/account/account.component.html","./src/app/pages/settings/components/entreprise/entreprise.component.html","./src/app/pages/settings/components/identity/identity.component.html","./src/app/pages/settings/components/settings/settings.component.html","./src/app/pages/settings/components/account/account.component.scss","./src/app/pages/settings/components/account/account.component.ts","./src/app/pages/settings/components/entreprise/entreprise.component.scss","./src/app/pages/settings/components/entreprise/entreprise.component.ts","./src/app/pages/settings/components/identity/identity.component.scss","./src/app/pages/settings/components/identity/identity.component.ts","./src/app/pages/settings/components/settings/settings.component.scss","./src/app/pages/settings/components/settings/settings.component.ts","./src/app/pages/settings/settings-routing.module.ts","./src/app/pages/settings/settings.module.ts"],"names":[],"mappings":"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","file":"pages-settings-settings-module-es2015.js","sourcesContent":["export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)='onSave()'>\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title>Compte</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Email <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" readonly></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Mot de passe actuel <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"password\\\" formControlName=\\\"currentPassword\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('currentPassword').invalid && (form.get('currentPassword').dirty || form.get('currentPassword').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Mot de passe <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"password\\\" formControlName=\\\"newPassword\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('newPassword').invalid && (form.get('newPassword').dirty || form.get('newPassword').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Confirmer le mot de passe <span class=\\\"required\\\">*</span>\\n                        </ion-label>\\n                        <ion-input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('confirmPassword').invalid && (form.get('confirmPassword').dirty || form.get('confirmPassword').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('confirmPassword').touched &&\\n                !form.get('confirmPassword').hasError('required') &&\\n                !form.get('confirmPassword').hasError('minlength') &&\\n                form.hasError('passwordsDoNotMatch')\\\" class=\\\"text-error\\\">\\n                    Les mots de passe ne correspondent pas.\\n                </small>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <!-- <ion-buttons slot=\\\"end\\\">\\n            <ion-button>\\n                Enregistrer\\n            </ion-button>\\n        </ion-buttons> -->\\n        <ion-title>Informations entreprise</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content\\\">\\n        <div class=\\\"page-content\\\">\\n            <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\">\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Nom de l’entreprise</mat-label>\\n                    <input type=\\\"type\\\" matInput value=\\\"Fairmont royal palm marrakech\\\" formControlName=\\\"name\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Nom du responsable</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"yasmine\\\" formControlName=\\\"managerLastName\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Prénom</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"jtioui\\\" formControlName=\\\"managerFirstName\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Titre</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"Hotellerie\\\" formControlName=\\\"title\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Adresse email</mat-label>\\n                    <input type=\\\"email\\\" matInput value=\\\"Fairmont.marrakaech@contact.com\\\" formControlName=\\\"email\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Adresse postale</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"40130\\\" formControlName=\\\"zipCode\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Ville / entreprise</mat-label>\\n                    <input type=\\\"text\\\" matInput formControlName=\\\"city\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Pays</mat-label>\\n                    <input type=\\\"text\\\" matInput formControlName=\\\"country\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>RC</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"7845103269\\\" formControlName=\\\"rc\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>IF</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"700364981\\\" formControlName=\\\"taxIdentification\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>ICE</mat-label>\\n                    <input type=\\\"text\\\" matInput value=\\\"145967236541208\\\" formControlName=\\\"ice\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Télephone portable</mat-label>\\n                    <input type=\\\"tel\\\" matInput value=\\\"555-555-1234\\\" formControlName=\\\"phoneNumber\\\">\\n                </mat-form-field>\\n\\n                <mat-form-field class=\\\"w-100\\\">\\n                    <mat-label>Secteur d’activité</mat-label>\\n                    <mat-select matNativeControl formControlName=\\\"activitySector\\\">\\n                        <mat-option *ngFor=\\\"let activitySector of globalService.activitySectors\\\" [value]=\\\"activitySector._id\\\"> \\n                            {{ activitySector.name }} \\n                        </mat-option>\\n                    </mat-select>\\n                </mat-form-field>\\n            </form>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"<form class=\\\"d-block\\\" [formGroup]=\\\"formRecruiter\\\" *ngIf=\\\"authService.user.role.name !== 'candidate'\\\" (ngSubmit)=\\\"onSave()\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!formRecruiter.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Identité</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <div class=\\\"d-block position-relative mr-auto pt-1\\\" *ngIf=\\\"authService.user.role.name !== 'candidate'\\\"\\n                    style=\\\"width: 120px\\\">\\n                    <img class=\\\"circle-image\\\"\\n                        [src]=\\\"authService.user.picture ? (('backend_url' | env) + this.authService.user.picture.name) : \\n                    (this.authService.user.civility === 'Mr' ? '/assets/img/male.svg' : '/assets/img/female.svg' )\\\" alt=\\\"profil\\\">\\n                    <div class=\\\"change-photo\\\" (click)=\\\"addImageAction()\\\">\\n                        <mat-icon style=\\\"color: #ffffff; position: absolute;top: 2px; left: 3px;\\\">edit</mat-icon>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Nom <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Prénom <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100 custom-input\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <!-- <span slot=\\\"start\\\" class=\\\"mr-1\\\" style=\\\"margin-top: 28px;\\\">+212 &nbsp;</span> -->\\n                        <ion-label position=\\\"floating\\\">Téléphone personnel (+212) </ion-label>\\n                        <ion-input type=\\\"tel\\\" formControlName=\\\"firstPhoneNumber\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"w-100 custom-input\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Téléphone professionnel (+212) </ion-label>\\n                        <ion-input type=\\\"tel\\\" formControlName=\\\"secondPhoneNumber\\\"></ion-input>\\n                    </ion-item>\\n                </div>\\n\\n                <div class=\\\"text-right mt-2\\\">\\n                    <ion-button type=\\\"submit\\\" [disabled]=\\\"!formRecruiter.valid\\\">\\n                        Enregistrer\\n                    </ion-button>\\n                </div>\\n\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\\n\\n<form class=\\\"d-block\\\" [formGroup]=\\\"formCandidate\\\" (ngSubmit)=\\\"onSave()\\\"\\n    *ngIf=\\\"authService.user.role.name === 'candidate'\\\">\\n    <ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons (click)=\\\"modalController.dismiss()\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <!-- <ion-buttons slot=\\\"end\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!formCandidate.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </ion-buttons> -->\\n            <ion-title>Identité</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n        <section class=\\\"steps-content\\\">\\n            <div class=\\\"page-content\\\">\\n\\n                <ng-container *ngIf=\\\"authService.user.role.name === 'candidate'\\\">\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Nom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n                        </ion-item>\\n                    </div>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('lastName').invalid && (formCandidate.get('lastName').dirty || formCandidate.get('lastName').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                    <div class=\\\"w-100\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Prénom <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\"></ion-input>\\n                        </ion-item>\\n                    </div>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('firstName').invalid && (formCandidate.get('firstName').dirty || formCandidate.get('firstName').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                    <ion-item class=\\\"custom-select w-100\\\">\\n                        <ion-label position=\\\"floating\\\">Sexe</ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"gender\\\">\\n                            <ion-select-option value=\\\"masculin\\\">Homme</ion-select-option>\\n                            <ion-select-option value=\\\"feminin\\\">Femme</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('gender').invalid && (formCandidate.get('gender').dirty || formCandidate.get('gender').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                    <div class=\\\"w-100 custom-input\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Téléphone (+212) <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"tel\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\n                        </ion-item>\\n                    </div>\\n\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"formCandidate.get('phoneNumber').invalid && (formCandidate.get('phoneNumber').dirty || formCandidate.get('phoneNumber').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n\\n                </ng-container>\\n\\n            </div>\\n            <div class=\\\"text-right mt-2\\\">\\n                <ion-button type=\\\"submit\\\" [disabled]=\\\"!formCandidate.valid\\\">\\n                    Enregistrer\\n                </ion-button>\\n            </div>\\n        </section>\\n    </ion-content>\\n</form>\";","export default \"<ion-header class=\\\"list-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar>\\n        <ion-buttons (click)=\\\"goBack()\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n            <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n        </ion-buttons>\\n        <ion-title>Paramètres</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"settings-content mb-3\\\">\\n        <div class=\\\"page-content\\\">\\n            <div class=\\\"d-block\\\">\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\" (click)=\\\"editEntreprise()\\\" *appHasPermission=\\\"['read_infos_company']\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Informations entreprise </ion-label>\\n                </ion-item>\\n\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\" (click)=\\\"openAccount()\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Compte </ion-label>\\n                </ion-item>\\n\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\" (click)=\\\"openIdentity()\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Identité </ion-label>\\n                </ion-item>\\n\\n                <ion-item class=\\\"ion-no-padding\\\" detail=\\\"true\\\">\\n                    <ion-label class=\\\"ml-3\\\"> Confidentialité </ion-label>\\n                </ion-item>\\n\\n                <div class=\\\"mt-3 text-center\\\">\\n                    <ion-button class=\\\"w-80\\\" color=\\\"primary\\\" (click)=\\\"authService.logout()\\\">Déconnexion</ion-button>\\n                </div>\\n                \\n            </div>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent {\n\n  form: FormGroup;\n\n  constructor(public modalController: ModalController, private fb: FormBuilder,\n    private authService: AuthService, private toastService: ToastService, private transService: TransService) {\n    this.initForm();\n  }\n\n  ionViewDidEnter(): void {\n  }\n\n  /**\n   * init Form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      email: new FormControl(this.authService.user.email, Validators.compose([Validators.required, Validators.email])),\n      currentPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      newPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n      confirmPassword: new FormControl(null, Validators.compose([Validators.required, Validators.minLength(5)])),\n    }, { validator: this.checkPasswords });\n  }\n\n  /**\n   * check match passwords\n   * @param group\n   */\n  checkPasswords(group: FormGroup) {\n    return group.controls.newPassword.value === group.controls.confirmPassword.value ? null : { passwordsDoNotMatch: true };\n  }\n\n  /**\n   * update profile infos\n   */\n  onSave() {\n    let value = this.form.value;\n    delete value['confirmPassword'];\n    this.authService.updateProfile(value).subscribe((response: Response) => {\n      console.log(response.message);\n      this.toastService.success(this.transService.translate(response.message));\n      this.modalController.dismiss();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvZW50cmVwcmlzZS9lbnRyZXByaXNlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\n\n@Component({\n  selector: 'app-entreprise',\n  templateUrl: './entreprise.component.html',\n  styleUrls: ['./entreprise.component.scss']\n})\nexport class EntrepriseComponent {\n\n  form: FormGroup;\n\n  constructor(public modalController: ModalController, private authService: AuthService,\n    public globalService: GlobalService) {\n    this.initForm();\n    console.log(this.authService.user.company.phoneNumber);\n  }\n\n  ionViewDidEnter(): void { }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      name: new FormControl({ value: this.authService.user.company.name, disabled: true }),\n      managerFirstName: new FormControl({ value: this.authService.user.company.managerFirstName, disabled: true }),\n      managerLastName: new FormControl({ value: this.authService.user.company.managerLastName, disabled: true }),\n      title: new FormControl({ value: this.authService.user.company.title, disabled: true }),\n      email: new FormControl({ value: this.authService.user.company.email, disabled: true }),\n      zipCode: new FormControl({ value: this.authService.user.company.zipCode, disabled: true }),\n      city: new FormControl({ value: this.authService.user.company.city, disabled: true }),\n      country: new FormControl({ value: this.authService.user.company.country, disabled: true }),\n      rc: new FormControl({ value: this.authService.user.company.rc, disabled: true }),\n      taxIdentification: new FormControl({ value: this.authService.user.company.taxIdentification, disabled: true }),\n      ice: new FormControl({ value: this.authService.user.company.ice, disabled: true }),\n      phoneNumber: new FormControl({ value: this.authService.user.company.phoneNumber, disabled: true }),\n      activitySector: new FormControl({ value: this.authService.user.company.activitySector, disabled: true })\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvaWRlbnRpdHkvaWRlbnRpdHkuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { ActionSheetController, LoadingController, ModalController } from '@ionic/angular';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { RecruiterService } from 'src/app/core/services/crud/recruiter.service';\nimport { Subscription } from 'rxjs';\nimport { Recruiter } from 'src/app/core/models/classes';\nimport { PictureUtilsService } from 'src/app/core/services/global/picture-utils.service';\nimport { FileService } from 'src/app/core/services/crud/file.service';\n\n@Component({\n  selector: 'app-identity',\n  templateUrl: './identity.component.html',\n  styleUrls: ['./identity.component.scss']\n})\nexport class IdentityComponent implements OnInit, OnDestroy {\n\n  formCandidate: FormGroup;\n  formRecruiter: FormGroup;\n  hasChanged = false;\n  subscription: Subscription;\n  value = { file: null, type: 'photo' };\n\n  constructor(public modalController: ModalController, public authService: AuthService,\n    private toastService: ToastService, private transService: TransService, public recruiterService: RecruiterService,\n    private actionSheetController: ActionSheetController, private loadingController: LoadingController,\n    private pictureUtilsService: PictureUtilsService, private zone: NgZone, private fileService: FileService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.recruiterService.recruiter.subscribe((recruiter: Recruiter) => {\n      console.log(this.authService.user);\n      if (recruiter) {\n        console.log(recruiter.getValues());\n        this.value = { file: recruiter.picture ? recruiter.picture : null, type: 'edit-image' };\n      }\n    });\n  }\n\n  async addImageAction() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Image',\n      cssClass: 'my-actionSheet',\n      buttons: [\n        {\n          text: 'Camera',\n          icon: 'camera',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromCamera().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    this.authService.user.picture = res.file;\n                    this.recruiterService.updatePicture({\n                      picture: res.file\n                    }).subscribe(response => {\n                      this.authService.user.picture = res.file;\n                      this.toastService.success(this.transService.translate('picture_updated'));\n                    });\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              error => {\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        },\n        {\n          text: 'Gallery',\n          icon: 'image',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromGallery().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    this.recruiterService.updatePicture({\n                      picture: res.file\n                    }).subscribe(response => {\n                      this.authService.user.picture = res.file;\n                      this.toastService.success(this.transService.translate('picture_updated'));\n                    });\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              error => {\n                alert(error);\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  ionViewDidEnter(): void {\n  }\n\n  /**\n   * init form\n   */\n  private initForm() {\n    if (this.authService.user.role.name === 'recruiter' || this.authService.user.role.name === 'Responsable délégué' || this.authService.user.role.name === 'Responsable principale') {\n      this.formRecruiter = new FormGroup({\n        firstName: new FormControl(this.authService.user.firstName, Validators.required),\n        lastName: new FormControl(this.authService.user.lastName, Validators.required),\n        firstPhoneNumber: new FormControl(this.authService.user['firstPhoneNumber']),\n        secondPhoneNumber: new FormControl(this.authService.user['secondPhoneNumber'])\n      });\n    } else if (this.authService.user.role.name === 'candidate') {\n      this.formCandidate = new FormGroup({\n        firstName: new FormControl(this.authService.user.firstName, Validators.required),\n        lastName: new FormControl(this.authService.user.lastName, Validators.required),\n        email: new FormControl(this.authService.user.email),\n        gender: new FormControl(this.authService.user['gender'], Validators.required),\n        phoneNumber: new FormControl(this.authService.user.phoneNumber, Validators.required),\n      });\n    }\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    if (this.authService.user.role.name === 'candidate') {\n      console.log(this.formCandidate.value);\n      this.authService.updateIdentity(this.formCandidate.value).subscribe((response: Response) => {\n        this.authService.user = Object.assign(this.authService.user, this.formCandidate.value);\n        this.authService.user = Object.assign(this.authService.user, this.formCandidate.value);\n        this.toastService.success(this.transService.translate(response.message));\n        this.modalController.dismiss();\n      });\n    }\n    else {\n      console.log(this.formRecruiter.value);\n      this.authService.updateIdentity(this.formRecruiter.value).subscribe((response: Response) => {\n        this.toastService.success(this.transService.translate(response.message));\n        this.modalController.dismiss();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmdzL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { AccountComponent } from '../account/account.component';\nimport { EntrepriseComponent } from '../entreprise/entreprise.component';\nimport { IdentityComponent } from '../identity/identity.component';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {\n\n  constructor(public modalController: ModalController, public authService: AuthService) { }\n\n  ionViewDidEnter(): void {\n  }\n\n  async openAccount() {\n    const modal = await this.modalController.create({\n      component: AccountComponent\n    });\n    return await modal.present();\n  }\n\n  async openIdentity() {\n    const modal = await this.modalController.create({\n      component: IdentityComponent\n    });\n    return await modal.present();\n  }\n\n  async editEntreprise() {\n    const modal = await this.modalController.create({\n      component: EntrepriseComponent\n    });\n    return await modal.present();\n  }\n\n  /**\n   * go back\n   */\n  goBack() {\n    if (this.authService.user.role.name === 'candidate') {\n      Redirection.candidateDashboard();\n    } else {\n      Redirection.dashboard();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsComponent } from './components/settings/settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AccountComponent } from './components/account/account.component';\nimport { IdentityComponent } from './components/identity/identity.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { EntrepriseComponent } from './components/entreprise/entreprise.component';\n\n\n@NgModule({\n  declarations: [SettingsComponent, AccountComponent, IdentityComponent, EntrepriseComponent],\n  imports: [\n    SharedModule,\n    SettingsRoutingModule\n  ]\n})\nexport class SettingsModule { }\n"],"sourceRoot":"webpack:///"}