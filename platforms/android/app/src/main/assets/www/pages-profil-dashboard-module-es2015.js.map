{"version":3,"sources":["./src/app/pages/profil/components/add-profil/add-profil.component.html","./src/app/pages/profil/components/experience/experience.component.html","./src/app/pages/profil/components/final-state/final-state.component.html","./src/app/pages/profil/components/info-plus/info-plus.component.html","./src/app/pages/profil/components/job-info/job-info.component.html","./src/app/pages/profil/components/main/main.component.html","./src/app/pages/profil/components/personal-info/personal-info.component.html","./src/app/pages/profil/components/preview-profil/preview-profil.component.html","./src/app/pages/profil/components/upload-video/upload-video.component.html","./src/app/pages/profil/components/values/values.component.html","./src/app/pages/profil/components/add-profil/add-profil.component.scss","./src/app/pages/profil/components/add-profil/add-profil.component.ts","./src/app/pages/profil/components/experience/experience.component.scss","./src/app/pages/profil/components/experience/experience.component.ts","./src/app/pages/profil/components/final-state/final-state.component.scss","./src/app/pages/profil/components/final-state/final-state.component.ts","./src/app/pages/profil/components/info-plus/info-plus.component.scss","./src/app/pages/profil/components/info-plus/info-plus.component.ts","./src/app/pages/profil/components/job-info/job-info.component.scss","./src/app/pages/profil/components/job-info/job-info.component.ts","./src/app/pages/profil/components/main/main.component.scss","./src/app/pages/profil/components/main/main.component.ts","./src/app/pages/profil/components/personal-info/personal-info.component.scss","./src/app/pages/profil/components/personal-info/personal-info.component.ts","./src/app/pages/profil/components/preview-profil/preview-profil.component.scss","./src/app/pages/profil/components/preview-profil/preview-profil.component.ts","./src/app/pages/profil/components/upload-video/upload-video.component.scss","./src/app/pages/profil/components/upload-video/upload-video.component.ts","./src/app/pages/profil/components/values/values.component.scss","./src/app/pages/profil/components/values/values.component.ts","./src/app/pages/profil/dashboard-routing.module.ts","./src/app/pages/profil/dashboard.module.ts"],"names":[],"mappings":"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","file":"pages-profil-dashboard-module-es2015.js","sourcesContent":["export default \"<div appScrollToTop>\\n  <form class=\\\"d-block\\\">\\n    <div class=\\\"text-center mt-3\\\">\\n      <h1 class=\\\"title\\\">Ajouter votre meilleure photo <br> de profil ! </h1>\\n      <img class=\\\"circle-image mt-3\\\"\\n        [src]=\\\"authService.user.picture ? (('backend_url' | env) + authService.user.picture.name) : '/assets/img/default-image.svg'\\\"\\n        alt=\\\"Add Photo\\\" (click)=\\\"addImageAction()\\\">\\n    </div>\\n  \\n    <div class=\\\"mt-3 text-center\\\">\\n      <ion-button class=\\\"w-80\\\" color=\\\"primary\\\" (click)=\\\"onSave()\\\">\\n        Continuez\\n      </ion-button>\\n    </div>\\n  </form>\\n</div>\";","export default \"<div appScrollToTop>\\n    <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n        <div formArrayName=\\\"experiences\\\">\\n            <ng-container *ngFor=\\\"let experience of form.get('experiences')['controls']; let i=index; let last=last;\\\"\\n                [formGroupName]=\\\"i\\\">\\n                <hr class=\\\"border-bottom\\\" *ngIf=\\\"i>0\\\">\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Emploi occupé <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"job\\\"></ion-input>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('experiences')['controls'][i].get('job').invalid &&\\n                        form.get('experiences')['controls'][i].get('job').errors.required && (form.get('experiences')['controls'][i].get('job').dirty || form.get('experiences')['controls'][i].get('job').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-select\\\">\\n                        <ion-label position=\\\"floating\\\">Fonction <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"function\\\">\\n                            <ion-select-option *ngFor=\\\"let item of globalService.functions\\\" [value]=\\\"item._id\\\">\\n                                {{item.name}}\\n                            </ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('experiences')['controls'][i].get('function').invalid && (form.get('experiences')['controls'][i].get('function').dirty || form.get('experiences')['controls'][i].get('function').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <div class=\\\"w-100\\\">\\n                            <ion-item class=\\\"custom-datetime\\\">\\n                                <ion-label position=\\\"floating\\\">Date debut <span class=\\\"required\\\">*</span></ion-label>\\n                                <ion-datetime placeholder=\\\"De\\\" formControlName=\\\"startedDate\\\">\\n                                </ion-datetime>\\n                            </ion-item>\\n                            <small class=\\\"text-error\\\"\\n                                *ngIf=\\\"form.get('experiences')['controls'][i].get('startedDate').invalid && (form.get('experiences')['controls'][i].get('startedDate').dirty || form.get('experiences')['controls'][i].get('startedDate').touched) \\\">\\n                                Champ obligatoire\\n                            </small>\\n                        </div>\\n                    </div>\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n\\n                        <div class=\\\"w-100\\\">\\n                             \\n                            <ion-item class=\\\"custom-datetime\\\" *ngIf=\\\"inWork[i]\\\">\\n                                <ion-label position=\\\"floating\\\">Date fin</ion-label>\\n                                <ion-datetime placeholder=\\\"À\\\" formControlName=\\\"endDate\\\"></ion-datetime>\\n                            </ion-item> \\n                             <ion-item class=\\\"custom-static-input\\\" *ngIf=\\\"!inWork[i]\\\">\\n                                <ion-label position=\\\"floating\\\">Date fin</ion-label>\\n                                <ion-input value=\\\"Aujourd’hui\\\" readonly></ion-input>\\n                            </ion-item>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <small class=\\\"text-error\\\" *ngIf=\\\"\\n                form.get('experiences')['controls'][i].get('startedDate').touched && \\n                form.get('experiences')['controls'][i].get('endDate').touched &&\\n                form.get('experiences')['controls'][i].hasError('dateError')\\\">\\n                    Date fin doit être supérieur de la date debut\\n                </small>\\n\\n                <div>\\n                    <ion-item class=\\\"custom-checkbox\\\" lines=\\\"none\\\">\\n                        <ion-label class=\\\"ml-1\\\">J’occupe actuellement ce poste</ion-label>\\n                        <ion-checkbox class=\\\"ion-no-margin\\\" color=\\\"primary\\\" slot=\\\"start\\\"\\n                          [checked]=\\\"!inWork[i]\\\" (ionChange)=\\\"inWorkChange(i, $event)\\\">\\n                        </ion-checkbox>\\n                    </ion-item>\\n                </div>\\n\\n                <!-- <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('experiences')['controls'][i].get('endDate').invalid || inWork\\\">\\n                    Veuillez préciser si vous étes en cours de cette experience ou bien de mettre une date limite.\\n                </small> -->\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Entreprise <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"company\\\"></ion-input>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('experiences')['controls'][i].get('company').invalid && (form.get('experiences')['controls'][i].get('company').dirty || form.get('experiences')['controls'][i].get('company').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-select\\\">\\n                        <ion-label position=\\\"floating\\\">Secteur d’activité <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                            formControlName=\\\"activitySector\\\">\\n                            <ion-select-option *ngFor=\\\"let item of globalService.activitySectors\\\" [value]=\\\"item._id\\\">\\n                                {{item.name}}\\n                            </ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('experiences')['controls'][i].get('activitySector').invalid && (form.get('experiences')['controls'][i].get('activitySector').dirty || form.get('experiences')['controls'][i].get('activitySector').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Lieu <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('experiences')['controls'][i].get('location').invalid && (form.get('experiences')['controls'][i].get('location').dirty || form.get('experiences')['controls'][i].get('location').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div class=\\\"text-right mt-1\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline-danger ml-30\\\" color=\\\"danger\\\"\\n                        *ngIf=\\\"form.controls['experiences']['controls'].length > 1\\\"\\n                        (click)=\\\"removeField(i, 'experiences')\\\">\\n                        Supprimer\\n                    </ion-button>\\n                </div>\\n            </ng-container>\\n            <div class=\\\"text-left mt-1\\\">\\n                <ion-button fill=\\\"outline\\\" class=\\\"btn-outline\\\" color=\\\"primary\\\" (click)=\\\"addField('experiences')\\\"\\n                    [disabled]=\\\"!form.controls['experiences'].valid\\\">\\n                    <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                    Ajouter une expérience\\n                </ion-button>\\n            </div>\\n\\n        </div>\\n\\n        <ion-item class=\\\"custom-select w-100 mt-1\\\">\\n            <ion-label position=\\\"floating\\\">Niveau d'études le plus élevé <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                formControlName=\\\"levelOfStudies\\\">\\n                <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                    {{item.name}}</ion-select-option>\\n            </ion-select>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('levelOfStudies').invalid && (form.get('levelOfStudies').dirty || form.get('levelOfStudies').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </ion-item>\\n\\n        <div formArrayName=\\\"trainings\\\">\\n\\n            <ng-container *ngFor=\\\"let training of form.get('trainings')['controls']; let i=index; let last=last;\\\"\\n                [formGroupName]=\\\"i\\\">\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">Intitulé de la formation <span class=\\\"required\\\">*</span>\\n                        </ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('trainings')['controls'][i].get('name').invalid && (form.get('trainings')['controls'][i].get('name').dirty || form.get('trainings')['controls'][i].get('name').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <ion-item class=\\\"custom-select w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Niveau d'études <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"studyLevel\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.levelOfStudies\\\" [value]=\\\"item._id\\\">\\n                            {{item.name}}</ion-select-option>\\n                    </ion-select>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('trainings')['controls'][i].get('studyLevel').invalid && (form.get('trainings')['controls'][i].get('studyLevel').dirty || form.get('trainings')['controls'][i].get('studyLevel').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </ion-item>\\n\\n\\n                <ion-item class=\\\"custom-select w-100\\\">\\n                    <ion-label position=\\\"floating\\\">Type de formation <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"typeOfTraining\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.typeOfTrainings\\\" [value]=\\\"item._id\\\">\\n                            {{item.name}}</ion-select-option>\\n                    </ion-select>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('trainings')['controls'][i].get('typeOfTraining').invalid && (form.get('trainings')['controls'][i].get('typeOfTraining').dirty || form.get('trainings')['controls'][i].get('typeOfTraining').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </ion-item>\\n\\n                <div class=\\\"w-100\\\">\\n                    <ion-item class=\\\"custom-input\\\">\\n                        <ion-label position=\\\"floating\\\">École <span class=\\\"required\\\">*</span></ion-label>\\n                        <ion-input type=\\\"text\\\" formControlName=\\\"school\\\"></ion-input>\\n                    </ion-item>\\n                    <small class=\\\"text-error\\\"\\n                        *ngIf=\\\"form.get('trainings')['controls'][i].get('school').invalid && (form.get('trainings')['controls'][i].get('school').dirty || form.get('trainings')['controls'][i].get('school').touched) \\\">\\n                        Champ obligatoire\\n                    </small>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-datetime w-100\\\">\\n                            <ion-label position=\\\"floating\\\">Année d’obtention <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-datetime placeholder=\\\"De\\\" displayFormat=\\\"YYYY\\\" pickerFormat=\\\"YYYY\\\"\\n                                formControlName=\\\"yearOfGraduation\\\">\\n                            </ion-datetime>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('yearOfGraduation').invalid && (form.get('trainings')['controls'][i].get('yearOfGraduation').dirty || form.get('trainings')['controls'][i].get('yearOfGraduation').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                    <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                        <ion-item class=\\\"custom-input\\\">\\n                            <ion-label position=\\\"floating\\\">Lieu <span class=\\\"required\\\">*</span></ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n                        </ion-item>\\n                        <small class=\\\"text-error\\\"\\n                            *ngIf=\\\"form.get('trainings')['controls'][i].get('location').invalid && (form.get('trainings')['controls'][i].get('location').dirty || form.get('trainings')['controls'][i].get('location').touched) \\\">\\n                            Champ obligatoire\\n                        </small>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\\\"text-right mt-1\\\">\\n                    <ion-button fill=\\\"outline\\\" class=\\\"btn-outline-danger ml-30\\\" color=\\\"danger\\\"\\n                        *ngIf=\\\"form.controls['trainings']['controls'].length > 1\\\" (click)=\\\"removeField(i, 'trainings')\\\">\\n                        Supprimer\\n                    </ion-button>\\n                </div>\\n            </ng-container>\\n            <div class=\\\"text-left mt-1\\\">\\n                <ion-button fill=\\\"outline\\\" class=\\\"btn-outline\\\" color=\\\"primary\\\"\\n                    [disabled]=\\\"!form.controls.trainings || !form.controls.trainings.valid\\\"\\n                    (click)=\\\"addField('trainings')\\\">\\n                    <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n                    Ajouter une formation\\n                </ion-button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"mt-2 mb-3 text-center\\\">\\n            <ion-button type=\\\"submit\\\" class=\\\"w-80\\\" color=\\\"primary\\\">\\n                Continuez\\n            </ion-button>\\n        </div>\\n    </form>\\n</div>\";","export default \"<div class=\\\"d-block\\\" appScrollToTop>\\n\\n    <div class=\\\"text-center mt-2\\\" *ngIf=\\\"(candidateService.percentage | async | number: '1.0-0')\\\">\\n        <p>\\n            Votre profil est complet à  {{ candidateService.percentage | async | number: '1.0-0' }} %.<br>\\n            Vous pouvez désormais swiper et rencontrer des recruteurs! \\n        </p>\\n    </div>\\n\\n    <div class=\\\"text-center mt-1\\\">\\n        <p class=\\\"px-0\\\">Complétez votre profil pour mieux matcher avec les recruteurs.</p>\\n        <p class=\\\"px-0\\\">Avec jobwinwin trouver le job qui vous correspond ! </p>\\n    </div>\\n\\n    <!-- <div class=\\\"progressbar mt-3\\\">\\n        <div class=\\\"porcent\\\" [ngStyle]=\\\"{'width': (candidateService.percentage | async | number: '1.0-0') + '%'}\\\">\\n            {{ candidateService.percentage | async | number: '1.0-0' }} %\\n        </div>\\n    </div> -->\\n\\n   \\n\\n    <div class=\\\"mt-3 text-center\\\">\\n        <ion-button class=\\\"w-80\\\" color=\\\"primary\\\" (click)=\\\"previewProfil()\\\">\\n            Prévisualisez votre profil\\n        </ion-button>\\n    </div>\\n\\n    <div class=\\\"mt-1 text-center\\\">\\n        <ion-button class=\\\"btn-win w-80\\\" color=\\\"primary\\\" (click)=\\\"onClear()\\\">\\n            <img src=\\\"./assets/icon/win-btn.svg\\\" alt=\\\"\\\">\\n        </ion-button>\\n    </div>\\n\\n</div>\\n\";","export default \"<div appScrollToTop>\\n    <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n        <div formGroupName=\\\"languages\\\">\\n            <div class=\\\"mt-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n    \\n                <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\" tabindex=\\\"0\\\">\\n                    <ion-label position=\\\"floating\\\">Langue</ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"language\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.languages | languages:languagesList\\\"\\n                            [value]=\\\"item._id\\\">\\n                            {{item.name}}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n    \\n                <ion-item class=\\\"custom-select w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\" tabindex=\\\"1\\\">\\n                    <ion-label position=\\\"floating\\\">Niveau de langue</ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"languageLevel\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.languagesLevels\\\" [value]=\\\"item._id\\\">\\n                            {{item.name}}\\n                        </ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n    \\n            </div>\\n            <small class=\\\"text-error\\\" *ngIf=\\\"languagesList <= 0\\\">\\n                Veuillez renseigner au moins une valeur et cliquer sur ajouter\\n            </small> \\n        </div>  \\n    \\n        <div class=\\\"mt-1 text-left\\\">\\n            <ion-button fill=\\\"outline\\\" class=\\\"btn-outline w-40\\\" color=\\\"primary\\\" tabindex=\\\"3\\\"\\n                [disabled]=\\\"!form.get('languages').get('language').value || !form.get('languages').get('languageLevel').value\\\"\\n                (click)=\\\"addLanguage()\\\">\\n                Ajouter\\n                <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n        </div>\\n        <div class=\\\"mb-1 mt-1\\\">\\n            <ul class=\\\"customList\\\">\\n                <li *ngFor=\\\"let item of languagesList;let i =index;\\\">\\n                    <span class=\\\"text-primary text-left\\\">{{ item.language.name }} : {{ item.languageLevel.name }}</span>\\n                    <mat-icon class=\\\"cursor-pointer btn-round vertical-align ml-1\\\" (click)=\\\"deleteLanguage(i)\\\">\\n                        close</mat-icon><br>\\n                </li>\\n            </ul>\\n        </div>\\n    \\n        <div class=\\\"mb-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\"\\n            formGroupName=\\\"programingLanguages\\\">\\n            <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <app-multi-select label=\\\"Langages informatiques\\\" collection=\\\"programmingLanguages\\\"\\n                    formControlName=\\\"language\\\"></app-multi-select>\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.language').value?.length <= 0\\\">\\n                    Champ obligatoire\\n                </small>\\n            </div>\\n            <div fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <app-multi-select label=\\\"Logiciels informatiques\\\" collection=\\\"logiciels\\\" formControlName=\\\"logiciel\\\">\\n                </app-multi-select>\\n                <small class=\\\"text-error\\\" *ngIf=\\\"form.get('programingLanguages.logiciel').value?.length <= 0\\\">\\n                    Champ obligatoire\\n                </small>\\n            </div>\\n        </div>\\n    \\n        <app-file-uploader [data]=\\\"{ file: candidateService.candidate['cv'], type: 'simple-cv' }\\\"\\n            (fileChanges)=\\\"fileChanges($event)\\\">\\n        </app-file-uploader>\\n    \\n        <div class=\\\"custom-input-icon\\\">\\n            <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/website-input.svg\\\"></ion-icon>\\n            <mat-form-field class=\\\"ml-1 w-90\\\">\\n                <mat-label>Site internet</mat-label>\\n                <input matInput placeholder=\\\"\\\" formControlName=\\\"webSite\\\">\\n                <span matPrefix>www.</span>\\n            </mat-form-field>\\n        </div>\\n        \\n        <div class=\\\"custom-input-icon\\\">\\n            <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/blogger-input.svg\\\"></ion-icon>\\n            <mat-form-field class=\\\"ml-1 w-90\\\">\\n                <mat-label>Blog</mat-label>\\n                <input matInput placeholder=\\\"\\\" formControlName=\\\"blog\\\">\\n                <span matPrefix>www.</span>\\n            </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"custom-input-icon\\\">\\n            <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/linkedin-input.svg\\\"></ion-icon>\\n            <mat-form-field class=\\\"ml-1 w-90\\\">\\n                <mat-label>Profil linkedin</mat-label>\\n                <input matInput placeholder=\\\"Insérer le lien de votre profil Linkedin\\\" formControlName=\\\"linkedin\\\">\\n            </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"custom-input-icon\\\">\\n            <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/instagram-input.svg\\\"></ion-icon>\\n            <mat-form-field class=\\\"ml-1 w-90\\\">\\n                <mat-label>Instagram</mat-label>\\n                <input matInput placeholder=\\\"\\\" formControlName=\\\"instagram\\\">\\n                <span matPrefix>@</span>\\n            </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"custom-input-icon\\\">\\n            <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/twitter-input.svg\\\"></ion-icon>\\n            <mat-form-field class=\\\"ml-1 w-90\\\">\\n                <mat-label>Twitter</mat-label>\\n                <input matInput placeholder=\\\"\\\" formControlName=\\\"twitter\\\">\\n                <span matPrefix>@</span>\\n            </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"custom-input-icon\\\">\\n            <ion-icon class=\\\"align-middle\\\" src=\\\"./assets/icon/facebook-input.svg\\\"></ion-icon>\\n            <mat-form-field class=\\\"ml-1 w-90\\\">\\n                <mat-label>Facebook</mat-label>\\n                <input matInput placeholder=\\\"\\\" formControlName=\\\"facebook\\\">\\n            </mat-form-field>\\n        </div>\\n    \\n        <div class=\\\"mt-2 mb-3 text-center\\\">\\n            <ion-button type=\\\"submit\\\" class=\\\"w-80\\\" color=\\\"primary\\\" [disabled]=\\\"languagesList.length <= 0\\n            || form.get('programingLanguages.logiciel').value?.length <= 0\\n            || form.get('programingLanguages.language').value?.length <= 0 || !form.valid\\\">\\n            \\n                Continuez\\n            </ion-button>\\n        </div>\\n    \\n    </form>\\n</div>\";","export default \"<div appScrollToTop>\\n    <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n\\n        <div class=\\\"w-100\\\">\\n            <ion-item class=\\\"custom-input\\\">\\n                <ion-label position=\\\"floating\\\">Poste souhaité <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"searchedPost\\\"></ion-input>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('searchedPost').invalid && (form.get('searchedPost').dirty || form.get('searchedPost').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n\\n        <!-- <div class=\\\"mt-1\\\">\\n            <ng-multiselect-dropdown label=\\\"aaaaa\\\" [placeholder]=\\\"'Intitulés d\\\\'usage'\\\" [settings]=\\\"dropdownSettings\\\"\\n                [data]=\\\"globalService.usageTitles\\\" formControlName=\\\"usageTitles\\\"\\n                (onSelect)=\\\"onItemSelect($event)\\\" (onDeSelect)=\\\"OnItemDeSelect($event)\\\">\\n            </ng-multiselect-dropdown>\\n        </div> -->\\n\\n        <div>\\n            <app-multi-select label=\\\"Intitulés d'usage\\\" collection=\\\"usageTitles\\\" formControlName=\\\"usageTitles\\\">\\n            </app-multi-select>\\n            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('usageTitles').value?.length\\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n            <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <app-multi-select label=\\\"Type de contrat\\\" collection=\\\"contracts\\\" formControlName=\\\"contracts\\\">\\n                </app-multi-select>\\n                <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('contracts').value?.length\\\">\\n                    Veuillez choisir au moins un type de contrat.\\n                </small>\\n            </div>\\n            <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <ion-item class=\\\"custom-select\\\">\\n                    <ion-label position=\\\"floating\\\">Type de Poste <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                        formControlName=\\\"jobType\\\">\\n                        <ion-select-option *ngFor=\\\"let item of globalService.jobTypes\\\" [value]=\\\"item._id\\\">\\n                            {{item.name}}</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('jobType').invalid && (form.get('jobType').dirty || form.get('jobType').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"w-100\\\">\\n            <app-multi-select label=\\\"Fonction\\\" collection=\\\"functions\\\" formControlName=\\\"functions\\\"></app-multi-select>\\n            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('functions').value?.length\\\">\\n                Veuillez choisir au moins une fonction.\\n            </small>\\n        </div>\\n\\n        <div class=\\\"w-100\\\">\\n            <app-multi-select label=\\\"Secteur d’activité \\\" collection=\\\"activitySectors\\\" formControlName=\\\"activitySector\\\">\\n            </app-multi-select>\\n            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('activitySector').value?.length\\\">\\n                Veuillez choisir au moins un secteur d’activité.\\n            </small>\\n        </div>\\n\\n        <div class=\\\"w-100\\\">\\n            <ion-item class=\\\"custom-select w-100 \\\">\\n                <ion-label position=\\\"floating\\\">Mode de travail <span class=\\\"required\\\">*</span></ion-label>\\n                <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n                    formControlName=\\\"jobMode\\\">\\n                    <ion-select-option *ngFor=\\\"let item of globalService.jobModes\\\" [value]=\\\"item._id\\\">\\n                        {{item.name}}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <small class=\\\"text-error\\\"\\n                *ngIf=\\\"form.get('jobMode').invalid && (form.get('jobMode').dirty || form.get('jobMode').touched) \\\">\\n                Champ obligatoire\\n            </small>\\n        </div>\\n\\n        <div class=\\\"w-100\\\">\\n            <app-multi-select label=\\\"Lieu\\\" collection=\\\"locations\\\" formControlName=\\\"locations\\\"></app-multi-select>\\n            <small class=\\\"text-error\\\" *ngIf=\\\"!form.get('locations').value?.length\\\">\\n                Veuillez choisir au moins une ville.\\n            </small>\\n        </div>\\n\\n        <h4 class=\\\"pt-2\\\">Prétentions salariales (Dhs)</h4>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n            <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <ion-item class=\\\"custom-input\\\">\\n                    <ion-label position=\\\"floating\\\">À partir de <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMin\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('supposedSalaryMin').invalid && (form.get('supposedSalaryMin').dirty || form.get('supposedSalaryMin').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n            </div>\\n\\n            <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n                <ion-item class=\\\"custom-input\\\">\\n                    <ion-label position=\\\"floating\\\">Jusqu'à <span class=\\\"required\\\">*</span></ion-label>\\n                    <ion-input type=\\\"number\\\" formControlName=\\\"supposedSalaryMax\\\"></ion-input>\\n                </ion-item>\\n                <small class=\\\"text-error\\\"\\n                    *ngIf=\\\"form.get('supposedSalaryMax').invalid && (form.get('supposedSalaryMax').dirty || form.get('supposedSalaryMax').touched) \\\">\\n                    Champ obligatoire\\n                </small>\\n            </div>\\n\\n        </div>\\n        <small class=\\\"text-error\\\" *ngIf=\\\"form.get('supposedSalaryMax').touched && !form.get('supposedSalaryMax').hasError('required') \\n        && form.hasError('salaryErreur')\\\">\\n            Le salaire maximum doit être supérieur au salaire minimum\\n        </small>\\n\\n        <div class=\\\"mt-2 mb-3 text-center\\\">\\n            <ion-button type=\\\"submit\\\" class=\\\"w-80\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\n            || form.get('usageTitles').value?.length <= 0\\n            || form.get('contracts').value?.length <= 0\\n            || form.get('functions').value?.length <= 0\\n            || form.get('activitySector').value?.length <= 0\\n            || form.get('locations').value?.length <= 0\\n            \\\">\\n                Continuez\\n            </ion-button>\\n        </div>\\n    </form>\\n</div>\";","export default \"<ion-header class=\\\"steps-header ion-no-border\\\" mode=\\\"md\\\">\\n    <ion-toolbar class=\\\"steps-toolbar\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button class=\\\"roundbutton p-0\\\" (click)=\\\"back()\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"secondary\\\">\\n            <ion-button (click)=\\\"desconnect()\\\">\\n                <ion-icon src=\\\"./assets/icon/deconnexion-white.svg\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"page-title\\\">\\n            <h1 class=\\\"title mb-0\\\">{{pageTitle}}</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n    <div class=\\\"progressbar w-100\\\">\\n        <div class=\\\"porcent\\\" [ngStyle]=\\\"{'width': (candidateService.percentage | async | number: '1.0-0') + '%'}\\\">\\n            <div class=\\\"counter text-center\\\">\\n                {{ candidateService.percentage | async | number: '1.0-0' }} %\\n             </div>\\n        </div>\\n    </div>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"forms\\\">\\n    <section class=\\\"steps-content mt-1\\\">\\n        <div class=\\\"page-content\\\">\\n           <router-outlet></router-outlet>\\n        </div>\\n    </section>\\n</ion-content>\";","export default \"<div appScrollToTop>\\n  <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"100%\\\">\\n        <ion-item class=\\\"custom-input\\\">\\n          <ion-label position=\\\"floating\\\">Nom <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"lastName\\\"></ion-input>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('lastName').invalid && (form.get('lastName').dirty || form.get('lastName').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n        <ion-item class=\\\"custom-input\\\">\\n          <ion-label position=\\\"floating\\\">Prénom <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"firstName\\\"></ion-input>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('firstName').invalid && (form.get('firstName').dirty || form.get('firstName').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n        <ion-item class=\\\"custom-datetime\\\">\\n          <ion-label position=\\\"floating\\\">Date Naissance <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-datetime placeholder=\\\"Choissez votre date\\\" formControlName=\\\"birthday\\\">\\n          </ion-datetime>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('birthday').invalid && (form.get('birthday').dirty || form.get('birthday').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n        <ion-item class=\\\"custom-select\\\">\\n          <ion-label position=\\\"floating\\\">Sexe <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n            formControlName=\\\"gender\\\">\\n            <ion-select-option value=\\\"masculin\\\">Homme</ion-select-option>\\n            <ion-select-option value=\\\"feminin\\\">Femme</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('gender').invalid && (form.get('gender').dirty || form.get('gender').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n    </div>\\n\\n\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n        <div class=\\\"w-100 custom-input\\\">\\n          <ion-item class=\\\"custom-input\\\">\\n            <ion-label position=\\\"floating\\\">Téléphone (+212) <span class=\\\"required\\\">*</span></ion-label>\\n            <ion-input type=\\\"tel\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\n          </ion-item>\\n        </div>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('phoneNumber').invalid && (form.get('phoneNumber').dirty || form.get('phoneNumber').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n          <ion-label position=\\\"floating\\\">Disponiblité <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n            formControlName=\\\"availability\\\">\\n            <ion-select-option *ngFor=\\\"let item of globalService.availabilities\\\" [value]=\\\"item._id\\\">\\n              {{item.name}}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('availability').invalid && (form.get('availability').dirty || form.get('availability').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"100%\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n          <ion-label position=\\\"floating\\\">Nombre d’années d’experience <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n            formControlName=\\\"experienceYears\\\">\\n            <ion-select-option *ngFor=\\\"let item of globalService.experiences\\\" [value]=\\\"item._id\\\">\\n              {{item.name}}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('experienceYears').invalid && (form.get('experienceYears').dirty || form.get('experienceYears').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n    </div>\\n\\n    <ion-item class=\\\"custom-input w-100\\\">\\n      <ion-label position=\\\"floating\\\">Poste actuel <span class=\\\"required\\\">*</span></ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"currentJob\\\"></ion-input>\\n    </ion-item>\\n    <small class=\\\"text-error\\\"\\n      *ngIf=\\\"form.get('currentJob').invalid && (form.get('currentJob').dirty || form.get('currentJob').touched) \\\">\\n      Champ obligatoire\\n    </small>\\n\\n\\n    <ion-item class=\\\"custom-input w-100\\\">\\n      <ion-label position=\\\"floating\\\">Préciser salaire actuel (Dhs) <span class=\\\"required\\\">*</span></ion-label>\\n      <ion-input type=\\\"number\\\" formControlName=\\\"currentSalary\\\"></ion-input>\\n    </ion-item>\\n    <small class=\\\"text-error\\\"\\n      *ngIf=\\\"form.get('currentSalary').invalid && (form.get('currentSalary').dirty || form.get('currentSalary').touched) \\\">\\n      Champ obligatoire\\n    </small>\\n\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"20px\\\">\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n          <ion-label position=\\\"floating\\\">Niv. managérial <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n            formControlName=\\\"managerialLevel\\\">\\n            <ion-select-option *ngFor=\\\"let item of globalService.managerialLevels\\\" [value]=\\\"item._id\\\">\\n              {{item.name}}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('managerialLevel').invalid && (form.get('managerialLevel').dirty || form.get('managerialLevel').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n\\n      <div class=\\\"w-100\\\" fxLayout=\\\"column\\\" fxFlex.xs=\\\"45%\\\">\\n        <ion-item class=\\\"custom-select w-100\\\">\\n          <ion-label position=\\\"floating\\\">Effectif Géré <span class=\\\"required\\\">*</span></ion-label>\\n          <ion-select class=\\\"w-100\\\" ok-text=\\\"Ok\\\" cancel-text=\\\"Annuler\\\" placeholder=\\\"Sélectionner\\\"\\n            formControlName=\\\"effective\\\">\\n            <ion-select-option *ngFor=\\\"let item of globalService.effectives\\\" [value]=\\\"item._id\\\">\\n              {{item.name}}\\n            </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <small class=\\\"text-error\\\"\\n          *ngIf=\\\"form.get('effective').invalid && (form.get('effective').dirty || form.get('effective').touched) \\\">\\n          Champ obligatoire\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"w-100 mt-1\\\">\\n      <mat-form-field class=\\\"w-100\\\">\\n        <mat-label>Objectif <span class=\\\"required\\\">*</span></mat-label>\\n        <textarea matInput placeholder=\\\"Mission générale\\\" matTextareaAutosize matAutosizeMinRows=1 matAutosizeMaxRows=7\\n          formControlName=\\\"goal\\\"></textarea>\\n      </mat-form-field>\\n      <small class=\\\"text-error\\\"\\n        *ngIf=\\\"form.get('goal').invalid && (form.get('goal').dirty || form.get('goal').touched) \\\">\\n        Champ obligatoire\\n      </small>\\n    </div>\\n\\n    <div class=\\\"mt-3 text-center\\\">\\n      <ion-button type=\\\"submit\\\" class=\\\"w-80\\\" color=\\\"primary\\\" [disabled]=\\\"!form.valid\\\">\\n        Continuez\\n      </ion-button>\\n    </div>\\n\\n  </form>\\n</div>\";","export default \"<ion-content class=\\\"file-dashboard\\\">\\n    <ion-header class=\\\"ion-no-border py-2\\\" mode=\\\"md\\\">\\n        <ion-toolbar>\\n            <ion-buttons routerLink=\\\"/dashboard/profile/values\\\" routerDirection=\\\"root\\\" class=\\\"roundbutton\\\" slot=\\\"start\\\">\\n                <ion-icon src=\\\"./assets/icon/arrow-back.svg\\\"></ion-icon>\\n            </ion-buttons>\\n            <ion-title class=\\\"text-center\\\">{{ authService.user.firstName }} {{ authService.user.lastName }}</ion-title>\\n        </ion-toolbar>\\n        <div class=\\\"d-block text-center\\\">\\n            <img src=\\\"./assets/icon/space-title.svg\\\" alt=\\\"\\\">\\n            <p class=\\\"short-desc mb-0\\\">\\n                J’ai pu constater que nous avons fréquenté le même\\n                établissement. Ce serait un plaisir de pouvoir évoquer ce sujet et d’autres autour d’une\\n                activité.\\n            </p>\\n            <img src=\\\"./assets/icon/space-title.svg\\\" alt=\\\"\\\">\\n            <div class=\\\"profil-files\\\">\\n                <img src=\\\"./assets/img/female.svg\\\" alt=\\\"\\\" class=\\\"w-100\\\">\\n            </div>\\n        </div>\\n    </ion-header>\\n\\n    <ion-slides class=\\\"files-slide\\\">\\n        <ion-slide>\\n            <div class=\\\"position-relative mt-1 mb-3\\\">\\n                <button class=\\\"position-absolute arrow-right cursor-pointer bg-transparent\\\"><img\\n                        src=\\\"./assets/icon/arrow-right.svg\\\" alt=\\\"\\\"></button>\\n                <div class=\\\"custom-fields text-center\\\">\\n                    <span>{{ candidateService.candidate.currentJob }}</span>\\n                </div>\\n\\n                <div class=\\\"custom-fields text-center\\\">\\n                    <div class=\\\"d-inline w-40 text-center mr-1 mt-2\\\">{{ candidateService.candidate.currentLocation }}</div>\\n                    <div class=\\\"d-inline w-40 text-center mt-2\\\">{{ candidateService.candidate.experienceYears }} ans d’expérience</div>\\n                </div>\\n\\n                <h3 class=\\\"objectif\\\">OBJECTIFS ACTUELS</h3>\\n\\n                <div class=\\\"custom-fields text-center mt-2\\\">\\n                    <span>{{ candidateService.candidate.goal }} </span>\\n                </div>\\n                <div class=\\\"custom-fields text-center\\\">\\n                    <div class=\\\"d-inline w-40 text-center mr-1 mt-2\\\">{{ candidateService.candidate.location }}</div>\\n                    <div class=\\\"d-inline w-40 text-center\\\">{{ candidateService.candidate.supposedSalaryMax }} DH</div>\\n                </div>\\n            </div>\\n        </ion-slide>\\n\\n        <ion-slide class=\\\"mb-3\\\">\\n            <div class=\\\"position-relative mt-1 py-2\\\">\\n                <button class=\\\"position-absolute arrow-left cursor-pointer bg-transparent\\\"><img\\n                        src=\\\"./assets/icon/arrow-left.svg\\\" alt=\\\"\\\"></button>\\n                <button class=\\\"position-absolute arrow-right cursor-pointer bg-transparent\\\"><img\\n                        src=\\\"./assets/icon/arrow-right.svg\\\" alt=\\\"\\\"></button>\\n\\n                <h3 class=\\\"objectif\\\">CV- RÉSUMÉ</h3>\\n\\n                <div class=\\\"text-center mt-2\\\">\\n                    <img class=\\\"w-100\\\" src=\\\"./assets/img/default-video.svg\\\" alt=\\\"Add Video\\\">\\n                </div>\\n\\n                <div class=\\\"matching-card-details mt-2\\\" style=\\\"height: 50px;\\\">\\n                    <h3 class=\\\"title\\\">\\n                        <mat-icon>subject</mat-icon>\\n                        <span>CV</span>\\n                        <mat-icon class=\\\"float-right\\\">save_alt</mat-icon>\\n                    </h3>\\n                </div>\\n\\n                <div class=\\\"matching-card-details mt-2\\\">\\n                    <h3 class=\\\"title\\\">\\n                        <mat-icon>mediation</mat-icon>\\n                        <span>EXPÉRIENCE</span>\\n                    </h3>\\n                    <span class=\\\"desc\\\">\\n                        <ul class=\\\"list\\\">\\n                            <li>Actuellement : Directrice Générale</li>\\n                            <li>2005-2011 : Responsable de marketing</li>\\n                            <li>2000-2005 : Responsable commerciale.</li>\\n                        </ul>\\n                    </span>\\n                </div>\\n\\n                <div class=\\\"matching-card-details mt-2\\\">\\n                    <h3 class=\\\"title\\\">\\n                        <mat-icon>school</mat-icon>\\n                        <span>FORMATION</span>\\n                    </h3>\\n                    <span class=\\\"desc\\\">\\n                        <ul class=\\\"list\\\">\\n                            <li *ngFor=\\\"let item of candidate.candidate.trainings\\\">{{ item.yearOfGraduation }} : {{ item.studyLevel }} en {{ item.typeOfTraining }}</li>\\n                        </ul>\\n                    </span>\\n                </div>\\n\\n                <div class=\\\"matching-card-details mt-2\\\">\\n                    <h3 class=\\\"title\\\">\\n                        <mat-icon>g_translate</mat-icon>\\n                        <span>LANGUE</span>\\n                    </h3>\\n                    <span class=\\\"desc\\\">\\n                        <ul class=\\\"list\\\">\\n                            <li *ngFor=\\\"let item of candidate.languages\\\">{{ item.language }} : {{ item.languageLevel }}</li>\\n                        </ul>\\n                    </span>\\n                </div>\\n\\n            </div>\\n        </ion-slide>\\n\\n        <ion-slide>\\n            <div class=\\\"position-relative py-2 mt-1 mb-3\\\">\\n                <div class=\\\"d-block text-center\\\">\\n                    <h3 class=\\\"objectif\\\">MES COMPÉTENCES</h3>\\n                </div>\\n                <button class=\\\"position-absolute arrow-left cursor-pointer bg-transparent\\\"><img\\n                    src=\\\"./assets/icon/arrow-left.svg\\\" alt=\\\"\\\"></button>\\n\\n                <div class=\\\"matching-card-details\\\">\\n                    <div class=\\\"desc\\\">\\n                        <ul class=\\\"list\\\">\\n                            <li *ngFor=\\\"let item of candidate.skills\\\">\\n                                {{item.softSkill}}\\n                                <!-- <span class=\\\"float-right\\\">Expert</span> -->\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n\\n                <h3 class=\\\"objectif\\\">MES VALEURS</h3>\\n\\n                <div class=\\\"matching-card-details mt-2\\\">\\n                    <div class=\\\"desc\\\">\\n                        <ul class=\\\"list\\\">\\n                            <li *ngFor=\\\"let item of candidate.values\\\">{{ item.value }}</li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </ion-slide>\\n    </ion-slides>\\n\\n</ion-content>\";","export default \"<div appScrollToTop>\\n  <div class=\\\"text-center mt-2\\\">\\n    <h1 class=\\\"title\\\">Présentez vous en vidéo <br> aux recruteurs ! </h1>\\n  </div>\\n  <app-file-uploader [data]=\\\"value\\\" (fileChanges)=\\\"fileChanges($event)\\\"></app-file-uploader>\\n  <div class=\\\"mt-3 text-center\\\">\\n    <ion-button class=\\\"w-80\\\" color=\\\"primary\\\" (click)=\\\"onSave()\\\">Continuez\\n    </ion-button>\\n  </div>\\n</div>\";","export default \"<div appScrollToTop>\\n    <form class=\\\"d-block\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSave()\\\">\\n        <div class=\\\"text-center mt-2\\\">\\n            <p> Vos softskills sont très importants pour les recruteurs.\\n                Choisissez dans la liste les 5 softskills qui vous représentent le plus.\\n            </p>\\n        </div>\\n        <app-multi-select label=\\\"Mes soft skills\\\" [limit]=\\\"5\\\" collection=\\\"softSkills\\\" formControlName=\\\"skills\\\">\\n        </app-multi-select>\\n        <div class=\\\"text-center mt-2\\\">\\n            <p>En recrutement une valeur est parfois plus\\n                décisive qu’une compétence.\\n                Renforcer la qualité de votre profil en\\n                séléctionnant dans la liste les 6 valeurs qui vous\\n                correspondent</p>\\n        </div>\\n        <app-multi-select label=\\\"Mes valeurs\\\" [limit]=\\\"6\\\" collection=\\\"values\\\" formControlName=\\\"values\\\">\\n        </app-multi-select>\\n\\n        <div class=\\\"mt-2 text-center\\\">\\n            <ion-button type=\\\"submit\\\" class=\\\"w-80\\\" color=\\\"primary\\\"\\n                [disabled]=\\\"form.get('values').value?.length < 6 ||  form.get('skills').value?.length < 5 ? true : false\\\">\\n                Validez\\n            </ion-button>\\n        </div>\\n    </form>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL2FkZC1wcm9maWwvYWRkLXByb2ZpbC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { ActionSheetController, LoadingController } from '@ionic/angular';\nimport { ToastService } from 'src/app/core/services/addapters/toast.service';\nimport { FileService } from 'src/app/core/services/crud/file.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { TransService } from 'src/app/core/services/addapters/trans.service';\nimport { PictureUtilsService } from 'src/app/core/services/global/picture-utils.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Redirection, Helper } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-add-profil',\n  templateUrl: './add-profil.component.html',\n  styleUrls: ['./add-profil.component.scss'],\n})\nexport class AddProfilComponent implements OnInit {\n\n  hasChanged = false;\n  userPicture;\n  oldPercentage = 0;\n\n  constructor(public authService: AuthService, private actionSheetController: ActionSheetController, private loadingController: LoadingController,\n              private pictureUtilsService: PictureUtilsService, private zone: NgZone, private toastService: ToastService,\n              private fileService: FileService, public candidateService: CandidateService, private trans: TransService) { }\n\n  ngOnInit() {\n    const value = { picture: this.authService.user.picture };\n    this.oldPercentage = Helper.calculePercentage(value, 0, 1.96);\n  }\n\n  /**\n   * add image\n   */\n  async addImageAction() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Image',\n      // cssClass: 'my-actionSheet',\n      buttons: [\n        {\n          text: 'Camera',\n          icon: 'camera',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromCamera().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    this.candidateService.candidate['picture'] = res.file;\n                    this.authService.user.picture = res.file;\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              _error => {\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        },\n        {\n          text: 'Gallery',\n          icon: 'image',\n          handler: async () => {\n            let syncing = true;\n            setTimeout(() => {\n              if (syncing) {\n                syncing = false;\n                loading.dismiss();\n                this.toastService.error('Connection error');\n                return;\n              }\n            }, 30000);\n            const loading = await this.loadingController.create({});\n            await loading.present();\n            this.pictureUtilsService.uploadFromGallery().then(\n              ({ imageData }) => {\n                this.zone.run(() => {\n                  this.hasChanged = true;\n                  this.fileService.create(imageData, true).subscribe(res => {\n                    this.candidateService.candidate['picture'] = res.file;\n                    this.authService.user.picture = res.file;\n                  });\n                });\n                syncing = false;\n                loading.dismiss();\n              },\n              _error => {\n                alert(_error);\n                syncing = false;\n                loading.dismiss();\n              }\n            );\n            return syncing;\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  /**\n   * save picture\n   */\n  onSave() {\n    let value = { picture: this.authService.user.picture };\n    let percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    console.log('New percent : ', percentage);\n    this.candidateService.changeInfos(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2),\n      currentStep: 2\n    })).subscribe(res => {\n      console.log(res);\n      this.candidateService.candidate = res;\n      this.authService.user = res;\n      this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n      Redirection.jobInfo();\n    });\n    // if (this.authService.user.picture) {\n    //   let value = { picture: this.authService.user.picture };\n    //   let percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    //   console.log('New percent : ', percentage);\n    //   this.candidateService.changeInfos(Object.assign(value, {\n    //     percentage: (Math.round(percentage * 100) / 100).toFixed(2),\n    //     currentStep: 2\n    //   })).subscribe(res => {\n    //     console.log(res);\n    //     this.candidateService.candidate = res;\n    //     this.authService.user = res;\n    //     this.candidateService.setPercentage(this.candidateService.candidate.percentage);\n    //     Redirection.jobInfo();\n    //   });\n    // } else {\n    //   Redirection.jobInfo();\n    // }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL2V4cGVyaWVuY2UvZXhwZXJpZW5jZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, FormArray, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { DatePipe, formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.scss'],\n  providers: [DatePipe]\n})\nexport class ExperienceComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n  inWork = [];\n  checkDate = false;\n\n  constructor(private fb: FormBuilder, private candidateService: CandidateService, public globalService: GlobalService,\n    public authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    this.setValues('experiences');\n    this.setValues('trainings');\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  /**\n   * init form controls\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      levelOfStudies: new FormControl(this.candidateService.candidate['levelOfStudies'] ? this.candidateService.candidate['levelOfStudies'] : null),\n      experiences: this.fb.array([this.getExperienceFields()]),\n      trainings: this.fb.array([this.getTrainings()])\n    });\n  }\n\n  inWorkChange(i, event) {\n    if (this.inWork[i]) {\n      this.inWork[i] = false;\n      this.form.get('experiences')['controls'][i].get('endDate').value = null;\n    } else {\n      this.inWork[i] = true;\n    }\n  }\n\n  // inWorkChange(i) {\n  //   const end = this.form.get('experiences')['controls'][i].get('endDate').value.getTime();\n  //   const start = this.form.get('experiences')['controls'][i].get('startedDate').value.getTime();\n  //   return end <= start ? this.inWork = true : this.inWork = false;\n  // }\n\n  /**\n   * get experiences fields\n   */\n  private getExperienceFields(): FormGroup {\n    return this.fb.group({\n      job: new FormControl(null, Validators.required),\n      function: new FormControl(null, Validators.required),\n      startedDate: new FormControl(null, Validators.required),\n      endDate: new FormControl(null),\n      company: new FormControl(null, Validators.required),\n      activitySector: new FormControl(null, Validators.required),\n      location: new FormControl(null, Validators.required)\n    }, { validator: this.checkDates });\n  }\n\n  checkDates(group: FormGroup) {\n    if (!group.controls.endDate.value) {\n      return false;\n    }\n    const min = new Date(group.controls.startedDate.value).setHours(0, 0, 0, 0);\n    const max = new Date(group.controls.endDate.value).setHours(0, 0, 0, 0);\n    if (min === max || min > max) {\n      return { dateError: true };\n    }\n  }\n\n  /**\n   * get Trainings\n   */\n  private getTrainings(): FormGroup {\n    return this.fb.group({\n      name: new FormControl(null, Validators.required),\n      studyLevel: new FormControl(null, Validators.required),\n      typeOfTraining: new FormControl(null, Validators.required),\n      yearOfGraduation: new FormControl(null, Validators.required),\n      school: new FormControl(null, Validators.required),\n      location: new FormControl(null, Validators.required)\n    });\n  }\n\n  /**\n   * set values\n   * @param control\n   */\n  private setValues(control: string) {\n    if (this.candidateService.candidate[control] && this.candidateService.candidate[control].length > 0) {\n      let fields = <FormArray>this.form.controls[control];\n      fields.controls.splice(0);\n      fields.controls = [];\n      this.candidateService.candidate[control].forEach((val) => {\n        // this.inWork.push();\n        // console.log(val.experiences);\n        this.inWork = this.candidateService.candidate.experiences.map(x => {\n          return x.endDate ? true : false;\n        });\n        console.log(this.inWork);\n        fields.push(this.fb.group(val));\n      });\n    }\n  }\n\n  /**\n   * add field to form array\n   * @param ctrl\n   */\n  addField(ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.push(ctrl === 'experiences' ? this.getExperienceFields() : this.getTrainings());\n  }\n\n  /**\n   * remove field from form array\n   * @param index\n   * @param ctrl\n   */\n  removeField(index: number, ctrl: string): void {\n    const control = this.form.get(ctrl) as FormArray;\n    control.removeAt(index);\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    let value = this.form.value;\n    for (let val of value['experiences']) {\n      if (!val.endDate) {\n        val.endDate === null;\n      }\n    }\n    for (let training of value['trainings']) {\n      training.yearOfGraduation = typeof training.yearOfGraduation === 'number' ? training.yearOfGraduation :\n        new Date(training.yearOfGraduation).getFullYear();\n    }\n    const percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    console.log(percentage);\n    console.log(value);\n    this.candidateService.changeInfos(Object.assign(value, {\n      currentStep: 4,\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe(res => {\n      this.candidateService.candidate = res;\n      this.authService.user = res;\n      this.candidateService.setPercentage(this.authService.user.percentage);\n      Redirection.infoPlus();\n    });\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL2ZpbmFsLXN0YXRlL2ZpbmFsLXN0YXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { AfterViewChecked, Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ModalController } from '@ionic/angular';\nimport { PreviewCandidateComponent } from 'src/app/shared/components';\nimport { Candidate } from 'src/app/core/models/classes';\nimport { Redirection } from 'src/app/core/utils';\n\n@Component({\n  selector: 'app-final-state',\n  templateUrl: './final-state.component.html',\n  styleUrls: ['./final-state.component.scss']\n})\nexport class FinalStateComponent {\n\n  constructor(public candidateService: CandidateService, public authService: AuthService, public modalController: ModalController) {}\n\n  /**\n   * preview profil\n   */\n  async previewProfil() {\n    const modal = await this.modalController.create({\n      component: PreviewCandidateComponent\n    });\n    return await modal.present();\n  }\n\n  onClear() {\n    this.candidateService.changeInfos({\n      currentStep: 8,\n      completed: true\n    }).subscribe(res => {\n      this.candidateService.candidate = res;\n      this.authService.user = res;\n      Redirection.candidateDashboard();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL2luZm8tcGx1cy9pbmZvLXBsdXMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-info-plus',\n  templateUrl: './info-plus.component.html',\n  styleUrls: ['./info-plus.component.scss']\n})\nexport class InfoPlusComponent implements OnInit {\n\n  form: FormGroup;\n  languagesList = [];\n  value;\n  fileUploder = false;\n  oldPercentage = 0;\n\n  constructor(private fb: FormBuilder, public globalService: GlobalService, public candidateService: CandidateService,\n    public authService: AuthService, private router: Router) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    this.value = { file: this.candidateService.candidate ? this.candidateService.candidate['cv'] : null, type: 'simple-cv' };\n    if (this.candidateService.candidate['languages'] && this.candidateService.candidate['languages'].length > 0) {\n      console.log(this.candidateService.candidate['languages']);\n      this.candidateService.candidate['languages'].forEach(item => {\n        const languageIndex = this.globalService.languages.findIndex(x => x._id === item.language);\n        const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === item.languageLevel);\n        this.languagesList.push({\n          language: this.globalService.languages[languageIndex],\n          languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n        });\n      });\n    }\n    if (this.candidateService.candidate['programingLanguages']) {\n      console.log(this.candidateService.candidate['programingLanguages']['language']);\n    }\n    this.oldPercentage = Helper.calculePercentage(Object.assign(this.form.value, { languages: this.languagesList }), 0, 1.96);\n  }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      languages: new FormGroup({\n        language: new FormControl(null),\n        languageLevel: new FormControl(null)\n      }),\n      programingLanguages: new FormGroup({\n        language: new FormControl(this.candidateService.candidate['programingLanguages'] ? this.candidateService.candidate['programingLanguages']['language'] : []),\n        logiciel: new FormControl(this.candidateService.candidate['programingLanguages'] ? this.candidateService.candidate['programingLanguages']['logiciel'] : [])\n      }),\n      cv: new FormControl(this.candidateService.candidate['cv'], Validators.required),\n      webSite: new FormControl(this.candidateService.candidate['webSite']),\n      blog: new FormControl(this.candidateService.candidate['blog']),\n      linkedin: new FormControl(this.candidateService.candidate['linkedin']),\n      instagram: new FormControl(this.candidateService.candidate['instagram']),\n      twitter: new FormControl(this.candidateService.candidate['twitter']),\n      facebook: new FormControl(this.candidateService.candidate['facebook'])\n    });\n  }\n\n  addLanguage() {\n    const value = this.form.get('languages').value;\n    if (value) {\n      const languageIndex = this.globalService.languages.findIndex(x => x._id === value.language);\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(x => x._id === value.languageLevel);\n      this.languagesList.push({\n        language: this.globalService.languages[languageIndex],\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex]\n      });\n      this.form.get('languages').reset();\n    }\n  }\n\n  deleteLanguage(i: number) {\n    this.languagesList.splice(i, 1);\n  }\n\n  fileChanges(value) {\n    this.form.patchValue({\n      cv: value\n    });\n    this.fileUploder = true;\n  }\n\n  onSave(): void {\n    let value = this.form.value;\n    delete value['languages'];\n    value.languages = this.languagesList.map(x => ({\n      language: x.language._id,\n      languageLevel: x.languageLevel._id\n    }));\n    const percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    console.log('New percent : ', percentage);\n    this.candidateService.changeInfos(Object.assign(value, {\n      currentStep: 5,\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe(res => {\n      console.log(res);\n      this.candidateService.candidate = res;\n      this.authService.user = res;\n      this.candidateService.setPercentage(this.authService.user.percentage);\n      Redirection.values();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL2pvYi1pbmZvL2pvYi1pbmZvLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n@Component({\n  selector: 'app-job-info',\n  templateUrl: './job-info.component.html',\n  styleUrls: ['./job-info.component.scss']\n})\nexport class JobInfoComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n  dropdownSettings: IDropdownSettings;\n  selectedItems = [];\n\n  constructor(private candidateService: CandidateService, public globalService: GlobalService, public authService: AuthService, private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    console.log(this.authService.user.picture);\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: '_id',\n      textField: 'name',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 0,\n      allowSearchFilter: true,\n      enableCheckAll: false,\n    };\n  }\n\n  onItemSelect(event) {\n    // this.selectedItems.push(item);\n    // console.log(this.selectedItems);\n    console.log(event);\n  }\n  OnItemDeSelect(event) {\n    // this.selectedItems.slice(item);\n    // this.selectedItems = this.selectedItems.filter(worker => worker !== item);\n    console.log(event);\n  }\n  /**\n   * init job infos form\n   */\n  private initForm(): void {\n    this.form = this.fb.group({\n      searchedPost: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['searchedPost'] : null, Validators.required),\n      jobType: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['jobType'] : null , Validators.required),\n      jobMode: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['jobMode'] : null, Validators.required),\n      supposedSalaryMin: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['supposedSalaryMin'] : null, Validators.required),\n      supposedSalaryMax: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['supposedSalaryMax'] : null, Validators.required),\n      usageTitles: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['usageTitles'] : []),\n      functions: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['functions'] : []),\n      activitySector: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['activitySector'] : []),\n      locations: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['locations'] : []),\n      contracts: new FormControl(this.candidateService.candidate ? this.candidateService.candidate['contracts'] : []),\n    }, { validator: this.checkSupposedSalary });\n  }\n\n  checkSupposedSalary(group: FormGroup) {\n    const min = group.controls.supposedSalaryMin.value;\n    const max = group.controls.supposedSalaryMax.value;\n    return min < max ? null : { salaryErreur: true };\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    let value = this.form.value;\n    // value['usageTitles'] = value.usageTitles.map(x => x._id);\n    const percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    console.log('New percent : ', percentage);\n    this.candidateService.changeInfos(Object.assign(value, {\n      currentStep: 3,\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2)\n    })).subscribe(res => {\n      console.log(res);\n      this.candidateService.candidate = res;\n      this.authService.user = res;\n      this.candidateService.setPercentage(this.authService.user.percentage);\n      Redirection.profileExperiences();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL21haW4vbWFpbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { AlertController } from '@ionic/angular';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ChildActivationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Redirection } from 'src/app/core/utils';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  pageTitle: string;\n  subscription: Subscription;\n\n  constructor(public authService: AuthService, private router: Router, public candidateService: CandidateService, private alertController: AlertController) { }\n\n  ngOnInit(): void {\n    this.subscription = this.router.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        if (event.snapshot.firstChild.data.title) {\n          this.pageTitle = event.snapshot.firstChild.data.title;\n        }\n      }\n    });\n  }\n\n  back(): void {\n    let step = this.authService.user.currentStep ? this.authService.user.currentStep : 0;\n    switch (step) {\n      case 1:\n        Redirection.profile();\n        break;\n      case 2:\n        Redirection.addProfile();\n        break;\n      case 3:\n        Redirection.jobInfo();\n        break;\n      case 4:\n        Redirection.profileExperiences();\n        break;\n      case 5:\n        Redirection.infoPlus();\n        break;\n      case 6:\n        Redirection.values();\n        break;\n      case 7:\n        Redirection.profileVideo();\n        break;\n    }\n    console.log(step);\n    this.authService.user.currentStep = --step;\n  }\n\n  async desconnect() {\n    const alertSave = await this.alertController.create({\n      header: 'Confirmation!',\n      message: 'Souhaitez-vous enregistrer les données et continuez l\\'inscription plus tard ?',\n      buttons: [\n        {\n          text: 'NON',\n          role: 'cancel'\n        }, {\n          text: 'OUI',\n          handler: async () => {\n            const desconnect = await this.alertController.create({\n              header: 'Confirmation!',\n              message: 'Souhaitez-vous vous déconnecter ? ',\n              buttons: [\n                {\n                  text: 'NON',\n                  role: 'cancel'\n                }, {\n                  text: 'OUI',\n                  handler: () => {\n                    this.authService.logout();\n                  }\n                }\n              ]\n            });\n            await desconnect.present();\n          }\n        }\n      ]\n    });\n    await alertSave.present();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL3BlcnNvbmFsLWluZm8vcGVyc29uYWwtaW5mby5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\n\n@Component({\n  selector: 'app-personal-info',\n  templateUrl: './personal-info.component.html',\n  styleUrls: ['./personal-info.component.scss'],\n})\nexport class PersonalInfoComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n  constructor(private candidateService: CandidateService, public authService: AuthService, public globalService: GlobalService) {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.form = new FormGroup({\n      firstName: new FormControl(this.candidateService.candidate['firstName'] ? this.candidateService.candidate['firstName'] : null, Validators.required),\n      lastName: new FormControl(this.candidateService.candidate['lastName'] ? this.candidateService.candidate['lastName'] : null, Validators.required),\n      birthday: new FormControl(this.candidateService.candidate['birthday'] ? this.candidateService.candidate['birthday'] : null, Validators.required),\n      gender: new FormControl(this.candidateService.candidate['gender'] ? this.candidateService.candidate['gender'] : null, Validators.required),\n      phoneNumber: new FormControl(this.candidateService.candidate['phoneNumber'] ? this.candidateService.candidate['phoneNumber'] : null, Validators.required),\n      availability: new FormControl(this.candidateService.candidate['availability'] ? this.candidateService.candidate['availability'] : null, Validators.required),\n      experienceYears: new FormControl(this.candidateService.candidate['experienceYears'] ? this.candidateService.candidate['experienceYears'] : null, Validators.required),\n      currentJob: new FormControl(this.candidateService.candidate['currentJob'] ? this.candidateService.candidate['currentJob'] : null, Validators.required),\n      currentSalary: new FormControl(this.candidateService.candidate['currentSalary']  ? this.candidateService.candidate['currentSalary'] : null, Validators.required),\n      managerialLevel: new FormControl(this.candidateService.candidate['managerialLevel'] ? this.candidateService.candidate['managerialLevel'] : null, Validators.required),\n      effective: new FormControl(this.candidateService.candidate['effective'] ? this.candidateService.candidate['effective'] : null, Validators.required),\n      goal: new FormControl(this.candidateService.candidate['goal'] ? this.candidateService.candidate['goal'] : null, Validators.required),\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.authService.user.currentStep >= 0) {\n      this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n      console.log(this.oldPercentage);\n      console.log(this.authService.user.percentage);\n    }\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    let value = this.form.value;\n    let percentage = Helper.calculePercentage(value, (Number(this.authService.user.percentage) ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    console.log('New percent : ', percentage = (Math.round(percentage * 100) / 100 + 3.92).toFixed(2));\n    this.candidateService.changeInfos(Object.assign(value, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2),\n      currentStep: 1\n    })).subscribe(res => {\n      if (res) {\n        console.log(res);\n        this.authService.user = res;\n        this.candidateService.candidate = res;\n        this.candidateService.setPercentage(this.authService.user.percentage);\n        Redirection.addProfile();\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL3ByZXZpZXctcHJvZmlsL3ByZXZpZXctcHJvZmlsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { Candidate } from 'src/app/core/models/classes';\nimport { GlobalService } from 'src/app/core/services/global/global.service';\n\n@Component({\n  selector: 'app-preview-profil',\n  templateUrl: './preview-profil.component.html',\n  styleUrls: ['./preview-profil.component.scss']\n})\nexport class PreviewProfilComponent implements OnInit {\n\n  candidate;\n  constructor(public candidateService: CandidateService, public authService: AuthService,\n    private globalService: GlobalService) { }\n\n  \n  ngOnInit(): void {\n    this.candidate = {\n      currentJob: this.candidateService.candidate['currentJob'],\n      goal: this.candidateService.candidate['goal'],\n      currentLocation: this.candidateService.candidate['currentLocation']\n    };\n    this.setTrainings();\n    this.setExperiences();\n    this.setSkills();\n    this.setValues();\n    this.setLanguages();\n    console.log(this.candidateService.candidate);\n    console.log('aaa');\n  }\n  ionViewDidEnter(): void { \n    console.log('bbbb');\n  }\n  /**\n   * set training to candidate\n   */\n  private setTrainings() {\n    this.candidate['trainings'] = this.candidateService.candidate['trainings'].map((x: any) => {\n      const studyLevelIndex = this.globalService.levelOfStudies.findIndex(s => (s._id === x.studyLevel));\n      const typeOfTrainingIndex = this.globalService.typeOfTrainings.findIndex(s => (s._id === x.typeOfTraining));\n      return {\n        yearOfGraduation: x.yearOfGraduation,\n        studyLevel: this.globalService.levelOfStudies[studyLevelIndex].name,\n        typeOfTraining: this.globalService.typeOfTrainings[typeOfTrainingIndex].name,\n      };\n    });\n  }\n\n  /**\n   * set experience to candidate\n   */\n  private setExperiences() {\n    this.candidate['experiences'] = this.candidateService.candidate['trainings'].map((x: any) => {\n      const experienceYearsIndex = this.globalService.experiences.findIndex(s => (s._id === x.experienceYears));\n      const locationIndex = this.globalService.locations.findIndex(s => (s._id === x.location));\n      return {\n        experienceYears: this.globalService.experiences[experienceYearsIndex].name,\n        location: this.globalService.locations[locationIndex].name,\n      };\n    });\n  }\n\n  /**\n   * set value to candidate\n   */\n  private setValues() {\n    this.candidate['values'] = this.candidateService.candidate['values'].map((x: any) => {\n      const valueIndex = this.globalService.values.findIndex(s => (s._id === x.value));\n      return {\n        value: this.globalService.values[valueIndex].name,\n      };\n    });\n  }\n\n  /**\n   * set skills to candidate\n   */\n  private setSkills() {\n    this.candidate['skills'] = this.candidateService.candidate['skills'].map((x: any) => {\n      const softSkillIndex = this.globalService.softSkills.findIndex(s => (s._id === x.softSkill));\n      const managerialLevelIndex = this.globalService.managerialLevels.findIndex(s => (s._id === x.managerialLevel));\n      return {\n        softSkill: this.globalService.softSkills[softSkillIndex].name,\n        managerialLevel: this.globalService.managerialLevels[managerialLevelIndex].name,\n      };\n    });\n  }\n\n  /**\n   * set languages to candidate\n   */\n  private setLanguages() {\n    this.candidate['skills'] = this.candidateService.candidate['skills'].map((x: any) => {\n      const languageIndex = this.globalService.languages.findIndex(s => (s._id === x.softSkill));\n      const languageLevelIndex = this.globalService.languagesLevels.findIndex(s => (s._id === x.managerialLevel));\n      return {\n        language: this.globalService.languages[languageIndex].name,\n        languageLevel: this.globalService.languagesLevels[languageLevelIndex].name,\n      };\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL3VwbG9hZC12aWRlby91cGxvYWQtdmlkZW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Response } from 'src/app/core/models/interfaces';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\n\n@Component({\n  selector: 'app-upload-video',\n  templateUrl: './upload-video.component.html',\n  styleUrls: ['./upload-video.component.scss']\n})\nexport class UploadVideoComponent implements OnInit {\n\n  form: FormGroup;\n  file;\n  value;\n  videoSizeError;\n  oldPercentage = 0;\n\n  constructor(private candidateService: CandidateService, public authService: AuthService) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    console.log(this.candidateService.candidate);\n    this.value = { file: this.candidateService.candidate['video'] ? this.candidateService.candidate['video'] : null, type: 'video' };\n    if (this.value.file) {\n      this.oldPercentage = 1.96;\n    }\n  }\n\n  /**\n   * init form\n   */\n  private initForm(): void {\n    this.form = new FormGroup({\n      video: new FormControl(this.candidateService.candidate['video'])\n    });\n  }\n\n  /**\n   * \n   * @param value \n   */\n  fileChanges(value) {\n    this.form.setValue({'video': value})\n  }\n\n  /**\n   * on save\n   */\n  onSave() {\n    let value = this.form.value;\n    let percentage = Helper.calculePercentage(value, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    value = Object.assign(value, { 'percentage': (Math.round(percentage * 100) / 100).toFixed(2), 'currentStep': 7 });\n    console.log('New percent : ', percentage);\n    this.candidateService.changeInfos(value).subscribe(res => {\n      console.log(res);\n      this.candidateService.candidate = res;\n      this.authService.user = res;\n      this.candidateService.setPercentage(this.authService.user.percentage);\n      Redirection.finalStep();\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbC9jb21wb25lbnRzL3ZhbHVlcy92YWx1ZXMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from 'src/app/core/services/crud/candidate.service';\nimport { Redirection, Helper } from 'src/app/core/utils';\nimport { AuthService } from 'src/app/core/services/global/auth.service';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-values',\n  templateUrl: './values.component.html',\n  styleUrls: ['./values.component.scss']\n})\nexport class ValuesComponent implements OnInit {\n\n  form: FormGroup;\n  oldPercentage = 0;\n\n  constructor(private candidateService: CandidateService,\n    public authService: AuthService, public modalController: ModalController) {\n    this.initForm();\n  }\n\n  ngOnInit() {\n    this.oldPercentage = Helper.calculePercentage(this.form.value, 0, 1.96);\n  }\n\n  /**\n   * init form\n   */\n  initForm(): void {\n    this.form = new FormGroup({\n      values: new FormControl(this.candidateService.candidate['values'] ? this.candidateService.candidate['values'] : []),\n      skills: new FormControl(this.candidateService.candidate['skills'] ? this.candidateService.candidate['skills'] : [])\n    });\n  }\n\n  /**\n   * on save\n   */\n  onSave(): void {\n    const val = this.form.value;\n    const percentage = Helper.calculePercentage(val, (this.authService.user.percentage ? Number(this.authService.user.percentage) : 0) - Number(this.oldPercentage), 1.96);\n    // console.log('New percent : ', percentage);\n    this.candidateService.changeInfos(Object.assign(val, {\n      percentage: (Math.round(percentage * 100) / 100).toFixed(2),\n      currentStep: 6\n    })).subscribe(res => {\n      console.log(res);\n      this.candidateService.candidate = res;\n      this.authService.user = res;\n      this.candidateService.setPercentage(this.authService.user.percentage);\n      Redirection.profileVideo();\n    });\n  }\n\n}\n","import { MainComponent } from './components/main/main.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddProfilComponent } from './components/add-profil/add-profil.component';\nimport { ExperienceComponent } from './components/experience/experience.component';\nimport { FinalStateComponent } from './components/final-state/final-state.component';\nimport { InfoPlusComponent } from './components/info-plus/info-plus.component';\nimport { JobInfoComponent } from './components/job-info/job-info.component';\nimport { PersonalInfoComponent } from './components/personal-info/personal-info.component';\nimport { PreviewProfilComponent } from './components/preview-profil/preview-profil.component';\nimport { UploadVideoComponent } from './components/upload-video/upload-video.component';\nimport { ValuesComponent } from './components/values/values.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    children: [\n      {\n        path: '',\n        component: PersonalInfoComponent,\n        data: { title: 'Informations générales' }\n      },\n      {\n        path: 'add-profil',\n        component: AddProfilComponent,\n        data: { title: 'Photo' }\n      },\n      {\n        path: 'job-info',\n        component: JobInfoComponent,\n        data: { title: 'Poste souhaité' }\n      },\n      {\n        path: 'experience',\n        component: ExperienceComponent,\n        data: { title: 'Expériences et formation' }\n      },\n      {\n        path: 'info-plus',\n        component: InfoPlusComponent,\n        data: { title: 'Compétences' }\n      },\n      {\n        path: 'upload-video',\n        component: UploadVideoComponent,\n        data: { title: 'Vidéo' }\n      },\n      {\n        path: 'values',\n        component: ValuesComponent,\n        data: { title: 'Values' }\n      },\n      {\n        path: 'final-steps',\n        component: FinalStateComponent,\n        data: { title: 'Dernière étape' }\n      },\n      {\n        path: 'preview-profil',\n        component: PreviewProfilComponent,\n        data: { title: 'Prévisualisation' }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AddProfilComponent } from './components/add-profil/add-profil.component';\nimport { ExperienceComponent } from './components/experience/experience.component';\nimport { FinalStateComponent } from './components/final-state/final-state.component';\nimport { InfoPlusComponent } from './components/info-plus/info-plus.component';\nimport { JobInfoComponent } from './components/job-info/job-info.component';\nimport { PersonalInfoComponent } from './components/personal-info/personal-info.component';\nimport { PreviewProfilComponent } from './components/preview-profil/preview-profil.component';\nimport { UploadVideoComponent } from './components/upload-video/upload-video.component';\nimport { ValuesComponent } from './components/values/values.component';\nimport { MainComponent } from './components/main/main.component';\n\n@NgModule({\n  declarations: [\n    PersonalInfoComponent,\n    AddProfilComponent,\n    JobInfoComponent,\n    ExperienceComponent,\n    InfoPlusComponent,\n    UploadVideoComponent,\n    ValuesComponent,\n    FinalStateComponent,\n    PreviewProfilComponent,\n    MainComponent,\n  ],\n  imports: [\n    SharedModule,\n    DashboardRoutingModule\n  ]\n})\nexport class DashboardModule { }\n"],"sourceRoot":"webpack:///"}